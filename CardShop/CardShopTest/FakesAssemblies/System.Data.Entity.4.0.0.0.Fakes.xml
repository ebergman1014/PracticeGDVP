<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.Entity.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemDataEntityDelegates">
            <summary>Contains custom delegates used for the stubs and shims of System.Data.Entity</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder">
            <summary>Shim type of System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.JoinOf1DbExpressionDbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpressionM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0},System.Data.Common.CommandTrees.DbProjectExpression})">
            <summary>Sets the shim of DbExpressionBuilder.Join(DbExpression outer, DbExpression inner, Func`2&lt;DbExpression,DbExpression&gt; outerKey, Func`2&lt;DbExpression,DbExpression&gt; innerKey, Func`3&lt;DbExpression,DbExpression,!!0&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SelectManyOf1DbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpressionM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0},System.Data.Common.CommandTrees.DbProjectExpression})">
            <summary>Sets the shim of DbExpressionBuilder.SelectMany(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; apply, Func`3&lt;DbExpression,DbExpression,!!0&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SelectOf1DbExpressionFuncOfDbExpressionM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0},System.Data.Common.CommandTrees.DbProjectExpression})">
            <summary>Sets the shim of DbExpressionBuilder.Select(DbExpression source, Func`2&lt;DbExpression,!!0&gt; projection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AggregateDistinctEdmFunctionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.AggregateDistinct(EdmFunction function, DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AggregateEdmFunctionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Aggregate(EdmFunction function, DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AllDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.All(DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AllDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.All(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AndDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.And(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AnyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Any(DbExpression source)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AnyDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Any(DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AnyDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Any(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AsDbAggregateString">
            <summary>Sets the shim of DbExpressionBuilder.As(DbAggregate value, String alias)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.AsDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.As(DbExpression value, String alias)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BindAsDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.BindAs(DbExpression input, String varName)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.BindDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Bind(DbExpression input)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CaseIEnumerableOfDbExpressionIEnumerableOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Case(IEnumerable`1&lt;DbExpression&gt; whenExpressions, IEnumerable`1&lt;DbExpression&gt; thenExpressions, DbExpression elseExpression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CastToDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.CastTo(DbExpression argument, TypeUsage toType)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ConstantObject">
            <summary>Sets the shim of DbExpressionBuilder.Constant(Object value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ConstantTypeUsageObject">
            <summary>Sets the shim of DbExpressionBuilder.Constant(TypeUsage constantType, Object value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateApplyExpressionByKindDbExpressionKindDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CreateApplyExpressionByKind(DbExpressionKind applyKind, DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateElementExpressionUnwrapSinglePropertyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateElementExpressionUnwrapSingleProperty(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateIsNullExpressionAllowingRowTypeArgumentDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateIsNullExpressionAllowingRowTypeArgument(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateJoinExpressionByKindDbExpressionKindDbExpressionDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CreateJoinExpressionByKind(DbExpressionKind joinKind, DbExpression joinCondition, DbExpressionBinding input1, DbExpressionBinding input2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreatePrimitiveNullExpressionPrimitiveTypeKind">
            <summary>Sets the shim of DbExpressionBuilder.CreatePrimitiveNullExpression(PrimitiveTypeKind primitiveType)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreatePropertyExpressionFromMemberDbExpressionEdmMember">
            <summary>Sets the shim of DbExpressionBuilder.CreatePropertyExpressionFromMember(DbExpression instance, EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, DbExpression[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetEntityTypeDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, EntityType entityType, DbExpression[] keyValues)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetEntityTypeIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, EntityType entityType, IEnumerable`1&lt;DbExpression&gt; keyValues)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CreateRefEntitySetIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CreateRef(EntitySet entitySet, IEnumerable`1&lt;DbExpression&gt; keyValues)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CrossApplyDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CrossApply(DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CrossApplyDbExpressionFuncOfDbExpressionKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.CrossApply(DbExpression source, Func`2&lt;DbExpression,KeyValuePair`2&lt;String,DbExpression&gt;&gt; apply)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.CrossJoinIEnumerableOfDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.CrossJoin(IEnumerable`1&lt;DbExpressionBinding&gt; inputs)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.DerefDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Deref(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.DistinctDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Distinct(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.DivideDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Divide(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ElementDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Element(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.EqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Equal(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ExceptDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Except(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ExistsDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Exists(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ExtractAliasesMethodInfo">
            <summary>Sets the shim of DbExpressionBuilder.ExtractAliases(MethodInfo method)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FalseGet">
            <summary>Sets the shim of DbExpressionBuilder.get_False()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FilterDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Filter(DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FullOuterJoinDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.FullOuterJoin(DbExpressionBinding left, DbExpressionBinding right, DbExpression joinCondition)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.FullOuterJoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.FullOuterJoin(DbExpression left, DbExpression right, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; joinCondition)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GetEntityRefDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GetEntityRef(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GetRefKeyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GetRefKey(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GreaterThanDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GreaterThan(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GreaterThanOrEqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GreaterThanOrEqual(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupAggregateDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GroupAggregate(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupBindAsDbExpressionStringString">
            <summary>Sets the shim of DbExpressionBuilder.GroupBindAs(DbExpression input, String varName, String groupVarName)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupBindDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.GroupBind(DbExpression input)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.GroupByDbGroupExpressionBindingIEnumerableOfKeyValuePairOfStringDbExpressionIEnumerableOfKeyValuePairOfStringDbAggregate">
            <summary>Sets the shim of DbExpressionBuilder.GroupBy(DbGroupExpressionBinding input, IEnumerable`1&lt;KeyValuePair`2&lt;String,DbExpression&gt;&gt; keys, IEnumerable`1&lt;KeyValuePair`2&lt;String,DbAggregate&gt;&gt; aggregates)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InnerJoinDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.InnerJoin(DbExpressionBinding left, DbExpressionBinding right, DbExpression joinCondition)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InnerJoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.InnerJoin(DbExpression left, DbExpression right, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; joinCondition)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IntersectDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Intersect(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeDbLambdaDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(DbLambda lambda, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeDbLambdaIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(DbLambda lambda, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeEdmFunctionDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(EdmFunction function, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.InvokeEdmFunctionIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Invoke(EdmFunction function, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsEmptyDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.IsEmpty(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsNullDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.IsNull(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsOfDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.IsOf(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.IsOfOnlyDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.IsOfOnly(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.JoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Join(DbExpression outer, DbExpression inner, Func`2&lt;DbExpression,DbExpression&gt; outerKey, Func`2&lt;DbExpression,DbExpression&gt; innerKey)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LambdaDbExpressionDbVariableReferenceExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.Lambda(DbExpression body, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LambdaDbExpressionIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DbExpressionBuilder.Lambda(DbExpression body, IEnumerable`1&lt;DbVariableReferenceExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LeftOuterJoinDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding left, DbExpressionBinding right, DbExpression joinCondition)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LeftOuterJoinDbExpressionDbExpressionFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LeftOuterJoin(DbExpression left, DbExpression right, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; joinCondition)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LessThanDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LessThan(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LessThanOrEqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.LessThanOrEqual(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LikeDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Like(DbExpression argument, DbExpression pattern)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LikeDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Like(DbExpression argument, DbExpression pattern, DbExpression escape)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.LimitDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Limit(DbExpression argument, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.MinusDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Minus(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ModuloDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Modulo(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.MultiplyDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Multiply(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NavigateAllowingAllRelationshipsInSameTypeHierarchyDbExpressionRelationshipEndMemberRelationshipEndMember">
            <summary>Sets the shim of DbExpressionBuilder.NavigateAllowingAllRelationshipsInSameTypeHierarchy(DbExpression navigateFrom, RelationshipEndMember fromEnd, RelationshipEndMember toEnd)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NavigateDbExpressionRelationshipEndMemberRelationshipEndMember">
            <summary>Sets the shim of DbExpressionBuilder.Navigate(DbExpression navigateFrom, RelationshipEndMember fromEnd, RelationshipEndMember toEnd)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NavigateRelationshipTypeStringStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Navigate(RelationshipType type, String fromEndName, String toEndName, DbExpression navigateFrom)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NegateDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Negate(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewCollectionDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.NewCollection(DbExpression[] elements)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewCollectionIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.NewCollection(IEnumerable`1&lt;DbExpression&gt; elements)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewEmptyCollectionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.NewEmptyCollection(TypeUsage collectionType)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewRowIEnumerableOfKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.NewRow(IEnumerable`1&lt;KeyValuePair`2&lt;String,DbExpression&gt;&gt; columnValues)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewTypeUsageDbExpressionArray">
            <summary>Sets the shim of DbExpressionBuilder.New(TypeUsage instanceType, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NewTypeUsageIEnumerableOfDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.New(TypeUsage instanceType, IEnumerable`1&lt;DbExpression&gt; arguments)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NotDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Not(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NotEqualDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.NotEqual(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.NullTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.Null(TypeUsage nullType)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OfTypeDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.OfType(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OfTypeOnlyDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.OfTypeOnly(DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Or(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.OrderBy(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDbExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.OrderBy(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDescendingDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.OrderByDescending(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OrderByDescendingDbExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.OrderByDescending(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OuterApplyDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbExpressionBuilder.OuterApply(DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.OuterApplyDbExpressionFuncOfDbExpressionKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.OuterApply(DbExpression source, Func`2&lt;DbExpression,KeyValuePair`2&lt;String,DbExpression&gt;&gt; apply)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ParameterTypeUsageString">
            <summary>Sets the shim of DbExpressionBuilder.Parameter(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PlusDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Plus(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ProjectDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Project(DbExpressionBinding input, DbExpression projection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionEdmProperty">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, EdmProperty propertyMetadata)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionNavigationProperty">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, NavigationProperty navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionRelationshipEndMember">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, RelationshipEndMember relationshipEnd)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.PropertyDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.Property(DbExpression instance, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.RefFromKeyEntitySetDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.RefFromKey(EntitySet entitySet, DbExpression keyRow)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.RefFromKeyEntitySetDbExpressionEntityType">
            <summary>Sets the shim of DbExpressionBuilder.RefFromKey(EntitySet entitySet, DbExpression keyRow, EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ScanEntitySetBase">
            <summary>Sets the shim of DbExpressionBuilder.Scan(EntitySetBase targetSet)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SelectManyDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.SelectMany(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; apply)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SkipDbExpressionBindingIEnumerableOfDbSortClauseDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Skip(DbExpressionBinding input, IEnumerable`1&lt;DbSortClause&gt; sortOrder, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SkipDbSortExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Skip(DbSortExpression argument, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.SortDbExpressionBindingIEnumerableOfDbSortClause">
            <summary>Sets the shim of DbExpressionBuilder.Sort(DbExpressionBinding input, IEnumerable`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.StaticConstructor">
            <summary>Sets the shim of DbExpressionBuilder.DbExpressionBuilder()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TakeDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Take(DbExpression argument, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDbSortExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ThenBy(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDbSortExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ThenBy(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDescendingDbSortExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ThenByDescending(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ThenByDescendingDbSortExpressionFuncOfDbExpressionDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ThenByDescending(DbSortExpression source, Func`2&lt;DbExpression,DbExpression&gt; sortKey, String collation)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClause(DbExpression key)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClause(DbExpression key, String collation)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDescendingDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClauseDescending(DbExpression key)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.ToSortClauseDescendingDbExpressionString">
            <summary>Sets the shim of DbExpressionBuilder.ToSortClauseDescending(DbExpression key, String collation)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TreatAsDbExpressionTypeUsage">
            <summary>Sets the shim of DbExpressionBuilder.TreatAs(DbExpression argument, TypeUsage treatType)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.TrueGet">
            <summary>Sets the shim of DbExpressionBuilder.get_True()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.UnaryMinusDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.UnaryMinus(DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.UnionAllDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.UnionAll(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.UnionDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Union(DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.VariableTypeUsageString">
            <summary>Sets the shim of DbExpressionBuilder.Variable(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimDbExpressionBuilder.WhereDbExpressionFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbExpressionBuilder.Where(DbExpression source, Func`2&lt;DbExpression,DbExpression&gt; predicate)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions">
            <summary>Shim type of System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AbsDbExpression">
            <summary>Sets the shim of EdmFunctions.Abs(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddDaysDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddDays(DbExpression dateValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddHoursDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddHours(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMicrosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMicroseconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMillisecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMilliseconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMinutesDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMinutes(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddMonthsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddMonths(DbExpression dateValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddNanosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddNanoseconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddSecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddSeconds(DbExpression timeValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AddYearsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.AddYears(DbExpression dateValue, DbExpression addValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.AverageDbExpression">
            <summary>Sets the shim of EdmFunctions.Average(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseAndDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseAnd(DbExpression value1, DbExpression value2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseNotDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseNot(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseOrDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseOr(DbExpression value1, DbExpression value2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.BitwiseXorDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.BitwiseXor(DbExpression value1, DbExpression value2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CeilingDbExpression">
            <summary>Sets the shim of EdmFunctions.Ceiling(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ConcatDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Concat(DbExpression string1, DbExpression string2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ContainsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Contains(DbExpression searchedString, DbExpression searchedForString)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CountDbExpression">
            <summary>Sets the shim of EdmFunctions.Count(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CreateDateTimeDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.CreateDateTime(DbExpression year, DbExpression month, DbExpression day, DbExpression hour, DbExpression minute, DbExpression second)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CreateDateTimeOffsetDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.CreateDateTimeOffset(DbExpression year, DbExpression month, DbExpression day, DbExpression hour, DbExpression minute, DbExpression second, DbExpression timeZoneOffset)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CreateTimeDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.CreateTime(DbExpression hour, DbExpression minute, DbExpression second)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CurrentDateTime">
            <summary>Sets the shim of EdmFunctions.CurrentDateTime()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CurrentDateTimeOffset">
            <summary>Sets the shim of EdmFunctions.CurrentDateTimeOffset()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.CurrentUtcDateTime">
            <summary>Sets the shim of EdmFunctions.CurrentUtcDateTime()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DayDbExpression">
            <summary>Sets the shim of EdmFunctions.Day(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DayOfYearDbExpression">
            <summary>Sets the shim of EdmFunctions.DayOfYear(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffDaysDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffDays(DbExpression dateValue1, DbExpression dateValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffHoursDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffHours(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMicrosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMicroseconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMillisecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMilliseconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMinutesDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMinutes(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffMonthsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffMonths(DbExpression dateValue1, DbExpression dateValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffNanosecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffNanoseconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffSecondsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffSeconds(DbExpression timeValue1, DbExpression timeValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.DiffYearsDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.DiffYears(DbExpression dateValue1, DbExpression dateValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.EndsWithDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.EndsWith(DbExpression stringArgument, DbExpression suffix)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.FloorDbExpression">
            <summary>Sets the shim of EdmFunctions.Floor(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.GetTotalOffsetMinutesDbExpression">
            <summary>Sets the shim of EdmFunctions.GetTotalOffsetMinutes(DbExpression dateTimeOffsetArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.HourDbExpression">
            <summary>Sets the shim of EdmFunctions.Hour(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.IndexOfDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.IndexOf(DbExpression searchString, DbExpression stringToFind)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.InvokeCanonicalFunctionStringDbExpressionArray">
            <summary>Sets the shim of EdmFunctions.InvokeCanonicalFunction(String functionName, DbExpression[] arguments)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.LeftDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Left(DbExpression stringArgument, DbExpression length)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.LengthDbExpression">
            <summary>Sets the shim of EdmFunctions.Length(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.LongCountDbExpression">
            <summary>Sets the shim of EdmFunctions.LongCount(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MaxDbExpression">
            <summary>Sets the shim of EdmFunctions.Max(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MillisecondDbExpression">
            <summary>Sets the shim of EdmFunctions.Millisecond(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MinDbExpression">
            <summary>Sets the shim of EdmFunctions.Min(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MinuteDbExpression">
            <summary>Sets the shim of EdmFunctions.Minute(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.MonthDbExpression">
            <summary>Sets the shim of EdmFunctions.Month(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.NewGuid">
            <summary>Sets the shim of EdmFunctions.NewGuid()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.PowerDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Power(DbExpression baseArgument, DbExpression exponent)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ReplaceDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Replace(DbExpression stringArgument, DbExpression toReplace, DbExpression replacement)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ReverseDbExpression">
            <summary>Sets the shim of EdmFunctions.Reverse(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.RightDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Right(DbExpression stringArgument, DbExpression length)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.RoundDbExpression">
            <summary>Sets the shim of EdmFunctions.Round(DbExpression value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.RoundDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Round(DbExpression value, DbExpression digits)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.SecondDbExpression">
            <summary>Sets the shim of EdmFunctions.Second(DbExpression timeValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.StDevDbExpression">
            <summary>Sets the shim of EdmFunctions.StDev(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.StDevPDbExpression">
            <summary>Sets the shim of EdmFunctions.StDevP(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.StartsWithDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.StartsWith(DbExpression stringArgument, DbExpression prefix)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.SubstringDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Substring(DbExpression stringArgument, DbExpression start, DbExpression length)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.SumDbExpression">
            <summary>Sets the shim of EdmFunctions.Sum(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ToLowerDbExpression">
            <summary>Sets the shim of EdmFunctions.ToLower(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.ToUpperDbExpression">
            <summary>Sets the shim of EdmFunctions.ToUpper(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TrimDbExpression">
            <summary>Sets the shim of EdmFunctions.Trim(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TrimEndDbExpression">
            <summary>Sets the shim of EdmFunctions.TrimEnd(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TrimStartDbExpression">
            <summary>Sets the shim of EdmFunctions.TrimStart(DbExpression stringArgument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TruncateDbExpressionDbExpression">
            <summary>Sets the shim of EdmFunctions.Truncate(DbExpression value, DbExpression digits)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.TruncateTimeDbExpression">
            <summary>Sets the shim of EdmFunctions.TruncateTime(DbExpression dateValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.VarDbExpression">
            <summary>Sets the shim of EdmFunctions.Var(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.VarPDbExpression">
            <summary>Sets the shim of EdmFunctions.VarP(DbExpression collection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimEdmFunctions.YearDbExpression">
            <summary>Sets the shim of EdmFunctions.Year(DbExpression dateValue)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow">
            <summary>Shim type of System.Data.Common.CommandTrees.ExpressionBuilder.Row</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.#ctor(System.Data.Common.CommandTrees.ExpressionBuilder.Row)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.ConstructorKeyValuePairOfStringDbExpressionKeyValuePairOfStringDbExpressionArray">
            <summary>Sets the shim of Row.Row(KeyValuePair`2&lt;String,DbExpression&gt; columnValue, KeyValuePair`2&lt;String,DbExpression&gt;[] columnValues)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.ImplicitOpRowDbExpression">
            <summary>Sets the shim of Row.op_Implicit(Row row)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.ToExpression">
            <summary>Sets the shim of Row.ToExpression()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Fakes.ShimRow.AllInstances.ToExpression">
            <summary>Sets the shim of Row.ToExpression()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions">
            <summary>Shim type of System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AreaDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Area(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AsBinaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.AsBinary(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AsGmlDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.AsGml(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.AsTextDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.AsText(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.CentroidDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Centroid(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.CoordinateSystemIdDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.CoordinateSystemId(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.DistanceDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Distance(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.ElevationDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Elevation(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.EndPointDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.EndPoint(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.ExteriorRingDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.ExteriorRing(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyCollectionFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyCollectionFromBinary(DbExpression geographyCollectionWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyCollectionFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyCollectionFromText(DbExpression geographyCollectionWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromBinaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromBinary(DbExpression wellKnownBinaryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromBinary(DbExpression wellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromGmlDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromGml(DbExpression geographyMarkup)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromGmlDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromGml(DbExpression geographyMarkup, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromTextDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromText(DbExpression wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyFromText(DbExpression wellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyLineFromBinary(DbExpression lineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyLineFromText(DbExpression lineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiLineFromBinary(DbExpression multiLineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiLineFromText(DbExpression multiLineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPointFromBinary(DbExpression multiPointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPointFromText(DbExpression multiPointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPolygonFromBinary(DbExpression multiPolygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyMultiPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyMultiPolygonFromText(DbExpression multiPolygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPointFromBinary(DbExpression pointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPointFromText(DbExpression pointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPolygonFromBinary(DbExpression polygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeographyPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeographyPolygonFromText(DbExpression polygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryCollectionFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryCollectionFromBinary(DbExpression geometryCollectionWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryCollectionFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryCollectionFromText(DbExpression geometryCollectionWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromBinaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromBinary(DbExpression wellKnownBinaryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromBinary(DbExpression wellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromGmlDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromGml(DbExpression geometryMarkup)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromGmlDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromGml(DbExpression geometryMarkup, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromTextDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromText(DbExpression wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryFromText(DbExpression wellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryLineFromBinary(DbExpression lineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryLineFromText(DbExpression lineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiLineFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiLineFromBinary(DbExpression multiLineWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiLineFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiLineFromText(DbExpression multiLineWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPointFromBinary(DbExpression multiPointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPointFromText(DbExpression multiPointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPolygonFromBinary(DbExpression multiPolygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryMultiPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryMultiPolygonFromText(DbExpression multiPolygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPointFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPointFromBinary(DbExpression pointWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPointFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPointFromText(DbExpression pointWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPolygonFromBinaryDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPolygonFromBinary(DbExpression polygonWellKnownBinaryValue, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.GeometryPolygonFromTextDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.GeometryPolygonFromText(DbExpression polygonWellKnownText, DbExpression coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.InteriorRingAtDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.InteriorRingAt(DbExpression geometryValue, DbExpression indexValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.InteriorRingCountDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.InteriorRingCount(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsClosedSpatialDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsClosedSpatial(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsEmptySpatialDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsEmptySpatial(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsRingDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsRing(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsSimpleGeometryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsSimpleGeometry(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.IsValidGeometryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.IsValidGeometry(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.LatitudeDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Latitude(DbExpression geographyValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.LongitudeDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Longitude(DbExpression geographyValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.MeasureDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.Measure(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.PointAtDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.PointAt(DbExpression spatialValue, DbExpression indexValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.PointCountDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.PointCount(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.PointOnSurfaceDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.PointOnSurface(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialBoundaryDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialBoundary(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialBufferDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialBuffer(DbExpression spatialValue, DbExpression distance)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialContainsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialContains(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialConvexHullDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialConvexHull(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialCrossesDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialCrosses(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialDifferenceDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialDifference(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialDimensionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialDimension(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialDisjointDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialDisjoint(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialElementAtDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialElementAt(DbExpression spatialValue, DbExpression indexValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialElementCountDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialElementCount(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialEnvelopeDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialEnvelope(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialEqualsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialEquals(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialIntersectionDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialIntersection(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialIntersectsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialIntersects(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialLengthDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialLength(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialOverlapsDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialOverlaps(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialRelateDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialRelate(DbExpression geometryValue1, DbExpression geometryValue2, DbExpression intersectionPatternMatrix)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialSymmetricDifferenceDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialSymmetricDifference(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialTouchesDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialTouches(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialTypeNameDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialTypeName(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialUnionDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialUnion(DbExpression spatialValue1, DbExpression spatialValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.SpatialWithinDbExpressionDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.SpatialWithin(DbExpression geometryValue1, DbExpression geometryValue2)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.StartPointDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.StartPoint(DbExpression spatialValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.XCoordinateDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.XCoordinate(DbExpression geometryValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.Fakes.ShimSpatialEdmFunctions.YCoordinateDbExpression">
            <summary>Sets the shim of SpatialEdmFunctions.YCoordinate(DbExpression geometryValue)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate">
            <summary>Shim type of System.Data.Common.CommandTrees.DbAggregate</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.#ctor(System.Data.Common.CommandTrees.DbAggregate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.ArgumentsGet">
            <summary>Sets the shim of DbAggregate.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.ResultTypeGet">
            <summary>Sets the shim of DbAggregate.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbAggregate.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAggregate.AllInstances.ResultTypeGet">
            <summary>Sets the shim of DbAggregate.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbAndExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.#ctor(System.Data.Common.CommandTrees.DbAndExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbAndExpression.DbAndExpression(TypeUsage booleanResultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbAndExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbAndExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbAndExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbApplyExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.#ctor(System.Data.Common.CommandTrees.DbApplyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.ApplyGet">
            <summary>Sets the shim of DbApplyExpression.get_Apply()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.ConstructorDbExpressionKindTypeUsageDbExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DbApplyExpression.DbApplyExpression(DbExpressionKind applyKind, TypeUsage resultRowCollectionTypeUsage, DbExpressionBinding input, DbExpressionBinding apply)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.InputGet">
            <summary>Sets the shim of DbApplyExpression.get_Input()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbApplyExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbApplyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.ApplyGet">
            <summary>Sets the shim of DbApplyExpression.get_Apply()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbApplyExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbApplyExpression.get_Input()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbArithmeticExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.#ctor(System.Data.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.ArgumentsGet">
            <summary>Sets the shim of DbArithmeticExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbArithmeticExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbArithmeticExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbArithmeticExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbArithmeticExpression.get_Arguments()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbBinaryExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.#ctor(System.Data.Common.CommandTrees.DbBinaryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.ConstructorDbExpressionKindTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbBinaryExpression.DbBinaryExpression(DbExpressionKind kind, TypeUsage type, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.LeftGet">
            <summary>Sets the shim of DbBinaryExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.RightGet">
            <summary>Sets the shim of DbBinaryExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.AllInstances.LeftGet">
            <summary>Sets the shim of DbBinaryExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbBinaryExpression.AllInstances.RightGet">
            <summary>Sets the shim of DbBinaryExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbCaseExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.#ctor(System.Data.Common.CommandTrees.DbCaseExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.ElseGet">
            <summary>Sets the shim of DbCaseExpression.get_Else()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.ThenGet">
            <summary>Sets the shim of DbCaseExpression.get_Then()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.WhenGet">
            <summary>Sets the shim of DbCaseExpression.get_When()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbCaseExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCaseExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.ElseGet">
            <summary>Sets the shim of DbCaseExpression.get_Else()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.ThenGet">
            <summary>Sets the shim of DbCaseExpression.get_Then()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCaseExpression.AllInstances.WhenGet">
            <summary>Sets the shim of DbCaseExpression.get_When()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbCastExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.#ctor(System.Data.Common.CommandTrees.DbCastExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbCastExpression.DbCastExpression(TypeUsage type, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbCastExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCastExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCastExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree">
            <summary>Shim type of System.Data.Common.CommandTrees.DbCommandTree</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.#ctor(System.Data.Common.CommandTrees.DbCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.ConstructorMetadataWorkspaceDataSpace">
            <summary>Sets the shim of DbCommandTree.DbCommandTree(MetadataWorkspace metadata, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.DataSpaceGet">
            <summary>Sets the shim of DbCommandTree.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.DumpXml">
            <summary>Sets the shim of DbCommandTree.DumpXml()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.IsValidDataSpaceDataSpace">
            <summary>Sets the shim of DbCommandTree.IsValidDataSpace(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.IsValidParameterNameString">
            <summary>Sets the shim of DbCommandTree.IsValidParameterName(String name)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.MetadataWorkspaceGet">
            <summary>Sets the shim of DbCommandTree.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.ParametersGet">
            <summary>Sets the shim of DbCommandTree.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.Print">
            <summary>Sets the shim of DbCommandTree.Print()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.StaticConstructor">
            <summary>Sets the shim of DbCommandTree.DbCommandTree()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.DataSpaceGet">
            <summary>Sets the shim of DbCommandTree.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.DumpXml">
            <summary>Sets the shim of DbCommandTree.DumpXml()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.MetadataWorkspaceGet">
            <summary>Sets the shim of DbCommandTree.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.ParametersGet">
            <summary>Sets the shim of DbCommandTree.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCommandTree.AllInstances.Print">
            <summary>Sets the shim of DbCommandTree.Print()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbComparisonExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.#ctor(System.Data.Common.CommandTrees.DbComparisonExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.ConstructorDbExpressionKindTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbComparisonExpression.DbComparisonExpression(DbExpressionKind kind, TypeUsage booleanResultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbComparisonExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbComparisonExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbComparisonExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbConstantExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.#ctor(System.Data.Common.CommandTrees.DbConstantExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.ConstructorTypeUsageObject">
            <summary>Sets the shim of DbConstantExpression.DbConstantExpression(TypeUsage resultType, Object value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.GetValue">
            <summary>Sets the shim of DbConstantExpression.GetValue()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.ValueGet">
            <summary>Sets the shim of DbConstantExpression.get_Value()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbConstantExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbConstantExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.GetValue">
            <summary>Sets the shim of DbConstantExpression.GetValue()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbConstantExpression.AllInstances.ValueGet">
            <summary>Sets the shim of DbConstantExpression.get_Value()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbCrossJoinExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.#ctor(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.ConstructorTypeUsageReadOnlyCollectionOfDbExpressionBinding">
            <summary>Sets the shim of DbCrossJoinExpression.DbCrossJoinExpression(TypeUsage collectionOfRowResultType, ReadOnlyCollection`1&lt;DbExpressionBinding&gt; inputs)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.InputsGet">
            <summary>Sets the shim of DbCrossJoinExpression.get_Inputs()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbCrossJoinExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbCrossJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbCrossJoinExpression.AllInstances.InputsGet">
            <summary>Sets the shim of DbCrossJoinExpression.get_Inputs()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree">
            <summary>Shim type of System.Data.Common.CommandTrees.DbDeleteCommandTree</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.#ctor(System.Data.Common.CommandTrees.DbDeleteCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbDeleteCommandTree.DbDeleteCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.HasReaderGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.PredicateGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.AllInstances.HasReaderGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDeleteCommandTree.AllInstances.PredicateGet">
            <summary>Sets the shim of DbDeleteCommandTree.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbDerefExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.#ctor(System.Data.Common.CommandTrees.DbDerefExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbDerefExpression.DbDerefExpression(TypeUsage entityResultType, DbExpression refExpr)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbDerefExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDerefExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDerefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbDistinctExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.#ctor(System.Data.Common.CommandTrees.DbDistinctExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbDistinctExpression.DbDistinctExpression(TypeUsage resultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbDistinctExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbDistinctExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbDistinctExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbElementExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.#ctor(System.Data.Common.CommandTrees.DbElementExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbElementExpression.DbElementExpression(TypeUsage resultType, DbExpression argument)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.ConstructorTypeUsageDbExpressionBoolean">
            <summary>Sets the shim of DbElementExpression.DbElementExpression(TypeUsage resultType, DbExpression argument, Boolean unwrapSingleProperty)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.IsSinglePropertyUnwrappedGet">
            <summary>Sets the shim of DbElementExpression.get_IsSinglePropertyUnwrapped()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbElementExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbElementExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbElementExpression.AllInstances.IsSinglePropertyUnwrappedGet">
            <summary>Sets the shim of DbElementExpression.get_IsSinglePropertyUnwrapped()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbEntityRefExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.#ctor(System.Data.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbEntityRefExpression.DbEntityRefExpression(TypeUsage refResultType, DbExpression entity)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbEntityRefExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbEntityRefExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbEntityRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbExceptExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.#ctor(System.Data.Common.CommandTrees.DbExceptExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbExceptExpression.DbExceptExpression(TypeUsage resultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExceptExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExceptExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbExceptExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.#ctor(System.Data.Common.CommandTrees.DbExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.CheckExpressionKindDbExpressionKind">
            <summary>Sets the shim of DbExpression.CheckExpressionKind(DbExpressionKind kind)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ConstructorDbExpressionKindTypeUsage">
            <summary>Sets the shim of DbExpression.DbExpression(DbExpressionKind kind, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.EqualsObject">
            <summary>Sets the shim of DbExpression.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ExpressionKindGet">
            <summary>Sets the shim of DbExpression.get_ExpressionKind()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromBinaryByteArray">
            <summary>Sets the shim of DbExpression.FromBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromBooleanNullableOfBoolean">
            <summary>Sets the shim of DbExpression.FromBoolean(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromByteNullableOfByte">
            <summary>Sets the shim of DbExpression.FromByte(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromDateTimeNullableOfDateTime">
            <summary>Sets the shim of DbExpression.FromDateTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of DbExpression.FromDateTimeOffset(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromDecimalNullableOfDecimal">
            <summary>Sets the shim of DbExpression.FromDecimal(Nullable`1&lt;Decimal&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromDoubleNullableOfDouble">
            <summary>Sets the shim of DbExpression.FromDouble(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromGeographyDbGeography">
            <summary>Sets the shim of DbExpression.FromGeography(DbGeography value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromGeometryDbGeometry">
            <summary>Sets the shim of DbExpression.FromGeometry(DbGeometry value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromGuidNullableOfGuid">
            <summary>Sets the shim of DbExpression.FromGuid(Nullable`1&lt;Guid&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromInt16NullableOfInt16">
            <summary>Sets the shim of DbExpression.FromInt16(Nullable`1&lt;Int16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromInt32NullableOfInt32">
            <summary>Sets the shim of DbExpression.FromInt32(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromInt64NullableOfInt64">
            <summary>Sets the shim of DbExpression.FromInt64(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromSingleNullableOfSingle">
            <summary>Sets the shim of DbExpression.FromSingle(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.FromStringString">
            <summary>Sets the shim of DbExpression.FromString(String value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.GetHashCode">
            <summary>Sets the shim of DbExpression.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpByteArrayDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpDbGeographyDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(DbGeography value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpDbGeometryDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(DbGeometry value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfBooleanDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfByteDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDateTimeDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDateTimeOffsetDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDecimalDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Decimal&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfDoubleDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfGuidDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Guid&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfInt16DbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Int16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfInt32DbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfInt64DbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpNullableOfSingleDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ImplicitOpStringDbExpression">
            <summary>Sets the shim of DbExpression.op_Implicit(String value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.Print">
            <summary>Sets the shim of DbExpression.Print()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.ResultTypeGet">
            <summary>Sets the shim of DbExpression.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.EqualsObject">
            <summary>Sets the shim of DbExpression.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.ExpressionKindGet">
            <summary>Sets the shim of DbExpression.get_ExpressionKind()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.GetHashCode01">
            <summary>Sets the shim of DbExpression.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.Print">
            <summary>Sets the shim of DbExpression.Print()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpression.AllInstances.ResultTypeGet">
            <summary>Sets the shim of DbExpression.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding">
            <summary>Shim type of System.Data.Common.CommandTrees.DbExpressionBinding</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.#ctor(System.Data.Common.CommandTrees.DbExpressionBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.ConstructorDbExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DbExpressionBinding.DbExpressionBinding(DbExpression input, DbVariableReferenceExpression varRef)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.ExpressionGet">
            <summary>Sets the shim of DbExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.VariableGet">
            <summary>Sets the shim of DbExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.VariableNameGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.VariableTypeGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.ExpressionGet">
            <summary>Sets the shim of DbExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.VariableGet">
            <summary>Sets the shim of DbExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.VariableNameGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionBinding.AllInstances.VariableTypeGet">
            <summary>Sets the shim of DbExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor">
            <summary>Shim type of System.Data.Common.CommandTrees.DbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.#ctor(System.Data.Common.CommandTrees.DbExpressionVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.Constructor">
            <summary>Sets the shim of DbExpressionVisitor.DbExpressionVisitor()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor.AllInstances.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1">
            <summary>Shim type of System.Data.Common.CommandTrees.DbExpressionVisitor`1</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.#ctor(System.Data.Common.CommandTrees.DbExpressionVisitor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.Constructor">
            <summary>Sets the shim of DbExpressionVisitor`1.DbExpressionVisitor`1()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbExpressionVisitor`1.AllInstances.VisitDbLambdaExpression">
            <summary>Sets the shim of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbFilterExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.#ctor(System.Data.Common.CommandTrees.DbFilterExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.ConstructorTypeUsageDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbFilterExpression.DbFilterExpression(TypeUsage resultType, DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.InputGet">
            <summary>Sets the shim of DbFilterExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.PredicateGet">
            <summary>Sets the shim of DbFilterExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbFilterExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFilterExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbFilterExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFilterExpression.AllInstances.PredicateGet">
            <summary>Sets the shim of DbFilterExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate">
            <summary>Shim type of System.Data.Common.CommandTrees.DbFunctionAggregate</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.#ctor(System.Data.Common.CommandTrees.DbFunctionAggregate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.DistinctGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Distinct()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.FunctionGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Function()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.AllInstances.DistinctGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Distinct()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionAggregate.AllInstances.FunctionGet">
            <summary>Sets the shim of DbFunctionAggregate.get_Function()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree">
            <summary>Shim type of System.Data.Common.CommandTrees.DbFunctionCommandTree</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.#ctor(System.Data.Common.CommandTrees.DbFunctionCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.ConstructorMetadataWorkspaceDataSpaceEdmFunctionTypeUsageIEnumerableOfKeyValuePairOfStringTypeUsage">
            <summary>Sets the shim of DbFunctionCommandTree.DbFunctionCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, EdmFunction edmFunction, TypeUsage resultType, IEnumerable`1&lt;KeyValuePair`2&lt;String,TypeUsage&gt;&gt; parameters)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.EdmFunctionGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_EdmFunction()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.GetParameters">
            <summary>Sets the shim of DbFunctionCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.ResultTypeGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances.EdmFunctionGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_EdmFunction()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances.GetParameters">
            <summary>Sets the shim of DbFunctionCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionCommandTree.AllInstances.ResultTypeGet">
            <summary>Sets the shim of DbFunctionCommandTree.get_ResultType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbFunctionExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.#ctor(System.Data.Common.CommandTrees.DbFunctionExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.ArgumentsGet">
            <summary>Sets the shim of DbFunctionExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.FunctionGet">
            <summary>Sets the shim of DbFunctionExpression.get_Function()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbFunctionExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbFunctionExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbFunctionExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbFunctionExpression.AllInstances.FunctionGet">
            <summary>Sets the shim of DbFunctionExpression.get_Function()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbGroupAggregate">
            <summary>Shim type of System.Data.Common.CommandTrees.DbGroupAggregate</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupAggregate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupAggregate.#ctor(System.Data.Common.CommandTrees.DbGroupAggregate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupAggregate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupAggregate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupAggregate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbGroupAggregate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbGroupByExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.#ctor(System.Data.Common.CommandTrees.DbGroupByExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AggregatesGet">
            <summary>Sets the shim of DbGroupByExpression.get_Aggregates()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.InputGet">
            <summary>Sets the shim of DbGroupByExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.KeysGet">
            <summary>Sets the shim of DbGroupByExpression.get_Keys()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbGroupByExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbGroupByExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.AggregatesGet">
            <summary>Sets the shim of DbGroupByExpression.get_Aggregates()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbGroupByExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupByExpression.AllInstances.KeysGet">
            <summary>Sets the shim of DbGroupByExpression.get_Keys()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding">
            <summary>Shim type of System.Data.Common.CommandTrees.DbGroupExpressionBinding</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.#ctor(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.ConstructorDbExpressionDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DbGroupExpressionBinding.DbGroupExpressionBinding(DbExpression input, DbVariableReferenceExpression inputRef, DbVariableReferenceExpression groupRef)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.ExpressionGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupAggregateGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupAggregate()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupVariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariable()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupVariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableName()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.GroupVariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableType()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.VariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.VariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.VariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.ExpressionGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupAggregateGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupAggregate()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupVariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariable()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupVariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableName()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.GroupVariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_GroupVariableType()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.VariableGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_Variable()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.VariableNameGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableName()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbGroupExpressionBinding.AllInstances.VariableTypeGet">
            <summary>Sets the shim of DbGroupExpressionBinding.get_VariableType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree">
            <summary>Shim type of System.Data.Common.CommandTrees.DbInsertCommandTree</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.#ctor(System.Data.Common.CommandTrees.DbInsertCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBindingReadOnlyCollectionOfDbModificationClauseDbExpression">
            <summary>Sets the shim of DbInsertCommandTree.DbInsertCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target, ReadOnlyCollection`1&lt;DbModificationClause&gt; setClauses, DbExpression returning)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.HasReaderGet">
            <summary>Sets the shim of DbInsertCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.ReturningGet">
            <summary>Sets the shim of DbInsertCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.SetClausesGet">
            <summary>Sets the shim of DbInsertCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances.HasReaderGet">
            <summary>Sets the shim of DbInsertCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances.ReturningGet">
            <summary>Sets the shim of DbInsertCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbInsertCommandTree.AllInstances.SetClausesGet">
            <summary>Sets the shim of DbInsertCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbIntersectExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.#ctor(System.Data.Common.CommandTrees.DbIntersectExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbIntersectExpression.DbIntersectExpression(TypeUsage resultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbIntersectExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIntersectExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIntersectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbIsEmptyExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.#ctor(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbIsEmptyExpression.DbIsEmptyExpression(TypeUsage booleanResultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbIsEmptyExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsEmptyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsEmptyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbIsNullExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.#ctor(System.Data.Common.CommandTrees.DbIsNullExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.ConstructorTypeUsageDbExpressionBoolean">
            <summary>Sets the shim of DbIsNullExpression.DbIsNullExpression(TypeUsage booleanResultType, DbExpression arg, Boolean isRowTypeArgumentAllowed)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbIsNullExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsNullExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbIsOfExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.#ctor(System.Data.Common.CommandTrees.DbIsOfExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.ConstructorDbExpressionKindTypeUsageDbExpressionTypeUsage">
            <summary>Sets the shim of DbIsOfExpression.DbIsOfExpression(DbExpressionKind isOfKind, TypeUsage booleanResultType, DbExpression argument, TypeUsage isOfType)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.OfTypeGet">
            <summary>Sets the shim of DbIsOfExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbIsOfExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbIsOfExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbIsOfExpression.AllInstances.OfTypeGet">
            <summary>Sets the shim of DbIsOfExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbJoinExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.#ctor(System.Data.Common.CommandTrees.DbJoinExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.ConstructorDbExpressionKindTypeUsageDbExpressionBindingDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbJoinExpression.DbJoinExpression(DbExpressionKind joinKind, TypeUsage collectionOfRowResultType, DbExpressionBinding left, DbExpressionBinding right, DbExpression condition)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.JoinConditionGet">
            <summary>Sets the shim of DbJoinExpression.get_JoinCondition()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.LeftGet">
            <summary>Sets the shim of DbJoinExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.RightGet">
            <summary>Sets the shim of DbJoinExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbJoinExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbJoinExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.JoinConditionGet">
            <summary>Sets the shim of DbJoinExpression.get_JoinCondition()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.LeftGet">
            <summary>Sets the shim of DbJoinExpression.get_Left()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbJoinExpression.AllInstances.RightGet">
            <summary>Sets the shim of DbJoinExpression.get_Right()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLambda">
            <summary>Shim type of System.Data.Common.CommandTrees.DbLambda</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.#ctor(System.Data.Common.CommandTrees.DbLambda)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.BodyGet">
            <summary>Sets the shim of DbLambda.get_Body()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.ConstructorReadOnlyCollectionOfDbVariableReferenceExpressionDbExpression">
            <summary>Sets the shim of DbLambda.DbLambda(ReadOnlyCollection`1&lt;DbVariableReferenceExpression&gt; variables, DbExpression bodyExp)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateDbExpressionDbVariableReferenceExpressionArray">
            <summary>Sets the shim of DbLambda.Create(DbExpression body, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateDbExpressionIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DbLambda.Create(DbExpression body, IEnumerable`1&lt;DbVariableReferenceExpression&gt; variables)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageFuncOfDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, Func`2&lt;DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, Func`3&lt;DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, Func`4&lt;DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, Func`5&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, Func`6&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, Func`7&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, Func`8&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, Func`9&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, Func`10&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, Func`11&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, Func`12&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbEx">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, Func`13&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpre">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, Func`14&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressi">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, TypeUsage argument14Type, Func`15&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionD">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, TypeUsage argument14Type, TypeUsage argument15Type, Func`16&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.CreateTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageTypeUsageFuncOfDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbExpressionDbEx">
            <summary>Sets the shim of DbLambda.Create(TypeUsage argument1Type, TypeUsage argument2Type, TypeUsage argument3Type, TypeUsage argument4Type, TypeUsage argument5Type, TypeUsage argument6Type, TypeUsage argument7Type, TypeUsage argument8Type, TypeUsage argument9Type, TypeUsage argument10Type, TypeUsage argument11Type, TypeUsage argument12Type, TypeUsage argument13Type, TypeUsage argument14Type, TypeUsage argument15Type, TypeUsage argument16Type, Func`17&lt;DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression&gt; lambdaFunction)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.VariablesGet">
            <summary>Sets the shim of DbLambda.get_Variables()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.AllInstances.BodyGet">
            <summary>Sets the shim of DbLambda.get_Body()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambda.AllInstances.VariablesGet">
            <summary>Sets the shim of DbLambda.get_Variables()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbLambdaExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.#ctor(System.Data.Common.CommandTrees.DbLambdaExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.ArgumentsGet">
            <summary>Sets the shim of DbLambdaExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.LambdaGet">
            <summary>Sets the shim of DbLambdaExpression.get_Lambda()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbLambdaExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLambdaExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbLambdaExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLambdaExpression.AllInstances.LambdaGet">
            <summary>Sets the shim of DbLambdaExpression.get_Lambda()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbLikeExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.#ctor(System.Data.Common.CommandTrees.DbLikeExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.ArgumentGet">
            <summary>Sets the shim of DbLikeExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.ConstructorTypeUsageDbExpressionDbExpressionDbExpression">
            <summary>Sets the shim of DbLikeExpression.DbLikeExpression(TypeUsage booleanResultType, DbExpression input, DbExpression pattern, DbExpression escape)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.EscapeGet">
            <summary>Sets the shim of DbLikeExpression.get_Escape()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.PatternGet">
            <summary>Sets the shim of DbLikeExpression.get_Pattern()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbLikeExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLikeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.ArgumentGet">
            <summary>Sets the shim of DbLikeExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.EscapeGet">
            <summary>Sets the shim of DbLikeExpression.get_Escape()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLikeExpression.AllInstances.PatternGet">
            <summary>Sets the shim of DbLikeExpression.get_Pattern()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbLimitExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.#ctor(System.Data.Common.CommandTrees.DbLimitExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.ArgumentGet">
            <summary>Sets the shim of DbLimitExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.ConstructorTypeUsageDbExpressionDbExpressionBoolean">
            <summary>Sets the shim of DbLimitExpression.DbLimitExpression(TypeUsage resultType, DbExpression argument, DbExpression limit, Boolean withTies)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.LimitGet">
            <summary>Sets the shim of DbLimitExpression.get_Limit()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.WithTiesGet">
            <summary>Sets the shim of DbLimitExpression.get_WithTies()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbLimitExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbLimitExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.ArgumentGet">
            <summary>Sets the shim of DbLimitExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.LimitGet">
            <summary>Sets the shim of DbLimitExpression.get_Limit()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbLimitExpression.AllInstances.WithTiesGet">
            <summary>Sets the shim of DbLimitExpression.get_WithTies()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbModificationClause">
            <summary>Shim type of System.Data.Common.CommandTrees.DbModificationClause</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbModificationClause.#ctor(System.Data.Common.CommandTrees.DbModificationClause)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbModificationClause.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbModificationClause.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationClause.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationClause.Constructor">
            <summary>Sets the shim of DbModificationClause.DbModificationClause()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbModificationClause.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree">
            <summary>Shim type of System.Data.Common.CommandTrees.DbModificationCommandTree</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.#ctor(System.Data.Common.CommandTrees.DbModificationCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBinding">
            <summary>Sets the shim of DbModificationCommandTree.DbModificationCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.GetParameters">
            <summary>Sets the shim of DbModificationCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.TargetGet">
            <summary>Sets the shim of DbModificationCommandTree.get_Target()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.AllInstances.GetParameters">
            <summary>Sets the shim of DbModificationCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbModificationCommandTree.AllInstances.TargetGet">
            <summary>Sets the shim of DbModificationCommandTree.get_Target()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbNewInstanceExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.#ctor(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.ArgumentsGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.HasRelatedEntityReferencesGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_HasRelatedEntityReferences()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbNewInstanceExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNewInstanceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.ArgumentsGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNewInstanceExpression.AllInstances.HasRelatedEntityReferencesGet">
            <summary>Sets the shim of DbNewInstanceExpression.get_HasRelatedEntityReferences()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbNotExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.#ctor(System.Data.Common.CommandTrees.DbNotExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbNotExpression.DbNotExpression(TypeUsage booleanResultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbNotExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNotExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNotExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbNullExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.#ctor(System.Data.Common.CommandTrees.DbNullExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.ConstructorTypeUsage">
            <summary>Sets the shim of DbNullExpression.DbNullExpression(TypeUsage type)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbNullExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbNullExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbNullExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbOfTypeExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.#ctor(System.Data.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.ConstructorDbExpressionKindTypeUsageDbExpressionTypeUsage">
            <summary>Sets the shim of DbOfTypeExpression.DbOfTypeExpression(DbExpressionKind ofTypeKind, TypeUsage collectionResultType, DbExpression argument, TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.OfTypeGet">
            <summary>Sets the shim of DbOfTypeExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbOfTypeExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOfTypeExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOfTypeExpression.AllInstances.OfTypeGet">
            <summary>Sets the shim of DbOfTypeExpression.get_OfType()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbOrExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.#ctor(System.Data.Common.CommandTrees.DbOrExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbOrExpression.DbOrExpression(TypeUsage booleanResultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbOrExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbOrExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbOrExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbParameterReferenceExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.#ctor(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.ConstructorTypeUsageString">
            <summary>Sets the shim of DbParameterReferenceExpression.DbParameterReferenceExpression(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.ParameterNameGet">
            <summary>Sets the shim of DbParameterReferenceExpression.get_ParameterName()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbParameterReferenceExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbParameterReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbParameterReferenceExpression.AllInstances.ParameterNameGet">
            <summary>Sets the shim of DbParameterReferenceExpression.get_ParameterName()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbProjectExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.#ctor(System.Data.Common.CommandTrees.DbProjectExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.ConstructorTypeUsageDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbProjectExpression.DbProjectExpression(TypeUsage resultType, DbExpressionBinding input, DbExpression projection)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.InputGet">
            <summary>Sets the shim of DbProjectExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.ProjectionGet">
            <summary>Sets the shim of DbProjectExpression.get_Projection()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbProjectExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbProjectExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbProjectExpression.AllInstances.ProjectionGet">
            <summary>Sets the shim of DbProjectExpression.get_Projection()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbPropertyExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.#ctor(System.Data.Common.CommandTrees.DbPropertyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.ConstructorTypeUsageEdmMemberDbExpression">
            <summary>Sets the shim of DbPropertyExpression.DbPropertyExpression(TypeUsage resultType, EdmMember property, DbExpression instance)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.ImplicitOpDbPropertyExpressionKeyValuePairOfStringDbExpression">
            <summary>Sets the shim of DbPropertyExpression.op_Implicit(DbPropertyExpression value)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.InstanceGet">
            <summary>Sets the shim of DbPropertyExpression.get_Instance()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.PropertyGet">
            <summary>Sets the shim of DbPropertyExpression.get_Property()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.ToKeyValuePair">
            <summary>Sets the shim of DbPropertyExpression.ToKeyValuePair()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbPropertyExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbPropertyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.InstanceGet">
            <summary>Sets the shim of DbPropertyExpression.get_Instance()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.PropertyGet">
            <summary>Sets the shim of DbPropertyExpression.get_Property()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbPropertyExpression.AllInstances.ToKeyValuePair">
            <summary>Sets the shim of DbPropertyExpression.ToKeyValuePair()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbQuantifierExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.#ctor(System.Data.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.ConstructorDbExpressionKindTypeUsageDbExpressionBindingDbExpression">
            <summary>Sets the shim of DbQuantifierExpression.DbQuantifierExpression(DbExpressionKind kind, TypeUsage booleanResultType, DbExpressionBinding input, DbExpression predicate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.InputGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.PredicateGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbQuantifierExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbQuantifierExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQuantifierExpression.AllInstances.PredicateGet">
            <summary>Sets the shim of DbQuantifierExpression.get_Predicate()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree">
            <summary>Shim type of System.Data.Common.CommandTrees.DbQueryCommandTree</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.#ctor(System.Data.Common.CommandTrees.DbQueryCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpression">
            <summary>Sets the shim of DbQueryCommandTree.DbQueryCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.FromValidExpressionMetadataWorkspaceDataSpaceDbExpression">
            <summary>Sets the shim of DbQueryCommandTree.FromValidExpression(MetadataWorkspace metadata, DataSpace dataSpace, DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.GetParameters">
            <summary>Sets the shim of DbQueryCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.QueryGet">
            <summary>Sets the shim of DbQueryCommandTree.get_Query()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.AllInstances.GetParameters">
            <summary>Sets the shim of DbQueryCommandTree.GetParameters()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbQueryCommandTree.AllInstances.QueryGet">
            <summary>Sets the shim of DbQueryCommandTree.get_Query()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbRefExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.#ctor(System.Data.Common.CommandTrees.DbRefExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.ConstructorTypeUsageEntitySetDbExpression">
            <summary>Sets the shim of DbRefExpression.DbRefExpression(TypeUsage refResultType, EntitySet entitySet, DbExpression refKeys)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.EntitySetGet">
            <summary>Sets the shim of DbRefExpression.get_EntitySet()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbRefExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefExpression.AllInstances.EntitySetGet">
            <summary>Sets the shim of DbRefExpression.get_EntitySet()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbRefKeyExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.#ctor(System.Data.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbRefKeyExpression.DbRefKeyExpression(TypeUsage rowResultType, DbExpression reference)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbRefKeyExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRefKeyExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRefKeyExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.#ctor(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.ConstructorTypeUsageRelationshipTypeRelationshipEndMemberRelationshipEndMemberDbExpression">
            <summary>Sets the shim of DbRelationshipNavigationExpression.DbRelationshipNavigationExpression(TypeUsage resultType, RelationshipType relType, RelationshipEndMember fromEnd, RelationshipEndMember toEnd, DbExpression navigateFrom)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.NavigateFromGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateFrom()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.NavigateToGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateTo()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.NavigationSourceGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigationSource()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.RelationshipGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_Relationship()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbRelationshipNavigationExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbRelationshipNavigationExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.NavigateFromGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateFrom()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.NavigateToGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigateTo()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.NavigationSourceGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_NavigationSource()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbRelationshipNavigationExpression.AllInstances.RelationshipGet">
            <summary>Sets the shim of DbRelationshipNavigationExpression.get_Relationship()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbScanExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.#ctor(System.Data.Common.CommandTrees.DbScanExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.ConstructorTypeUsageEntitySetBase">
            <summary>Sets the shim of DbScanExpression.DbScanExpression(TypeUsage collectionOfEntityType, EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.TargetGet">
            <summary>Sets the shim of DbScanExpression.get_Target()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbScanExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbScanExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbScanExpression.AllInstances.TargetGet">
            <summary>Sets the shim of DbScanExpression.get_Target()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause">
            <summary>Shim type of System.Data.Common.CommandTrees.DbSetClause</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.#ctor(System.Data.Common.CommandTrees.DbSetClause)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.ConstructorDbExpressionDbExpression">
            <summary>Sets the shim of DbSetClause.DbSetClause(DbExpression targetProperty, DbExpression sourceValue)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.PropertyGet">
            <summary>Sets the shim of DbSetClause.get_Property()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.ValueGet">
            <summary>Sets the shim of DbSetClause.get_Value()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.AllInstances.PropertyGet">
            <summary>Sets the shim of DbSetClause.get_Property()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSetClause.AllInstances.ValueGet">
            <summary>Sets the shim of DbSetClause.get_Value()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbSkipExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.#ctor(System.Data.Common.CommandTrees.DbSkipExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.ConstructorTypeUsageDbExpressionBindingReadOnlyCollectionOfDbSortClauseDbExpression">
            <summary>Sets the shim of DbSkipExpression.DbSkipExpression(TypeUsage resultType, DbExpressionBinding input, ReadOnlyCollection`1&lt;DbSortClause&gt; sortOrder, DbExpression count)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.CountGet">
            <summary>Sets the shim of DbSkipExpression.get_Count()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.InputGet">
            <summary>Sets the shim of DbSkipExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.SortOrderGet">
            <summary>Sets the shim of DbSkipExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbSkipExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSkipExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.CountGet">
            <summary>Sets the shim of DbSkipExpression.get_Count()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbSkipExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSkipExpression.AllInstances.SortOrderGet">
            <summary>Sets the shim of DbSkipExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause">
            <summary>Shim type of System.Data.Common.CommandTrees.DbSortClause</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.#ctor(System.Data.Common.CommandTrees.DbSortClause)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.AscendingGet">
            <summary>Sets the shim of DbSortClause.get_Ascending()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.CollationGet">
            <summary>Sets the shim of DbSortClause.get_Collation()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.ConstructorDbExpressionBooleanString">
            <summary>Sets the shim of DbSortClause.DbSortClause(DbExpression key, Boolean asc, String collation)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.ExpressionGet">
            <summary>Sets the shim of DbSortClause.get_Expression()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances.AscendingGet">
            <summary>Sets the shim of DbSortClause.get_Ascending()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances.CollationGet">
            <summary>Sets the shim of DbSortClause.get_Collation()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortClause.AllInstances.ExpressionGet">
            <summary>Sets the shim of DbSortClause.get_Expression()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbSortExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.#ctor(System.Data.Common.CommandTrees.DbSortExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.ConstructorTypeUsageDbExpressionBindingReadOnlyCollectionOfDbSortClause">
            <summary>Sets the shim of DbSortExpression.DbSortExpression(TypeUsage resultType, DbExpressionBinding input, ReadOnlyCollection`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.InputGet">
            <summary>Sets the shim of DbSortExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.SortOrderGet">
            <summary>Sets the shim of DbSortExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbSortExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.InputGet">
            <summary>Sets the shim of DbSortExpression.get_Input()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbSortExpression.AllInstances.SortOrderGet">
            <summary>Sets the shim of DbSortExpression.get_SortOrder()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbTreatExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.#ctor(System.Data.Common.CommandTrees.DbTreatExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.ConstructorTypeUsageDbExpression">
            <summary>Sets the shim of DbTreatExpression.DbTreatExpression(TypeUsage asType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbTreatExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbTreatExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbTreatExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbUnaryExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.#ctor(System.Data.Common.CommandTrees.DbUnaryExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.ArgumentGet">
            <summary>Sets the shim of DbUnaryExpression.get_Argument()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.ConstructorDbExpressionKindTypeUsageDbExpression">
            <summary>Sets the shim of DbUnaryExpression.DbUnaryExpression(DbExpressionKind kind, TypeUsage resultType, DbExpression argument)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnaryExpression.AllInstances.ArgumentGet">
            <summary>Sets the shim of DbUnaryExpression.get_Argument()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbUnionAllExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.#ctor(System.Data.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.ConstructorTypeUsageDbExpressionDbExpression">
            <summary>Sets the shim of DbUnionAllExpression.DbUnionAllExpression(TypeUsage resultType, DbExpression left, DbExpression right)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbUnionAllExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUnionAllExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbUnionAllExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree">
            <summary>Shim type of System.Data.Common.CommandTrees.DbUpdateCommandTree</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.#ctor(System.Data.Common.CommandTrees.DbUpdateCommandTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.ConstructorMetadataWorkspaceDataSpaceDbExpressionBindingDbExpressionReadOnlyCollectionOfDbModificationClauseDbExpression">
            <summary>Sets the shim of DbUpdateCommandTree.DbUpdateCommandTree(MetadataWorkspace metadata, DataSpace dataSpace, DbExpressionBinding target, DbExpression predicate, ReadOnlyCollection`1&lt;DbModificationClause&gt; setClauses, DbExpression returning)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.HasReaderGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.PredicateGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Predicate()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.ReturningGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.SetClausesGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.HasReaderGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_HasReader()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.PredicateGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Predicate()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.ReturningGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_Returning()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbUpdateCommandTree.AllInstances.SetClausesGet">
            <summary>Sets the shim of DbUpdateCommandTree.get_SetClauses()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression">
            <summary>Shim type of System.Data.Common.CommandTrees.DbVariableReferenceExpression</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.#ctor(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.ConstructorTypeUsageString">
            <summary>Sets the shim of DbVariableReferenceExpression.DbVariableReferenceExpression(TypeUsage type, String name)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.VariableNameGet">
            <summary>Sets the shim of DbVariableReferenceExpression.get_VariableName()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances.AcceptOf1DbExpressionVisitorOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbExpressionVisitor{``0},``0})">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor`1&lt;!!0&gt; visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances.AcceptDbExpressionVisitor">
            <summary>Sets the shim of DbVariableReferenceExpression.Accept(DbExpressionVisitor visitor)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDbVariableReferenceExpression.AllInstances.VariableNameGet">
            <summary>Sets the shim of DbVariableReferenceExpression.get_VariableName()</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor">
            <summary>Shim type of System.Data.Common.CommandTrees.DefaultExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.#ctor(System.Data.Common.CommandTrees.DefaultExpressionVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.Constructor">
            <summary>Sets the shim of DefaultExpressionVisitor.DefaultExpressionVisitor()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnEnterScopeIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnExitScope">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnExpressionReplacedDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.OnVariableReboundDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitAggregateDbAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitEntitySetEntitySetBase">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionBindingListIListOfDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitExpressionListIListOfDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitFunctionAggregateDbFunctionAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitFunctionEdmFunction">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitGroupAggregateDbGroupAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitGroupExpressionBindingDbGroupExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitLambdaDbLambda">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitSortClauseDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitSortOrderIListOfDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitTypeEdmType">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.VisitTypeUsageTypeUsage">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnEnterScopeIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnExitScope">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnExpressionReplacedDbExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.OnVariableReboundDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitAggregateDbAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbAndExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbApplyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbArithmeticExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbCaseExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbCastExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbComparisonExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbConstantExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbCrossJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbDerefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbDistinctExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbElementExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbEntityRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbExceptExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbFilterExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbFunctionExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbGroupByExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIntersectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIsEmptyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIsNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbIsOfExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbJoinExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbLambdaExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbLikeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbLimitExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbNewInstanceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbNotExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbNullExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbOfTypeExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbOrExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbParameterReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbProjectExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbPropertyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbQuantifierExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbRefExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbRefKeyExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbRelationshipNavigationExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbScanExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbSkipExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbSortExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbTreatExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbUnionAllExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitDbVariableReferenceExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitEntitySetEntitySetBase">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionBindingDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionBindingListIListOfDbExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitExpressionListIListOfDbExpression">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitFunctionAggregateDbFunctionAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitFunctionEdmFunction">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitGroupAggregateDbGroupAggregate">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitGroupExpressionBindingDbGroupExpressionBinding">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitLambdaDbLambda">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitSortClauseDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitSortOrderIListOfDbSortClause">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitTypeEdmType">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.ShimDefaultExpressionVisitor.AllInstances.VisitTypeUsageTypeUsage">
            <summary>Sets the shim of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor">
            <summary>Stub type of System.Data.Common.CommandTrees.DbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubDbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1">
            <summary>Stub type of System.Data.Common.CommandTrees.DbExpressionVisitor`1</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.InitializeStub">
            <summary>Initializes a new instance of type StubDbExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbAndExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbApplyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbArithmeticExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbCaseExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbCastExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbComparisonExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbConstantExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbCrossJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbDerefExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbDistinctExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbElementExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbEntityRefExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbExceptExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbFilterExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbFunctionExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbGroupByExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIntersectExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIsEmptyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIsNullExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbIsOfExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbJoinExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbLambdaExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbLikeExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbLimitExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbNewInstanceExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbNotExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbNullExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbOfTypeExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbOrExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbProjectExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbPropertyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbQuantifierExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbRefExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbRefKeyExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbScanExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbSkipExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbSortExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbTreatExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbUnionAllExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of DbExpressionVisitor`1.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDbExpressionVisitor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor">
            <summary>Stub type of System.Data.Common.CommandTrees.DefaultExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultExpressionVisitor</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
            <summary>Sets the stub of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnEnterScopeIEnumerableOfDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnEnterScope(IEnumerable`1&lt;DbVariableReferenceExpression&gt; scopeVariables)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExitScope">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExitScope01">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExitScope()</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnExpressionReplacedDbExpressionDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnExpressionReplaced(DbExpression oldExpression, DbExpression newExpression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.OnVariableReboundDbVariableReferenceExpressionDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression fromVarRef, DbVariableReferenceExpression toVarRef)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitAggregateDbAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitAggregate(DbAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbAndExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbAndExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbApplyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbApplyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbArithmeticExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbArithmeticExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbCaseExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCaseExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbCastExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCastExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbComparisonExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbComparisonExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbConstantExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbConstantExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbCrossJoinExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbCrossJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbDerefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDerefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbDistinctExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbDistinctExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbElementExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbElementExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbEntityRefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbEntityRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbExceptExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExceptExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbFilterExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFilterExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbFunctionExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbFunctionExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbGroupByExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbGroupByExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIntersectExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIntersectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIsEmptyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsEmptyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIsNullExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbIsOfExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbIsOfExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbJoinExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbJoinExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbLambdaExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLambdaExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbLikeExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLikeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbLimitExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbLimitExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbNewInstanceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNewInstanceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbNotExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNotExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbNullExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbNullExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbOfTypeExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOfTypeExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbOrExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbOrExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbParameterReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbParameterReferenceExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbProjectExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbProjectExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbPropertyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbPropertyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbQuantifierExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbQuantifierExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbRefExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbRefKeyExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRefKeyExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbRelationshipNavigationExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbScanExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbScanExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbSkipExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSkipExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbSortExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbSortExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbTreatExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbTreatExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbUnionAllExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbUnionAllExpression expression)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitDbVariableReferenceExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.Visit(DbVariableReferenceExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitEntitySetEntitySetBase">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitEntitySet(EntitySetBase entitySet)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBindingDbExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionBindingListIListOfDbExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionBindingList(IList`1&lt;DbExpressionBinding&gt; list)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpression(DbExpression expression)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitExpressionListIListOfDbExpression">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitExpressionList(IList`1&lt;DbExpression&gt; list)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunctionAggregateDbFunctionAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitFunctionEdmFunction">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitFunction(EdmFunction functionMetadata)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupAggregateDbGroupAggregate">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate aggregate)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitGroupExpressionBindingDbGroupExpressionBinding">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding binding)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitLambdaDbLambda">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitLambda(DbLambda lambda)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortClauseDbSortClause">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortClause(DbSortClause clause)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitSortOrderIListOfDbSortClause">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitSortOrder(IList`1&lt;DbSortClause&gt; sortOrder)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitTypeEdmType">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitType(EdmType type)</summary>
        </member>
        <member name="M:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="F:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.VisitTypeUsageTypeUsage">
            <summary>Sets the stub of DefaultExpressionVisitor.VisitTypeUsage(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.CommandTrees.Fakes.StubDefaultExpressionVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser">
            <summary>Shim type of System.Data.Common.EntitySql.EntitySqlParser</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.#ctor(System.Data.Common.EntitySql.EntitySqlParser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.ParseLambdaStringDbVariableReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.ParseLambda(String query, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.ParseStringDbParameterReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.Parse(String query, DbParameterReferenceExpression[] parameters)</summary>
        </member>
        <member name="T:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.AllInstances.ParseLambdaStringDbVariableReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.ParseLambda(String query, DbVariableReferenceExpression[] variables)</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimEntitySqlParser.AllInstances.ParseStringDbParameterReferenceExpressionArray">
            <summary>Sets the shim of EntitySqlParser.Parse(String query, DbParameterReferenceExpression[] parameters)</summary>
        </member>
        <member name="T:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition">
            <summary>Shim type of System.Data.Common.EntitySql.FunctionDefinition</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.#ctor(System.Data.Common.EntitySql.FunctionDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.ConstructorStringDbLambdaInt32Int32">
            <summary>Sets the shim of FunctionDefinition.FunctionDefinition(String name, DbLambda lambda, Int32 startPosition, Int32 endPosition)</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.EndPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_EndPosition()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.LambdaGet">
            <summary>Sets the shim of FunctionDefinition.get_Lambda()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.NameGet">
            <summary>Sets the shim of FunctionDefinition.get_Name()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.StartPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_StartPosition()</summary>
        </member>
        <member name="T:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.EndPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_EndPosition()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.LambdaGet">
            <summary>Sets the shim of FunctionDefinition.get_Lambda()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.NameGet">
            <summary>Sets the shim of FunctionDefinition.get_Name()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimFunctionDefinition.AllInstances.StartPositionGet">
            <summary>Sets the shim of FunctionDefinition.get_StartPosition()</summary>
        </member>
        <member name="T:System.Data.Common.EntitySql.Fakes.ShimParseResult">
            <summary>Shim type of System.Data.Common.EntitySql.ParseResult</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimParseResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimParseResult.#ctor(System.Data.Common.EntitySql.ParseResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimParseResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.EntitySql.Fakes.ShimParseResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimParseResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimParseResult.CommandTreeGet">
            <summary>Sets the shim of ParseResult.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimParseResult.ConstructorDbCommandTreeListOfFunctionDefinition">
            <summary>Sets the shim of ParseResult.ParseResult(DbCommandTree commandTree, List`1&lt;FunctionDefinition&gt; functionDefs)</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimParseResult.FunctionDefinitionsGet">
            <summary>Sets the shim of ParseResult.get_FunctionDefinitions()</summary>
        </member>
        <member name="T:System.Data.Common.EntitySql.Fakes.ShimParseResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimParseResult.AllInstances.CommandTreeGet">
            <summary>Sets the shim of ParseResult.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.Common.EntitySql.Fakes.ShimParseResult.AllInstances.FunctionDefinitionsGet">
            <summary>Sets the shim of ParseResult.get_FunctionDefinitions()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDataRecordInfo">
            <summary>Shim type of System.Data.Common.DataRecordInfo</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDataRecordInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDataRecordInfo.#ctor(System.Data.Common.DataRecordInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDataRecordInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDataRecordInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.ConstructorDataRecordInfo">
            <summary>Sets the shim of DataRecordInfo.DataRecordInfo(DataRecordInfo recordInfo)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.ConstructorTypeUsage">
            <summary>Sets the shim of DataRecordInfo.DataRecordInfo(TypeUsage metadata)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.ConstructorTypeUsageIEnumerableOfEdmMember">
            <summary>Sets the shim of DataRecordInfo.DataRecordInfo(TypeUsage metadata, IEnumerable`1&lt;EdmMember&gt; memberInfo)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.FieldMetadataGet">
            <summary>Sets the shim of DataRecordInfo.get_FieldMetadata()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.RecordTypeGet">
            <summary>Sets the shim of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDataRecordInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.AllInstances.FieldMetadataGet">
            <summary>Sets the shim of DataRecordInfo.get_FieldMetadata()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDataRecordInfo.AllInstances.RecordTypeGet">
            <summary>Sets the shim of DataRecordInfo.get_RecordType()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbCommandDefinition">
            <summary>Shim type of System.Data.Common.DbCommandDefinition</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbCommandDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbCommandDefinition.#ctor(System.Data.Common.DbCommandDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbCommandDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbCommandDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.Constructor">
            <summary>Sets the shim of DbCommandDefinition.DbCommandDefinition()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.ConstructorDbCommand">
            <summary>Sets the shim of DbCommandDefinition.DbCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.CreateCommand">
            <summary>Sets the shim of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.CreateCommandDefinitionDbCommand">
            <summary>Sets the shim of DbCommandDefinition.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.PopulateParameterFromTypeUsageDbParameterTypeUsageBoolean">
            <summary>Sets the shim of DbCommandDefinition.PopulateParameterFromTypeUsage(DbParameter parameter, TypeUsage type, Boolean isOutParam)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.TryGetDbTypeFromPrimitiveTypePrimitiveTypeDbTypeOut">
            <summary>Sets the shim of DbCommandDefinition.TryGetDbTypeFromPrimitiveType(PrimitiveType type, DbType&amp; dbType)</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbCommandDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbCommandDefinition.AllInstances.CreateCommand">
            <summary>Sets the shim of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbProviderManifest">
            <summary>Shim type of System.Data.Common.DbProviderManifest</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbProviderManifest.#ctor(System.Data.Common.DbProviderManifest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbProviderManifest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbProviderManifest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.Constructor">
            <summary>Sets the shim of DbProviderManifest.DbProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.EscapeLikeArgumentString">
            <summary>Sets the shim of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.GetInformationString">
            <summary>Sets the shim of DbProviderManifest.GetInformation(String informationType)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.StaticConstructor">
            <summary>Sets the shim of DbProviderManifest.DbProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the shim of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbProviderManifest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.AllInstances.EscapeLikeArgumentString">
            <summary>Sets the shim of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.AllInstances.GetInformationString">
            <summary>Sets the shim of DbProviderManifest.GetInformation(String informationType)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderManifest.AllInstances.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the shim of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbProviderServices">
            <summary>Shim type of System.Data.Common.DbProviderServices</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbProviderServices.#ctor(System.Data.Common.DbProviderServices)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbProviderServices.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbProviderServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.Constructor">
            <summary>Sets the shim of DbProviderServices.DbProviderServices()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.CreateCommandDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommand(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.CreateCommandDefinitionDbCommand">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.CreateCommandDefinitionDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.CreateCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.CreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.CreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.DatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.DbGetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.DeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetConceptualSchemaDefinitionString">
            <summary>Sets the shim of DbProviderServices.GetConceptualSchemaDefinition(String csdlName)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetProviderFactoryDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderFactory(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetProviderFactoryString">
            <summary>Sets the shim of DbProviderServices.GetProviderFactory(String providerInvariantName)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetProviderManifestString">
            <summary>Sets the shim of DbProviderServices.GetProviderManifest(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetProviderManifestTokenDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetProviderServicesDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderServices(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetProviderServicesDbProviderFactory">
            <summary>Sets the shim of DbProviderServices.GetProviderServices(DbProviderFactory factory)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.GetXmlResourceString">
            <summary>Sets the shim of DbProviderServices.GetXmlResource(String resourceName)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.SetParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.ValidateDataSpaceDbCommandTree">
            <summary>Sets the shim of DbProviderServices.ValidateDataSpace(DbCommandTree commandTree)</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommand(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDefinitionDbCommand">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDefinitionDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.CreateCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the shim of DbProviderServices.CreateCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.CreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.CreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.CreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.DatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.DbGetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.DeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of DbProviderServices.DeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.GetProviderManifestString">
            <summary>Sets the shim of DbProviderServices.GetProviderManifest(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.GetProviderManifestTokenDbConnection">
            <summary>Sets the shim of DbProviderServices.GetProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.GetSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of DbProviderServices.GetSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.GetSpatialServicesString">
            <summary>Sets the shim of DbProviderServices.GetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.SetParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of DbProviderServices.SetParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbProviderServices.AllInstances.ValidateDataSpaceDbCommandTree">
            <summary>Sets the shim of DbProviderServices.ValidateDataSpace(DbCommandTree commandTree)</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest">
            <summary>Shim type of System.Data.Common.DbXmlEnabledProviderManifest</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.#ctor(System.Data.Common.DbXmlEnabledProviderManifest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.ConstructorXmlReader">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader reader)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.GetFacetDescriptionsEdmType">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.GetStoreFunctions">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.GetStoreTypes">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.NamespaceNameGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToStorePrimitiveType()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.GetFacetDescriptionsEdmType">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType type)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.GetStoreFunctions">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.GetStoreTypes">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.StoreTypeNameToEdmPrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimDbXmlEnabledProviderManifest.AllInstances.StoreTypeNameToStorePrimitiveTypeGet">
            <summary>Sets the shim of DbXmlEnabledProviderManifest.get_StoreTypeNameToStorePrimitiveType()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimEntityRecordInfo">
            <summary>Shim type of System.Data.Common.EntityRecordInfo</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimEntityRecordInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimEntityRecordInfo.#ctor(System.Data.Common.EntityRecordInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimEntityRecordInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimEntityRecordInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimEntityRecordInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimEntityRecordInfo.ConstructorDataRecordInfoEntityKeyEntitySet">
            <summary>Sets the shim of EntityRecordInfo.EntityRecordInfo(DataRecordInfo info, EntityKey entityKey, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimEntityRecordInfo.ConstructorEntityTypeEntityKeyEntitySet">
            <summary>Sets the shim of EntityRecordInfo.EntityRecordInfo(EntityType metadata, EntityKey entityKey, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimEntityRecordInfo.ConstructorEntityTypeIEnumerableOfEdmMemberEntityKeyEntitySet">
            <summary>Sets the shim of EntityRecordInfo.EntityRecordInfo(EntityType metadata, IEnumerable`1&lt;EdmMember&gt; memberInfo, EntityKey entityKey, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimEntityRecordInfo.EntityKeyGet">
            <summary>Sets the shim of EntityRecordInfo.get_EntityKey()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimEntityRecordInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimEntityRecordInfo.AllInstances.EntityKeyGet">
            <summary>Sets the shim of EntityRecordInfo.get_EntityKey()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimFieldMetadata">
            <summary>Shim type of System.Data.Common.FieldMetadata</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimFieldMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimFieldMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.ShimFieldMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.ShimFieldMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.ShimFieldMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.StubDataRecordInfo">
            <summary>Stub type of System.Data.Common.DataRecordInfo</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDataRecordInfo.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDataRecordInfo.InitializeStub">
            <summary>Initializes a new instance of type StubDataRecordInfo</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDataRecordInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDataRecordInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDataRecordInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.StubDbCommandDefinition">
            <summary>Stub type of System.Data.Common.DbCommandDefinition</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbCommandDefinition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbCommandDefinition.#ctor(System.Data.Common.DbCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbCommandDefinition.CreateCommand">
            <summary>Sets the stub of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbCommandDefinition.CreateCommand01">
            <summary>Sets the stub of DbCommandDefinition.CreateCommand()</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbCommandDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubDbCommandDefinition</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbCommandDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbCommandDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbCommandDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.StubDbProviderManifest">
            <summary>Stub type of System.Data.Common.DbProviderManifest</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.EscapeLikeArgument(System.String)">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.EscapeLikeArgumentString">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.GetDbInformation(System.String)">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.GetDbInformationString">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.GetEdmTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
            <summary>Sets the stub of DbProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.GetFacetDescriptionsEdmType">
            <summary>Sets the stub of DbProviderManifest.GetFacetDescriptions(EdmType edmType)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.GetStoreFunctions">
            <summary>Sets the stub of DbProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.GetStoreFunctions01">
            <summary>Sets the stub of DbProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.GetStoreTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.GetStoreTypes">
            <summary>Sets the stub of DbProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.GetStoreTypes01">
            <summary>Sets the stub of DbProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.InitializeStub">
            <summary>Initializes a new instance of type StubDbProviderManifest</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.NamespaceNameGet">
            <summary>Sets the stub of DbProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderManifest.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbProviderManifest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbProviderManifest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbProviderManifest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbProviderManifest.NamespaceName">
            <summary>Sets the stub of DbProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.StubDbProviderServices">
            <summary>Stub type of System.Data.Common.DbProviderServices</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
            <summary>Sets the stub of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.CreateCommandDefinitionDbCommand">
            <summary>Sets the stub of DbProviderServices.CreateCommandDefinition(DbCommand prototype)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
            <summary>Sets the stub of DbProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the stub of DbProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
            <summary>Sets the stub of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the stub of DbProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.DbGetSpatialServices(System.String)">
            <summary>Sets the stub of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.DbGetSpatialServicesString">
            <summary>Sets the stub of DbProviderServices.DbGetSpatialServices(String manifestToken)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.GetDbProviderManifest(System.String)">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifest(String manifestToken)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.GetDbProviderManifestString">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifest(String manifestToken)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.GetDbProviderManifestTokenDbConnection">
            <summary>Sets the stub of DbProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
            <summary>Sets the stub of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the stub of DbProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.InitializeStub">
            <summary>Initializes a new instance of type StubDbProviderServices</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
            <summary>Sets the stub of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbProviderServices.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the stub of DbProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbProviderServices.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbProviderServices.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbProviderServices.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest">
            <summary>Stub type of System.Data.Common.DbXmlEnabledProviderManifest</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.EscapeLikeArgument(System.String)">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.EscapeLikeArgumentString">
            <summary>Sets the stub of DbProviderManifest.EscapeLikeArgument(String argument)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetDbInformation(System.String)">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetDbInformationString">
            <summary>Sets the stub of DbProviderManifest.GetDbInformation(String informationType)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetEdmTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetEdmType(TypeUsage storeType)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType type)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetFacetDescriptionsEdmType">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType type)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreFunctions">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreFunctions01">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreFunctions()</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreTypeTypeUsage">
            <summary>Sets the stub of DbProviderManifest.GetStoreType(TypeUsage edmType)</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreTypes">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.GetStoreTypes01">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.GetStoreTypes()</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.InitializeStub">
            <summary>Initializes a new instance of type StubDbXmlEnabledProviderManifest</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.NamespaceNameGet">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="F:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.SupportsEscapingLikeArgumentCharOut">
            <summary>Sets the stub of DbProviderManifest.SupportsEscapingLikeArgument(Char&amp; escapeCharacter)</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubDbXmlEnabledProviderManifest.NamespaceName">
            <summary>Sets the stub of DbXmlEnabledProviderManifest.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Common.Fakes.StubEntityRecordInfo">
            <summary>Stub type of System.Data.Common.EntityRecordInfo</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubEntityRecordInfo.#ctor(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Common.Fakes.StubEntityRecordInfo.InitializeStub">
            <summary>Initializes a new instance of type StubEntityRecordInfo</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubEntityRecordInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubEntityRecordInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Common.Fakes.StubEntityRecordInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityCommand">
            <summary>Shim type of System.Data.EntityClient.EntityCommand</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityCommand.#ctor(System.Data.EntityClient.EntityCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityCommand.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityCommand.Bind(System.Data.IDbCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityCommand.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.Cancel">
            <summary>Sets the shim of EntityCommand.Cancel()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTextGet">
            <summary>Sets the shim of EntityCommand.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTextSetString">
            <summary>Sets the shim of EntityCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTimeoutGet">
            <summary>Sets the shim of EntityCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTimeoutSetInt32">
            <summary>Sets the shim of EntityCommand.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTreeGet">
            <summary>Sets the shim of EntityCommand.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTreeSetDbCommandTree">
            <summary>Sets the shim of EntityCommand.set_CommandTree(DbCommandTree value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTypeGet">
            <summary>Sets the shim of EntityCommand.get_CommandType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CommandTypeSetCommandType">
            <summary>Sets the shim of EntityCommand.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ConnectionGet">
            <summary>Sets the shim of EntityCommand.get_Connection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ConnectionSetEntityConnection">
            <summary>Sets the shim of EntityCommand.set_Connection(EntityConnection value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.Constructor">
            <summary>Sets the shim of EntityCommand.EntityCommand()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ConstructorString">
            <summary>Sets the shim of EntityCommand.EntityCommand(String statement)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ConstructorStringEntityConnection">
            <summary>Sets the shim of EntityCommand.EntityCommand(String statement, EntityConnection connection)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ConstructorStringEntityConnectionEntityTransaction">
            <summary>Sets the shim of EntityCommand.EntityCommand(String statement, EntityConnection connection, EntityTransaction transaction)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CreateDbParameter">
            <summary>Sets the shim of EntityCommand.CreateDbParameter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.CreateParameter">
            <summary>Sets the shim of EntityCommand.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.DbConnectionGet">
            <summary>Sets the shim of EntityCommand.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.DbConnectionSetDbConnection">
            <summary>Sets the shim of EntityCommand.set_DbConnection(DbConnection value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.DbParameterCollectionGet">
            <summary>Sets the shim of EntityCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.DbTransactionGet">
            <summary>Sets the shim of EntityCommand.get_DbTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.DbTransactionSetDbTransaction">
            <summary>Sets the shim of EntityCommand.set_DbTransaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.DesignTimeVisibleGet">
            <summary>Sets the shim of EntityCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.DesignTimeVisibleSetBoolean">
            <summary>Sets the shim of EntityCommand.set_DesignTimeVisible(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.EnablePlanCachingGet">
            <summary>Sets the shim of EntityCommand.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of EntityCommand.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ExecuteDbDataReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ExecuteNonQuery">
            <summary>Sets the shim of EntityCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ExecuteReader">
            <summary>Sets the shim of EntityCommand.ExecuteReader()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ExecuteReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ExecuteScalar">
            <summary>Sets the shim of EntityCommand.ExecuteScalar()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.GetParameterTypeUsage">
            <summary>Sets the shim of EntityCommand.GetParameterTypeUsage()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.NotifyDataReaderClosing">
            <summary>Sets the shim of EntityCommand.NotifyDataReaderClosing()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.OnDataReaderClosingAddEventHandler">
            <summary>Sets the shim of EntityCommand.add_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.OnDataReaderClosingRemoveEventHandler">
            <summary>Sets the shim of EntityCommand.remove_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ParametersGet">
            <summary>Sets the shim of EntityCommand.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.Prepare">
            <summary>Sets the shim of EntityCommand.Prepare()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.SetStoreProviderCommandDbCommand">
            <summary>Sets the shim of EntityCommand.SetStoreProviderCommand(DbCommand storeProviderCommand)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.ToTraceString">
            <summary>Sets the shim of EntityCommand.ToTraceString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.TransactionGet">
            <summary>Sets the shim of EntityCommand.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.TransactionSetEntityTransaction">
            <summary>Sets the shim of EntityCommand.set_Transaction(EntityTransaction value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.Unprepare">
            <summary>Sets the shim of EntityCommand.Unprepare()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.UpdatedRowSourceGet">
            <summary>Sets the shim of EntityCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.UpdatedRowSourceSetUpdateRowSource">
            <summary>Sets the shim of EntityCommand.set_UpdatedRowSource(UpdateRowSource value)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.Cancel">
            <summary>Sets the shim of EntityCommand.Cancel()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTextGet">
            <summary>Sets the shim of EntityCommand.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTextSetString">
            <summary>Sets the shim of EntityCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of EntityCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTimeoutSetInt32">
            <summary>Sets the shim of EntityCommand.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTreeGet">
            <summary>Sets the shim of EntityCommand.get_CommandTree()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTreeSetDbCommandTree">
            <summary>Sets the shim of EntityCommand.set_CommandTree(DbCommandTree value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTypeGet">
            <summary>Sets the shim of EntityCommand.get_CommandType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CommandTypeSetCommandType">
            <summary>Sets the shim of EntityCommand.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ConnectionGet">
            <summary>Sets the shim of EntityCommand.get_Connection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ConnectionSetEntityConnection">
            <summary>Sets the shim of EntityCommand.set_Connection(EntityConnection value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CreateDbParameter">
            <summary>Sets the shim of EntityCommand.CreateDbParameter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.CreateParameter">
            <summary>Sets the shim of EntityCommand.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbConnectionGet">
            <summary>Sets the shim of EntityCommand.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbConnectionSetDbConnection">
            <summary>Sets the shim of EntityCommand.set_DbConnection(DbConnection value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbParameterCollectionGet">
            <summary>Sets the shim of EntityCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbTransactionGet">
            <summary>Sets the shim of EntityCommand.get_DbTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.DbTransactionSetDbTransaction">
            <summary>Sets the shim of EntityCommand.set_DbTransaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.DesignTimeVisibleGet">
            <summary>Sets the shim of EntityCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.DesignTimeVisibleSetBoolean">
            <summary>Sets the shim of EntityCommand.set_DesignTimeVisible(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.EnablePlanCachingGet">
            <summary>Sets the shim of EntityCommand.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of EntityCommand.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteDbDataReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteNonQuery">
            <summary>Sets the shim of EntityCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteReader">
            <summary>Sets the shim of EntityCommand.ExecuteReader()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteReaderCommandBehavior">
            <summary>Sets the shim of EntityCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ExecuteScalar">
            <summary>Sets the shim of EntityCommand.ExecuteScalar()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.GetParameterTypeUsage">
            <summary>Sets the shim of EntityCommand.GetParameterTypeUsage()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.NotifyDataReaderClosing">
            <summary>Sets the shim of EntityCommand.NotifyDataReaderClosing()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.OnDataReaderClosingAddEventHandler">
            <summary>Sets the shim of EntityCommand.add_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.OnDataReaderClosingRemoveEventHandler">
            <summary>Sets the shim of EntityCommand.remove_OnDataReaderClosing(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ParametersGet">
            <summary>Sets the shim of EntityCommand.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.Prepare">
            <summary>Sets the shim of EntityCommand.Prepare()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.SetStoreProviderCommandDbCommand">
            <summary>Sets the shim of EntityCommand.SetStoreProviderCommand(DbCommand storeProviderCommand)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.ToTraceString">
            <summary>Sets the shim of EntityCommand.ToTraceString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.TransactionGet">
            <summary>Sets the shim of EntityCommand.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.TransactionSetEntityTransaction">
            <summary>Sets the shim of EntityCommand.set_Transaction(EntityTransaction value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.Unprepare">
            <summary>Sets the shim of EntityCommand.Unprepare()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.UpdatedRowSourceGet">
            <summary>Sets the shim of EntityCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityCommand.AllInstances.UpdatedRowSourceSetUpdateRowSource">
            <summary>Sets the shim of EntityCommand.set_UpdatedRowSource(UpdateRowSource value)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityConnection">
            <summary>Shim type of System.Data.EntityClient.EntityConnection</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnection.#ctor(System.Data.EntityClient.EntityConnection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnection.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnection.Bind(System.Data.IDbConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnection.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.BeginDbTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.BeginTransaction">
            <summary>Sets the shim of EntityConnection.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.BeginTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ChangeDatabaseString">
            <summary>Sets the shim of EntityConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ClearCurrentTransaction">
            <summary>Sets the shim of EntityConnection.ClearCurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.Close">
            <summary>Sets the shim of EntityConnection.Close()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ConnectionStringGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ConnectionStringSetString">
            <summary>Sets the shim of EntityConnection.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ConnectionTimeoutGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.Constructor">
            <summary>Sets the shim of EntityConnection.EntityConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ConstructorMetadataWorkspaceDbConnection">
            <summary>Sets the shim of EntityConnection.EntityConnection(MetadataWorkspace workspace, DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ConstructorString">
            <summary>Sets the shim of EntityConnection.EntityConnection(String connectionString)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.CreateCommand">
            <summary>Sets the shim of EntityConnection.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.CreateDbCommand">
            <summary>Sets the shim of EntityConnection.CreateDbCommand()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.CurrentTransactionGet">
            <summary>Sets the shim of EntityConnection.get_CurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.DataSourceGet">
            <summary>Sets the shim of EntityConnection.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.DatabaseGet">
            <summary>Sets the shim of EntityConnection.get_Database()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.DbProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.DisposeBoolean">
            <summary>Sets the shim of EntityConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.EnlistTransactionTransaction">
            <summary>Sets the shim of EntityConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.EnlistedInUserTransactionGet">
            <summary>Sets the shim of EntityConnection.get_EnlistedInUserTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.GetMetadataWorkspace">
            <summary>Sets the shim of EntityConnection.GetMetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.GetMetadataWorkspaceBoolean">
            <summary>Sets the shim of EntityConnection.GetMetadataWorkspace(Boolean initializeAllCollections)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.Open">
            <summary>Sets the shim of EntityConnection.Open()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.ServerVersionGet">
            <summary>Sets the shim of EntityConnection.get_ServerVersion()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.StateGet">
            <summary>Sets the shim of EntityConnection.get_State()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.StaticConstructor">
            <summary>Sets the shim of EntityConnection.EntityConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.StoreConnectionGet">
            <summary>Sets the shim of EntityConnection.get_StoreConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.StoreProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_StoreProviderFactory()</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.BeginDbTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.BeginTransaction">
            <summary>Sets the shim of EntityConnection.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.BeginTransactionIsolationLevel">
            <summary>Sets the shim of EntityConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.ChangeDatabaseString">
            <summary>Sets the shim of EntityConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.ClearCurrentTransaction">
            <summary>Sets the shim of EntityConnection.ClearCurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.Close">
            <summary>Sets the shim of EntityConnection.Close()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.ConnectionStringSetString">
            <summary>Sets the shim of EntityConnection.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.ConnectionTimeoutGet">
            <summary>Sets the shim of EntityConnection.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.CreateCommand">
            <summary>Sets the shim of EntityConnection.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.CreateDbCommand">
            <summary>Sets the shim of EntityConnection.CreateDbCommand()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.CurrentTransactionGet">
            <summary>Sets the shim of EntityConnection.get_CurrentTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.DataSourceGet">
            <summary>Sets the shim of EntityConnection.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.DatabaseGet">
            <summary>Sets the shim of EntityConnection.get_Database()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.DbProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EntityConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.EnlistTransactionTransaction">
            <summary>Sets the shim of EntityConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.EnlistedInUserTransactionGet">
            <summary>Sets the shim of EntityConnection.get_EnlistedInUserTransaction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.GetMetadataWorkspace">
            <summary>Sets the shim of EntityConnection.GetMetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.GetMetadataWorkspaceBoolean">
            <summary>Sets the shim of EntityConnection.GetMetadataWorkspace(Boolean initializeAllCollections)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.Open">
            <summary>Sets the shim of EntityConnection.Open()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.ServerVersionGet">
            <summary>Sets the shim of EntityConnection.get_ServerVersion()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.StateGet">
            <summary>Sets the shim of EntityConnection.get_State()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.StoreConnectionGet">
            <summary>Sets the shim of EntityConnection.get_StoreConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnection.AllInstances.StoreProviderFactoryGet">
            <summary>Sets the shim of EntityConnection.get_StoreProviderFactory()</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder">
            <summary>Shim type of System.Data.EntityClient.EntityConnectionStringBuilder</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.#ctor(System.Data.EntityClient.EntityConnectionStringBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Clear">
            <summary>Sets the shim of EntityConnectionStringBuilder.Clear()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.Constructor">
            <summary>Sets the shim of EntityConnectionStringBuilder.EntityConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ConstructorString">
            <summary>Sets the shim of EntityConnectionStringBuilder.EntityConnectionStringBuilder(String connectionString)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ContainsKeyString">
            <summary>Sets the shim of EntityConnectionStringBuilder.ContainsKey(String keyword)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.IsFixedSizeGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ItemGetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Item(String keyword)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ItemSetStringObject">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Item(String keyword, Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.KeysGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Keys()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.MetadataGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Metadata()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.MetadataSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Metadata(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.NameGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Name()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.NameSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderConnectionStringGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_ProviderConnectionString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderConnectionStringSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_ProviderConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Provider()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.ProviderSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Provider(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.RemoveString">
            <summary>Sets the shim of EntityConnectionStringBuilder.Remove(String keyword)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.StaticConstructor">
            <summary>Sets the shim of EntityConnectionStringBuilder.EntityConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.SynonymsGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Synonyms()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.TryGetValueStringObjectOut">
            <summary>Sets the shim of EntityConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.Clear">
            <summary>Sets the shim of EntityConnectionStringBuilder.Clear()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ContainsKeyString">
            <summary>Sets the shim of EntityConnectionStringBuilder.ContainsKey(String keyword)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ItemGetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Item(String keyword)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Item(String keyword, Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.KeysGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Keys()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.MetadataGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Metadata()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.MetadataSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Metadata(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.NameGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Name()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.NameSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderConnectionStringGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_ProviderConnectionString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderConnectionStringSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_ProviderConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderGet">
            <summary>Sets the shim of EntityConnectionStringBuilder.get_Provider()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.ProviderSetString">
            <summary>Sets the shim of EntityConnectionStringBuilder.set_Provider(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.RemoveString">
            <summary>Sets the shim of EntityConnectionStringBuilder.Remove(String keyword)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityConnectionStringBuilder.AllInstances.TryGetValueStringObjectOut">
            <summary>Sets the shim of EntityConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityDataReader">
            <summary>Shim type of System.Data.EntityClient.EntityDataReader</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.#ctor(System.Data.EntityClient.EntityDataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Data.IDataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Data.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityDataReader.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.Close">
            <summary>Sets the shim of EntityDataReader.Close()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.ConstructorEntityCommandDbDataReaderCommandBehavior">
            <summary>Sets the shim of EntityDataReader.EntityDataReader(EntityCommand command, DbDataReader storeDataReader, CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.DataRecordInfoGet">
            <summary>Sets the shim of EntityDataReader.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.DepthGet">
            <summary>Sets the shim of EntityDataReader.get_Depth()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.DisposeBoolean">
            <summary>Sets the shim of EntityDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.FieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetBooleanInt32">
            <summary>Sets the shim of EntityDataReader.GetBoolean(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetByteInt32">
            <summary>Sets the shim of EntityDataReader.GetByte(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetBytes(Int32 ordinal, Int64 dataOffset, Byte[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetCharInt32">
            <summary>Sets the shim of EntityDataReader.GetChar(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetChars(Int32 ordinal, Int64 dataOffset, Char[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetDataRecordInt32">
            <summary>Sets the shim of EntityDataReader.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetDataTypeNameInt32">
            <summary>Sets the shim of EntityDataReader.GetDataTypeName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetDateTimeInt32">
            <summary>Sets the shim of EntityDataReader.GetDateTime(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetDbDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDbDataReader(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetDecimalInt32">
            <summary>Sets the shim of EntityDataReader.GetDecimal(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetDoubleInt32">
            <summary>Sets the shim of EntityDataReader.GetDouble(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetEnumerator">
            <summary>Sets the shim of EntityDataReader.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetFloatInt32">
            <summary>Sets the shim of EntityDataReader.GetFloat(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetGuidInt32">
            <summary>Sets the shim of EntityDataReader.GetGuid(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetInt16Int32">
            <summary>Sets the shim of EntityDataReader.GetInt16(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetInt32(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetInt64Int32">
            <summary>Sets the shim of EntityDataReader.GetInt64(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetNameInt32">
            <summary>Sets the shim of EntityDataReader.GetName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetOrdinalString">
            <summary>Sets the shim of EntityDataReader.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetProviderSpecificFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetProviderSpecificValueInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetProviderSpecificValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetSchemaTable">
            <summary>Sets the shim of EntityDataReader.GetSchemaTable()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetStringInt32">
            <summary>Sets the shim of EntityDataReader.GetString(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetValueInt32">
            <summary>Sets the shim of EntityDataReader.GetValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.GetValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.HasRowsGet">
            <summary>Sets the shim of EntityDataReader.get_HasRows()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.IsClosedGet">
            <summary>Sets the shim of EntityDataReader.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.IsDBNullInt32">
            <summary>Sets the shim of EntityDataReader.IsDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.ItemGetInt32">
            <summary>Sets the shim of EntityDataReader.get_Item(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.ItemGetString">
            <summary>Sets the shim of EntityDataReader.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.NextResult">
            <summary>Sets the shim of EntityDataReader.NextResult()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.Read">
            <summary>Sets the shim of EntityDataReader.Read()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.RecordsAffectedGet">
            <summary>Sets the shim of EntityDataReader.get_RecordsAffected()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.VisibleFieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_VisibleFieldCount()</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.Close">
            <summary>Sets the shim of EntityDataReader.Close()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.DataRecordInfoGet">
            <summary>Sets the shim of EntityDataReader.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.DepthGet">
            <summary>Sets the shim of EntityDataReader.get_Depth()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EntityDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.FieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of EntityDataReader.GetBoolean(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetByteInt32">
            <summary>Sets the shim of EntityDataReader.GetByte(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetBytes(Int32 ordinal, Int64 dataOffset, Byte[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetCharInt32">
            <summary>Sets the shim of EntityDataReader.GetChar(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetChars(Int32 ordinal, Int64 dataOffset, Char[] buffer, Int32 bufferOffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDataRecordInt32">
            <summary>Sets the shim of EntityDataReader.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDataTypeNameInt32">
            <summary>Sets the shim of EntityDataReader.GetDataTypeName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDateTimeInt32">
            <summary>Sets the shim of EntityDataReader.GetDateTime(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDbDataReaderInt32">
            <summary>Sets the shim of EntityDataReader.GetDbDataReader(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDecimalInt32">
            <summary>Sets the shim of EntityDataReader.GetDecimal(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetDoubleInt32">
            <summary>Sets the shim of EntityDataReader.GetDouble(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetEnumerator">
            <summary>Sets the shim of EntityDataReader.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetFloatInt32">
            <summary>Sets the shim of EntityDataReader.GetFloat(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetGuidInt32">
            <summary>Sets the shim of EntityDataReader.GetGuid(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetInt16Int32">
            <summary>Sets the shim of EntityDataReader.GetInt16(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetInt32Int32">
            <summary>Sets the shim of EntityDataReader.GetInt32(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetInt64Int32">
            <summary>Sets the shim of EntityDataReader.GetInt64(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetNameInt32">
            <summary>Sets the shim of EntityDataReader.GetName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetOrdinalString">
            <summary>Sets the shim of EntityDataReader.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetProviderSpecificFieldTypeInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetProviderSpecificValueInt32">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetProviderSpecificValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetProviderSpecificValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetSchemaTable">
            <summary>Sets the shim of EntityDataReader.GetSchemaTable()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetStringInt32">
            <summary>Sets the shim of EntityDataReader.GetString(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetValueInt32">
            <summary>Sets the shim of EntityDataReader.GetValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.GetValuesObjectArray">
            <summary>Sets the shim of EntityDataReader.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.HasRowsGet">
            <summary>Sets the shim of EntityDataReader.get_HasRows()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.IsClosedGet">
            <summary>Sets the shim of EntityDataReader.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.IsDBNullInt32">
            <summary>Sets the shim of EntityDataReader.IsDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EntityDataReader.get_Item(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.ItemGetString">
            <summary>Sets the shim of EntityDataReader.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.NextResult">
            <summary>Sets the shim of EntityDataReader.NextResult()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.Read">
            <summary>Sets the shim of EntityDataReader.Read()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.RecordsAffectedGet">
            <summary>Sets the shim of EntityDataReader.get_RecordsAffected()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityDataReader.AllInstances.VisibleFieldCountGet">
            <summary>Sets the shim of EntityDataReader.get_VisibleFieldCount()</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityParameter">
            <summary>Shim type of System.Data.EntityClient.EntityParameter</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameter.#ctor(System.Data.EntityClient.EntityParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameter.Bind(System.Data.IDataParameter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameter.Bind(System.Data.IDbDataParameter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.Clone">
            <summary>Sets the shim of EntityParameter.Clone()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.CompareExchangeParentObjectObject">
            <summary>Sets the shim of EntityParameter.CompareExchangeParent(Object value, Object comparand)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.Constructor">
            <summary>Sets the shim of EntityParameter.EntityParameter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbType">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbTypeInt32">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType, Int32 size, ParameterDirection direction, Boolean isNullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ConstructorStringDbTypeInt32String">
            <summary>Sets the shim of EntityParameter.EntityParameter(String parameterName, DbType dbType, Int32 size, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.CopyToDbParameter">
            <summary>Sets the shim of EntityParameter.CopyTo(DbParameter destination)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.DbTypeGet">
            <summary>Sets the shim of EntityParameter.get_DbType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.DbTypeSetDbType">
            <summary>Sets the shim of EntityParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.DirectionGet">
            <summary>Sets the shim of EntityParameter.get_Direction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.DirectionSetParameterDirection">
            <summary>Sets the shim of EntityParameter.set_Direction(ParameterDirection value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.EdmTypeGet">
            <summary>Sets the shim of EntityParameter.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.EdmTypeSetEdmType">
            <summary>Sets the shim of EntityParameter.set_EdmType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.GetTypeUsage">
            <summary>Sets the shim of EntityParameter.GetTypeUsage()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsDbTypeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDbTypeSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsDirectionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDirectionSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsDirtyGet">
            <summary>Sets the shim of EntityParameter.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsIsNullableSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsIsNullableSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsNullableGet">
            <summary>Sets the shim of EntityParameter.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsNullableSetBoolean">
            <summary>Sets the shim of EntityParameter.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsPrecisionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsPrecisionSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsScaleSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsScaleSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.IsSizeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsSizeSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.OffsetGet">
            <summary>Sets the shim of EntityParameter.get_Offset()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ParameterNameGet">
            <summary>Sets the shim of EntityParameter.get_ParameterName()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ParameterNameSetString">
            <summary>Sets the shim of EntityParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.PrecisionGet">
            <summary>Sets the shim of EntityParameter.get_Precision()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.PrecisionSetByte">
            <summary>Sets the shim of EntityParameter.set_Precision(Byte value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ResetDbType">
            <summary>Sets the shim of EntityParameter.ResetDbType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ResetIsDirty">
            <summary>Sets the shim of EntityParameter.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ResetParent">
            <summary>Sets the shim of EntityParameter.ResetParent()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ScaleGet">
            <summary>Sets the shim of EntityParameter.get_Scale()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ScaleSetByte">
            <summary>Sets the shim of EntityParameter.set_Scale(Byte value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SizeGet">
            <summary>Sets the shim of EntityParameter.get_Size()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SizeSetInt32">
            <summary>Sets the shim of EntityParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SourceColumnGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumn()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SourceColumnNullMappingGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SourceColumnNullMappingSetBoolean">
            <summary>Sets the shim of EntityParameter.set_SourceColumnNullMapping(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SourceColumnSetString">
            <summary>Sets the shim of EntityParameter.set_SourceColumn(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SourceVersionGet">
            <summary>Sets the shim of EntityParameter.get_SourceVersion()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.SourceVersionSetDataRowVersion">
            <summary>Sets the shim of EntityParameter.set_SourceVersion(DataRowVersion value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ToString">
            <summary>Sets the shim of EntityParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ValueGet">
            <summary>Sets the shim of EntityParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.ValueSetObject">
            <summary>Sets the shim of EntityParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.Clone">
            <summary>Sets the shim of EntityParameter.Clone()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.CompareExchangeParentObjectObject">
            <summary>Sets the shim of EntityParameter.CompareExchangeParent(Object value, Object comparand)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.CopyToDbParameter">
            <summary>Sets the shim of EntityParameter.CopyTo(DbParameter destination)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.DbTypeGet">
            <summary>Sets the shim of EntityParameter.get_DbType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.DbTypeSetDbType">
            <summary>Sets the shim of EntityParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.DirectionGet">
            <summary>Sets the shim of EntityParameter.get_Direction()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.DirectionSetParameterDirection">
            <summary>Sets the shim of EntityParameter.set_Direction(ParameterDirection value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.EdmTypeGet">
            <summary>Sets the shim of EntityParameter.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.EdmTypeSetEdmType">
            <summary>Sets the shim of EntityParameter.set_EdmType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.GetTypeUsage">
            <summary>Sets the shim of EntityParameter.GetTypeUsage()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsDbTypeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDbTypeSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsDirectionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsDirectionSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsDirtyGet">
            <summary>Sets the shim of EntityParameter.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsIsNullableSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsIsNullableSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsNullableGet">
            <summary>Sets the shim of EntityParameter.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsNullableSetBoolean">
            <summary>Sets the shim of EntityParameter.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsPrecisionSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsPrecisionSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsScaleSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsScaleSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.IsSizeSpecifiedGet">
            <summary>Sets the shim of EntityParameter.get_IsSizeSpecified()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.OffsetGet">
            <summary>Sets the shim of EntityParameter.get_Offset()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ParameterNameGet">
            <summary>Sets the shim of EntityParameter.get_ParameterName()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ParameterNameSetString">
            <summary>Sets the shim of EntityParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.PrecisionGet">
            <summary>Sets the shim of EntityParameter.get_Precision()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.PrecisionSetByte">
            <summary>Sets the shim of EntityParameter.set_Precision(Byte value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ResetDbType">
            <summary>Sets the shim of EntityParameter.ResetDbType()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ResetIsDirty">
            <summary>Sets the shim of EntityParameter.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ResetParent">
            <summary>Sets the shim of EntityParameter.ResetParent()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ScaleGet">
            <summary>Sets the shim of EntityParameter.get_Scale()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ScaleSetByte">
            <summary>Sets the shim of EntityParameter.set_Scale(Byte value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SizeGet">
            <summary>Sets the shim of EntityParameter.get_Size()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SizeSetInt32">
            <summary>Sets the shim of EntityParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumn()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnNullMappingGet">
            <summary>Sets the shim of EntityParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnNullMappingSetBoolean">
            <summary>Sets the shim of EntityParameter.set_SourceColumnNullMapping(Boolean value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceColumnSetString">
            <summary>Sets the shim of EntityParameter.set_SourceColumn(String value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceVersionGet">
            <summary>Sets the shim of EntityParameter.get_SourceVersion()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.SourceVersionSetDataRowVersion">
            <summary>Sets the shim of EntityParameter.set_SourceVersion(DataRowVersion value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ToString01">
            <summary>Sets the shim of EntityParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ValueGet">
            <summary>Sets the shim of EntityParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameter.AllInstances.ValueSetObject">
            <summary>Sets the shim of EntityParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityParameterCollection">
            <summary>Shim type of System.Data.EntityClient.EntityParameterCollection</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.#ctor(System.Data.EntityClient.EntityParameterCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Data.IDataParameterCollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AddEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Add(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AddObject">
            <summary>Sets the shim of EntityParameterCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AddRangeArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(Array values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AddRangeEntityParameterArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(EntityParameter[] values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AddStringDbType">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AddStringDbTypeInt32">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AddWithValueStringObject">
            <summary>Sets the shim of EntityParameterCollection.AddWithValue(String parameterName, Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.Clear">
            <summary>Sets the shim of EntityParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.Constructor">
            <summary>Sets the shim of EntityParameterCollection.EntityParameterCollection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.ContainsObject">
            <summary>Sets the shim of EntityParameterCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.ContainsString">
            <summary>Sets the shim of EntityParameterCollection.Contains(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.CopyToArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.CopyToEntityParameterArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(EntityParameter[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.CountGet">
            <summary>Sets the shim of EntityParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.GetEnumerator">
            <summary>Sets the shim of EntityParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.GetParameterInt32">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.GetParameterString">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.IndexOfEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.IndexOfObject">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.IndexOfString">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.InsertInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.InsertInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.IsDirtyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.IsFixedSizeGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.IsReadOnlyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.IsSynchronizedGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.ItemGetInt32">
            <summary>Sets the shim of EntityParameterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.ItemGetString">
            <summary>Sets the shim of EntityParameterCollection.get_Item(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.ItemSetInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.ItemSetStringEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(String parameterName, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.RemoveAtInt32">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.RemoveAtString">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.RemoveEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Remove(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.RemoveObject">
            <summary>Sets the shim of EntityParameterCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.ResetIsDirty">
            <summary>Sets the shim of EntityParameterCollection.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.SetParameterInt32DbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(Int32 index, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.SetParameterStringDbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(String parameterName, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.StaticConstructor">
            <summary>Sets the shim of EntityParameterCollection.EntityParameterCollection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.SyncRootGet">
            <summary>Sets the shim of EntityParameterCollection.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Add(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddObject">
            <summary>Sets the shim of EntityParameterCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddRangeArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(Array values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddRangeEntityParameterArray">
            <summary>Sets the shim of EntityParameterCollection.AddRange(EntityParameter[] values)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddStringDbType">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddStringDbTypeInt32">
            <summary>Sets the shim of EntityParameterCollection.Add(String parameterName, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.AddWithValueStringObject">
            <summary>Sets the shim of EntityParameterCollection.AddWithValue(String parameterName, Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.Clear">
            <summary>Sets the shim of EntityParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ContainsObject">
            <summary>Sets the shim of EntityParameterCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ContainsString">
            <summary>Sets the shim of EntityParameterCollection.Contains(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.CopyToEntityParameterArrayInt32">
            <summary>Sets the shim of EntityParameterCollection.CopyTo(EntityParameter[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.CountGet">
            <summary>Sets the shim of EntityParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of EntityParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.GetParameterInt32">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.GetParameterString">
            <summary>Sets the shim of EntityParameterCollection.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IndexOfEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IndexOfObject">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IndexOfString">
            <summary>Sets the shim of EntityParameterCollection.IndexOf(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.InsertInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.InsertInt32Object">
            <summary>Sets the shim of EntityParameterCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsDirtyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of EntityParameterCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EntityParameterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of EntityParameterCollection.get_Item(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemSetInt32EntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(Int32 index, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ItemSetStringEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.set_Item(String parameterName, EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveAtString">
            <summary>Sets the shim of EntityParameterCollection.RemoveAt(String parameterName)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveEntityParameter">
            <summary>Sets the shim of EntityParameterCollection.Remove(EntityParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.RemoveObject">
            <summary>Sets the shim of EntityParameterCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.ResetIsDirty">
            <summary>Sets the shim of EntityParameterCollection.ResetIsDirty()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.SetParameterInt32DbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(Int32 index, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.SetParameterStringDbParameter">
            <summary>Sets the shim of EntityParameterCollection.SetParameter(String parameterName, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityParameterCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of EntityParameterCollection.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityProviderFactory">
            <summary>Shim type of System.Data.EntityClient.EntityProviderFactory</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.#ctor(System.Data.EntityClient.EntityProviderFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.Bind(System.IServiceProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.Constructor">
            <summary>Sets the shim of EntityProviderFactory.EntityProviderFactory()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.CreateCommand">
            <summary>Sets the shim of EntityProviderFactory.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.CreateCommandBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateCommandBuilder()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.CreateConnection">
            <summary>Sets the shim of EntityProviderFactory.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.CreateConnectionStringBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.CreateDataAdapter">
            <summary>Sets the shim of EntityProviderFactory.CreateDataAdapter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.CreateParameter">
            <summary>Sets the shim of EntityProviderFactory.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.CreatePermissionPermissionState">
            <summary>Sets the shim of EntityProviderFactory.CreatePermission(PermissionState state)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.StaticConstructor">
            <summary>Sets the shim of EntityProviderFactory.EntityProviderFactory()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.SystemIServiceProviderGetServiceType">
            <summary>Sets the shim of EntityProviderFactory.System.IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateCommand">
            <summary>Sets the shim of EntityProviderFactory.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateCommandBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateCommandBuilder()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateConnection">
            <summary>Sets the shim of EntityProviderFactory.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateConnectionStringBuilder">
            <summary>Sets the shim of EntityProviderFactory.CreateConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateDataAdapter">
            <summary>Sets the shim of EntityProviderFactory.CreateDataAdapter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreateParameter">
            <summary>Sets the shim of EntityProviderFactory.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.CreatePermissionPermissionState">
            <summary>Sets the shim of EntityProviderFactory.CreatePermission(PermissionState state)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityProviderFactory.AllInstances.SystemIServiceProviderGetServiceType">
            <summary>Sets the shim of EntityProviderFactory.System.IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityTransaction">
            <summary>Shim type of System.Data.EntityClient.EntityTransaction</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityTransaction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityTransaction.#ctor(System.Data.EntityClient.EntityTransaction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityTransaction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityTransaction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityTransaction.Bind(System.Data.IDbTransaction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.EntityClient.Fakes.ShimEntityTransaction.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.Commit">
            <summary>Sets the shim of EntityTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.ConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_Connection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.ConstructorEntityConnectionDbTransaction">
            <summary>Sets the shim of EntityTransaction.EntityTransaction(EntityConnection connection, DbTransaction storeTransaction)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.DbConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.DisposeBoolean">
            <summary>Sets the shim of EntityTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.IsolationLevelGet">
            <summary>Sets the shim of EntityTransaction.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.Rollback">
            <summary>Sets the shim of EntityTransaction.Rollback()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.StoreTransactionGet">
            <summary>Sets the shim of EntityTransaction.get_StoreTransaction()</summary>
        </member>
        <member name="T:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances.Commit">
            <summary>Sets the shim of EntityTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances.ConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_Connection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances.DbConnectionGet">
            <summary>Sets the shim of EntityTransaction.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EntityTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances.IsolationLevelGet">
            <summary>Sets the shim of EntityTransaction.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances.Rollback">
            <summary>Sets the shim of EntityTransaction.Rollback()</summary>
        </member>
        <member name="P:System.Data.EntityClient.Fakes.ShimEntityTransaction.AllInstances.StoreTransactionGet">
            <summary>Sets the shim of EntityTransaction.get_StoreTransaction()</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityCommandCompilationException">
            <summary>Shim type of System.Data.EntityCommandCompilationException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandCompilationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandCompilationException.#ctor(System.Data.EntityCommandCompilationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandCompilationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandCompilationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandCompilationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandCompilationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandCompilationException.Constructor">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandCompilationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandCompilationException.ConstructorString">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandCompilationException.ConstructorStringException">
            <summary>Sets the shim of EntityCommandCompilationException.EntityCommandCompilationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityCommandCompilationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityCommandExecutionException">
            <summary>Shim type of System.Data.EntityCommandExecutionException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandExecutionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandExecutionException.#ctor(System.Data.EntityCommandExecutionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandExecutionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandExecutionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityCommandExecutionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandExecutionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandExecutionException.Constructor">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandExecutionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandExecutionException.ConstructorString">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityCommandExecutionException.ConstructorStringException">
            <summary>Sets the shim of EntityCommandExecutionException.EntityCommandExecutionException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityCommandExecutionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityException">
            <summary>Shim type of System.Data.EntityException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityException.#ctor(System.Data.EntityException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityException.Constructor">
            <summary>Sets the shim of EntityException.EntityException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntityException.EntityException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityException.ConstructorString">
            <summary>Sets the shim of EntityException.EntityException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityException.ConstructorStringException">
            <summary>Sets the shim of EntityException.EntityException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityKey">
            <summary>Shim type of System.Data.EntityKey</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKey.#ctor(System.Data.EntityKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKey.Bind(System.IEquatable{System.Data.EntityKey})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.CompositeValuesWithBinaryEqualEntityKeyEntityKey">
            <summary>Sets the shim of EntityKey.CompositeValuesWithBinaryEqual(EntityKey key1, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConcatKeyValue">
            <summary>Sets the shim of EntityKey.ConcatKeyValue()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.Constructor">
            <summary>Sets the shim of EntityKey.EntityKey()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorEntitySetBase">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySetBase entitySet)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorEntitySetBaseObject">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySetBase entitySet, Object singletonKeyValue)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorEntitySetBaseObjectArray">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySetBase entitySet, Object[] compositeKeyValues)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorEntitySetIExtendedDataRecord">
            <summary>Sets the shim of EntityKey.EntityKey(EntitySet entitySet, IExtendedDataRecord record)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorString">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorStringIEnumerableOfEntityKeyMember">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName, IEnumerable`1&lt;EntityKeyMember&gt; entityKeyValues)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorStringIEnumerableOfKeyValuePairOfStringObject">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName, IEnumerable`1&lt;KeyValuePair`2&lt;String,Object&gt;&gt; entityKeyValues)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ConstructorStringStringObject">
            <summary>Sets the shim of EntityKey.EntityKey(String qualifiedEntitySetName, String keyName, Object keyValue)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EntityContainerNameGet">
            <summary>Sets the shim of EntityKey.get_EntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EntityContainerNameSetString">
            <summary>Sets the shim of EntityKey.set_EntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EntityKeyValuesGet">
            <summary>Sets the shim of EntityKey.get_EntityKeyValues()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EntityKeyValuesSetEntityKeyMemberArray">
            <summary>Sets the shim of EntityKey.set_EntityKeyValues(EntityKeyMember[] value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EntitySetNameGet">
            <summary>Sets the shim of EntityKey.get_EntitySetName()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EntitySetNameSetString">
            <summary>Sets the shim of EntityKey.set_EntitySetName(String value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EqualityOpEntityKeyEntityKey">
            <summary>Sets the shim of EntityKey.op_Equality(EntityKey key1, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EqualsEntityKey">
            <summary>Sets the shim of EntityKey.Equals(EntityKey other)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.EqualsObject">
            <summary>Sets the shim of EntityKey.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.FindValueByNameString">
            <summary>Sets the shim of EntityKey.FindValueByName(String keyName)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.GetEntitySetMetadataWorkspace">
            <summary>Sets the shim of EntityKey.GetEntitySet(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.GetEntitySetNameStringStringOutStringOut">
            <summary>Sets the shim of EntityKey.GetEntitySetName(String qualifiedEntitySetName, String&amp; entitySet, String&amp; container)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.GetHashCode">
            <summary>Sets the shim of EntityKey.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.GetKeyValueExpressionsEntitySet">
            <summary>Sets the shim of EntityKey.GetKeyValueExpressions(EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.InequalityOpEntityKeyEntityKey">
            <summary>Sets the shim of EntityKey.op_Inequality(EntityKey key1, EntityKey key2)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.InternalEqualsEntityKeyEntityKeyBoolean">
            <summary>Sets the shim of EntityKey.InternalEquals(EntityKey key1, EntityKey key2, Boolean compareEntitySets)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.IsTemporaryGet">
            <summary>Sets the shim of EntityKey.get_IsTemporary()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.OnDeserializedStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.OnDeserializingStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.StaticConstructor">
            <summary>Sets the shim of EntityKey.EntityKey()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ValidateEntityKeyMetadataWorkspaceEntitySet">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ValidateEntityKeyMetadataWorkspaceEntitySetBooleanString">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet, Boolean isArgumentException, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.ValidateNameString">
            <summary>Sets the shim of EntityKey.ValidateName(String name)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.ConcatKeyValue">
            <summary>Sets the shim of EntityKey.ConcatKeyValue()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EntityContainerNameGet">
            <summary>Sets the shim of EntityKey.get_EntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EntityContainerNameSetString">
            <summary>Sets the shim of EntityKey.set_EntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EntityKeyValuesGet">
            <summary>Sets the shim of EntityKey.get_EntityKeyValues()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EntityKeyValuesSetEntityKeyMemberArray">
            <summary>Sets the shim of EntityKey.set_EntityKeyValues(EntityKeyMember[] value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EntitySetNameGet">
            <summary>Sets the shim of EntityKey.get_EntitySetName()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EntitySetNameSetString">
            <summary>Sets the shim of EntityKey.set_EntitySetName(String value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EqualsEntityKey">
            <summary>Sets the shim of EntityKey.Equals(EntityKey other)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.EqualsObject">
            <summary>Sets the shim of EntityKey.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.FindValueByNameString">
            <summary>Sets the shim of EntityKey.FindValueByName(String keyName)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.GetEntitySetMetadataWorkspace">
            <summary>Sets the shim of EntityKey.GetEntitySet(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.GetHashCode01">
            <summary>Sets the shim of EntityKey.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.GetKeyValueExpressionsEntitySet">
            <summary>Sets the shim of EntityKey.GetKeyValueExpressions(EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.IsTemporaryGet">
            <summary>Sets the shim of EntityKey.get_IsTemporary()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.OnDeserializingStreamingContext">
            <summary>Sets the shim of EntityKey.OnDeserializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.ValidateEntityKeyMetadataWorkspaceEntitySet">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKey.AllInstances.ValidateEntityKeyMetadataWorkspaceEntitySetBooleanString">
            <summary>Sets the shim of EntityKey.ValidateEntityKey(MetadataWorkspace workspace, EntitySet entitySet, Boolean isArgumentException, String argumentName)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityKeyMember">
            <summary>Shim type of System.Data.EntityKeyMember</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKeyMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKeyMember.#ctor(System.Data.EntityKeyMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKeyMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntityKeyMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.Constructor">
            <summary>Sets the shim of EntityKeyMember.EntityKeyMember()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.ConstructorStringObject">
            <summary>Sets the shim of EntityKeyMember.EntityKeyMember(String keyName, Object keyValue)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.KeyGet">
            <summary>Sets the shim of EntityKeyMember.get_Key()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.KeySetString">
            <summary>Sets the shim of EntityKeyMember.set_Key(String value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.ToString">
            <summary>Sets the shim of EntityKeyMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.ValueGet">
            <summary>Sets the shim of EntityKeyMember.get_Value()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.ValueSetObject">
            <summary>Sets the shim of EntityKeyMember.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntityKeyMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.AllInstances.KeyGet">
            <summary>Sets the shim of EntityKeyMember.get_Key()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.AllInstances.KeySetString">
            <summary>Sets the shim of EntityKeyMember.set_Key(String value)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.AllInstances.ToString01">
            <summary>Sets the shim of EntityKeyMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.AllInstances.ValueGet">
            <summary>Sets the shim of EntityKeyMember.get_Value()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntityKeyMember.AllInstances.ValueSetObject">
            <summary>Sets the shim of EntityKeyMember.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntitySqlException">
            <summary>Shim type of System.Data.EntitySqlException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntitySqlException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntitySqlException.#ctor(System.Data.EntitySqlException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntitySqlException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntitySqlException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEntitySqlException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.ColumnGet">
            <summary>Sets the shim of EntitySqlException.get_Column()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.Constructor">
            <summary>Sets the shim of EntitySqlException.EntitySqlException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntitySqlException.EntitySqlException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.ConstructorString">
            <summary>Sets the shim of EntitySqlException.EntitySqlException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.ConstructorStringException">
            <summary>Sets the shim of EntitySqlException.EntitySqlException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.CreateStringStringInt32StringBooleanException">
            <summary>Sets the shim of EntitySqlException.Create(String commandText, String errorDescription, Int32 errorPosition, String errorContextInfo, Boolean loadErrorContextInfoFromResource, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.ErrorContextGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorContext()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.ErrorDescriptionGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorDescription()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.FormatErrorContextStringInt32StringBooleanInt32OutInt32Out">
            <summary>Sets the shim of EntitySqlException.FormatErrorContext(String commandText, Int32 errorPosition, String errorContextInfo, Boolean loadErrorContextInfoFromResource, Int32&amp; lineNumber, Int32&amp; columnNumber)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.GetGenericErrorMessageStringInt32">
            <summary>Sets the shim of EntitySqlException.GetGenericErrorMessage(String commandText, Int32 position)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EntitySqlException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.LineGet">
            <summary>Sets the shim of EntitySqlException.get_Line()</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEntitySqlException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.AllInstances.ColumnGet">
            <summary>Sets the shim of EntitySqlException.get_Column()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.AllInstances.ErrorContextGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorContext()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.AllInstances.ErrorDescriptionGet">
            <summary>Sets the shim of EntitySqlException.get_ErrorDescription()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of EntitySqlException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEntitySqlException.AllInstances.LineGet">
            <summary>Sets the shim of EntitySqlException.get_Line()</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimInvalidCommandTreeException">
            <summary>Shim type of System.Data.InvalidCommandTreeException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimInvalidCommandTreeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimInvalidCommandTreeException.#ctor(System.Data.InvalidCommandTreeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimInvalidCommandTreeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimInvalidCommandTreeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimInvalidCommandTreeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimInvalidCommandTreeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimInvalidCommandTreeException.Constructor">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimInvalidCommandTreeException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimInvalidCommandTreeException.ConstructorString">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimInvalidCommandTreeException.ConstructorStringException">
            <summary>Sets the shim of InvalidCommandTreeException.InvalidCommandTreeException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimInvalidCommandTreeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimMappingException">
            <summary>Shim type of System.Data.MappingException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMappingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMappingException.#ctor(System.Data.MappingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMappingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMappingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMappingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMappingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMappingException.Constructor">
            <summary>Sets the shim of MappingException.MappingException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMappingException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MappingException.MappingException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMappingException.ConstructorString">
            <summary>Sets the shim of MappingException.MappingException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMappingException.ConstructorStringException">
            <summary>Sets the shim of MappingException.MappingException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimMappingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimMetadataException">
            <summary>Shim type of System.Data.MetadataException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMetadataException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMetadataException.#ctor(System.Data.MetadataException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMetadataException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMetadataException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimMetadataException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMetadataException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMetadataException.Constructor">
            <summary>Sets the shim of MetadataException.MetadataException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMetadataException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MetadataException.MetadataException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMetadataException.ConstructorString">
            <summary>Sets the shim of MetadataException.MetadataException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimMetadataException.ConstructorStringException">
            <summary>Sets the shim of MetadataException.MetadataException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimMetadataException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimObjectNotFoundException">
            <summary>Shim type of System.Data.ObjectNotFoundException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimObjectNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimObjectNotFoundException.#ctor(System.Data.ObjectNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimObjectNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimObjectNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimObjectNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimObjectNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimObjectNotFoundException.Constructor">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimObjectNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimObjectNotFoundException.ConstructorString">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimObjectNotFoundException.ConstructorStringException">
            <summary>Sets the shim of ObjectNotFoundException.ObjectNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimObjectNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimOptimisticConcurrencyException">
            <summary>Shim type of System.Data.OptimisticConcurrencyException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOptimisticConcurrencyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOptimisticConcurrencyException.#ctor(System.Data.OptimisticConcurrencyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOptimisticConcurrencyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOptimisticConcurrencyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOptimisticConcurrencyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOptimisticConcurrencyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOptimisticConcurrencyException.Constructor">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOptimisticConcurrencyException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOptimisticConcurrencyException.ConstructorString">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOptimisticConcurrencyException.ConstructorStringException">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOptimisticConcurrencyException.ConstructorStringExceptionIEnumerableOfObjectStateEntry">
            <summary>Sets the shim of OptimisticConcurrencyException.OptimisticConcurrencyException(String message, Exception innerException, IEnumerable`1&lt;ObjectStateEntry&gt; stateEntries)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimOptimisticConcurrencyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimPropertyConstraintException">
            <summary>Shim type of System.Data.PropertyConstraintException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimPropertyConstraintException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimPropertyConstraintException.#ctor(System.Data.PropertyConstraintException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimPropertyConstraintException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimPropertyConstraintException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimPropertyConstraintException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.Constructor">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.ConstructorString">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.ConstructorStringException">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.ConstructorStringString">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.ConstructorStringStringException">
            <summary>Sets the shim of PropertyConstraintException.PropertyConstraintException(String message, String propertyName, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of PropertyConstraintException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.PropertyNameGet">
            <summary>Sets the shim of PropertyConstraintException.get_PropertyName()</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimPropertyConstraintException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of PropertyConstraintException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimPropertyConstraintException.AllInstances.PropertyNameGet">
            <summary>Sets the shim of PropertyConstraintException.get_PropertyName()</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimProviderIncompatibleException">
            <summary>Shim type of System.Data.ProviderIncompatibleException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimProviderIncompatibleException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimProviderIncompatibleException.#ctor(System.Data.ProviderIncompatibleException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimProviderIncompatibleException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimProviderIncompatibleException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimProviderIncompatibleException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimProviderIncompatibleException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimProviderIncompatibleException.Constructor">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimProviderIncompatibleException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimProviderIncompatibleException.ConstructorString">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimProviderIncompatibleException.ConstructorStringException">
            <summary>Sets the shim of ProviderIncompatibleException.ProviderIncompatibleException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimProviderIncompatibleException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimUpdateException">
            <summary>Shim type of System.Data.UpdateException</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimUpdateException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimUpdateException.#ctor(System.Data.UpdateException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimUpdateException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimUpdateException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimUpdateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.Constructor">
            <summary>Sets the shim of UpdateException.UpdateException()</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of UpdateException.UpdateException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.ConstructorString">
            <summary>Sets the shim of UpdateException.UpdateException(String message)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.ConstructorStringException">
            <summary>Sets the shim of UpdateException.UpdateException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.ConstructorStringExceptionIEnumerableOfObjectStateEntry">
            <summary>Sets the shim of UpdateException.UpdateException(String message, Exception innerException, IEnumerable`1&lt;ObjectStateEntry&gt; stateEntries)</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.StateEntriesGet">
            <summary>Sets the shim of UpdateException.get_StateEntries()</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimUpdateException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimUpdateException.AllInstances.StateEntriesGet">
            <summary>Sets the shim of UpdateException.get_StateEntries()</summary>
        </member>
        <member name="T:System.Data.Fakes.StubEntityException">
            <summary>Stub type of System.Data.EntityException</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEntityException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEntityException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.InitializeStub">
            <summary>Initializes a new instance of type StubEntityException</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Fakes.StubEntityKeyMember">
            <summary>Stub type of System.Data.EntityKeyMember</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityKeyMember.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityKeyMember.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityKeyMember.InitializeStub">
            <summary>Initializes a new instance of type StubEntityKeyMember</summary>
        </member>
        <member name="M:System.Data.Fakes.StubEntityKeyMember.ToString">
            <summary>Sets the stub of EntityKeyMember.ToString()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubEntityKeyMember.ToString01">
            <summary>Sets the stub of EntityKeyMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityKeyMember.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityKeyMember.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Fakes.StubEntityKeyMember.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Fakes.StubIExtendedDataRecord">
            <summary>Stub type of System.Data.IExtendedDataRecord</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.#ctor">
            <summary>Initializes a new instance of type StubIExtendedDataRecord</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.DataRecordInfoGet">
            <summary>Sets the stub of IExtendedDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.FieldCountGet">
            <summary>Sets the stub of IDataRecord.get_FieldCount()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetBooleanInt32">
            <summary>Sets the stub of IDataRecord.GetBoolean(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetByteInt32">
            <summary>Sets the stub of IDataRecord.GetByte(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the stub of IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetCharInt32">
            <summary>Sets the stub of IDataRecord.GetChar(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the stub of IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetDataInt32">
            <summary>Sets the stub of IDataRecord.GetData(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetDataReaderInt32">
            <summary>Sets the stub of IExtendedDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetDataRecordInt32">
            <summary>Sets the stub of IExtendedDataRecord.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetDataTypeNameInt32">
            <summary>Sets the stub of IDataRecord.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetDateTimeInt32">
            <summary>Sets the stub of IDataRecord.GetDateTime(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetDecimalInt32">
            <summary>Sets the stub of IDataRecord.GetDecimal(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetDoubleInt32">
            <summary>Sets the stub of IDataRecord.GetDouble(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetFieldTypeInt32">
            <summary>Sets the stub of IDataRecord.GetFieldType(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetFloatInt32">
            <summary>Sets the stub of IDataRecord.GetFloat(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetGuidInt32">
            <summary>Sets the stub of IDataRecord.GetGuid(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetInt16Int32">
            <summary>Sets the stub of IDataRecord.GetInt16(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetInt32Int32">
            <summary>Sets the stub of IDataRecord.GetInt32(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetInt64Int32">
            <summary>Sets the stub of IDataRecord.GetInt64(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetNameInt32">
            <summary>Sets the stub of IDataRecord.GetName(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetOrdinalString">
            <summary>Sets the stub of IDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetStringInt32">
            <summary>Sets the stub of IDataRecord.GetString(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetValueInt32">
            <summary>Sets the stub of IDataRecord.GetValue(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.GetValuesObjectArray">
            <summary>Sets the stub of IDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.IsDBNullInt32">
            <summary>Sets the stub of IDataRecord.IsDBNull(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.ItemGetInt32">
            <summary>Sets the stub of IDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubIExtendedDataRecord.ItemGetString">
            <summary>Sets the stub of IDataRecord.get_Item(String name)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetBoolean(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetBoolean(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetByte(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetByte(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetChar(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetChar(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetData(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetData(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDataTypeName(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDateTime(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDateTime(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDecimal(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDecimal(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetDouble(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetDouble(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetFieldType(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetFieldType(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetFloat(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetFloat(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetGuid(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetGuid(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetInt16(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetInt16(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetInt32(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetInt32(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetInt64(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetInt64(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetName(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetName(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetOrdinal(System.String)">
            <summary>Sets the stub of IDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetString(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetString(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetValue(System.Int32)">
            <summary>Sets the stub of IDataRecord.GetValue(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#GetValues(System.Object[])">
            <summary>Sets the stub of IDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#IsDBNull(System.Int32)">
            <summary>Sets the stub of IDataRecord.IsDBNull(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.sde::System#Data#IExtendedDataRecord#GetDataReader(System.Int32)">
            <summary>Sets the stub of IExtendedDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubIExtendedDataRecord.sde::System#Data#IExtendedDataRecord#GetDataRecord(System.Int32)">
            <summary>Sets the stub of IExtendedDataRecord.GetDataRecord(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Fakes.StubIExtendedDataRecord.sde::System#Data#IExtendedDataRecord#DataRecordInfo">
            <summary>Sets the stub of IExtendedDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubIExtendedDataRecord.global::System#Data#IDataRecord#FieldCount">
            <summary>Sets the stub of IDataRecord.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubIExtendedDataRecord.System#Data#IDataRecord#Item(System.Int32)">
            <summary>Sets the stub of IDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Fakes.StubIExtendedDataRecord.System#Data#IDataRecord#Item(System.String)">
            <summary>Sets the stub of IDataRecord.get_Item(String name)</summary>
        </member>
        <member name="T:System.Data.Fakes.StubUpdateException">
            <summary>Stub type of System.Data.UpdateException</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUpdateException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUpdateException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.InitializeStub">
            <summary>Initializes a new instance of type StubUpdateException</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Fakes.StubUpdateException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Fakes.StubUpdateException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.Data.Fakes.StubUpdateException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimEntityViewContainer">
            <summary>Shim type of System.Data.Mapping.EntityViewContainer</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimEntityViewContainer.#ctor(System.Data.Mapping.EntityViewContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimEntityViewContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimEntityViewContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.Constructor">
            <summary>Sets the shim of EntityViewContainer.EntityViewContainer()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.EdmEntityContainerNameGet">
            <summary>Sets the shim of EntityViewContainer.get_EdmEntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.EdmEntityContainerNameSetString">
            <summary>Sets the shim of EntityViewContainer.set_EdmEntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.ExtentViewsGet">
            <summary>Sets the shim of EntityViewContainer.get_ExtentViews()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.HashOverAllExtentViewsGet">
            <summary>Sets the shim of EntityViewContainer.get_HashOverAllExtentViews()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.HashOverAllExtentViewsSetString">
            <summary>Sets the shim of EntityViewContainer.set_HashOverAllExtentViews(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.HashOverMappingClosureGet">
            <summary>Sets the shim of EntityViewContainer.get_HashOverMappingClosure()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.HashOverMappingClosureSetString">
            <summary>Sets the shim of EntityViewContainer.set_HashOverMappingClosure(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.StoreEntityContainerNameGet">
            <summary>Sets the shim of EntityViewContainer.get_StoreEntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.StoreEntityContainerNameSetString">
            <summary>Sets the shim of EntityViewContainer.set_StoreEntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.ViewCountGet">
            <summary>Sets the shim of EntityViewContainer.get_ViewCount()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.ViewCountSetInt32">
            <summary>Sets the shim of EntityViewContainer.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.EdmEntityContainerNameGet">
            <summary>Sets the shim of EntityViewContainer.get_EdmEntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.EdmEntityContainerNameSetString">
            <summary>Sets the shim of EntityViewContainer.set_EdmEntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.ExtentViewsGet">
            <summary>Sets the shim of EntityViewContainer.get_ExtentViews()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.HashOverAllExtentViewsGet">
            <summary>Sets the shim of EntityViewContainer.get_HashOverAllExtentViews()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.HashOverAllExtentViewsSetString">
            <summary>Sets the shim of EntityViewContainer.set_HashOverAllExtentViews(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.HashOverMappingClosureGet">
            <summary>Sets the shim of EntityViewContainer.get_HashOverMappingClosure()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.HashOverMappingClosureSetString">
            <summary>Sets the shim of EntityViewContainer.set_HashOverMappingClosure(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.StoreEntityContainerNameGet">
            <summary>Sets the shim of EntityViewContainer.get_StoreEntityContainerName()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.StoreEntityContainerNameSetString">
            <summary>Sets the shim of EntityViewContainer.set_StoreEntityContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.ViewCountGet">
            <summary>Sets the shim of EntityViewContainer.get_ViewCount()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewContainer.AllInstances.ViewCountSetInt32">
            <summary>Sets the shim of EntityViewContainer.set_ViewCount(Int32 value)</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute">
            <summary>Shim type of System.Data.Mapping.EntityViewGenerationAttribute</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.#ctor(System.Data.Mapping.EntityViewGenerationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.ConstructorType">
            <summary>Sets the shim of EntityViewGenerationAttribute.EntityViewGenerationAttribute(Type viewGenerationType)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.ViewGenerationTypeGet">
            <summary>Sets the shim of EntityViewGenerationAttribute.get_ViewGenerationType()</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimEntityViewGenerationAttribute.AllInstances.ViewGenerationTypeGet">
            <summary>Sets the shim of EntityViewGenerationAttribute.get_ViewGenerationType()</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimMappingItemCollection">
            <summary>Shim type of System.Data.Mapping.MappingItemCollection</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.#ctor(System.Data.Mapping.MappingItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.IList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimMappingItemCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimMappingItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimMappingItemCollection.ConstructorDataSpace">
            <summary>Sets the shim of MappingItemCollection.MappingItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimMappingItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection">
            <summary>Shim type of System.Data.Mapping.StorageMappingItemCollection</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.#ctor(System.Data.Mapping.StorageMappingItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.IList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReader">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmCollection, StoreItemCollection storeCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReaderListOfString">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmCollection, StoreItemCollection storeCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders, List`1&lt;String&gt; filePaths)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionIEnumerableOfXmlReaderListOfStringIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmCollection, StoreItemCollection storeCollection, IEnumerable`1&lt;XmlReader&gt; xmlReaders, List`1&lt;String&gt; filePaths, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.ConstructorEdmItemCollectionStoreItemCollectionStringArray">
            <summary>Sets the shim of StorageMappingItemCollection.StorageMappingItemCollection(EdmItemCollection edmCollection, StoreItemCollection storeCollection, String[] filePaths)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.ContainsStorageEntityContainerString">
            <summary>Sets the shim of StorageMappingItemCollection.ContainsStorageEntityContainer(String storageEntityContainerName)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.EdmItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_EdmItemCollection()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.GenerateEntitySetViewsIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StorageMappingItemCollection.GenerateEntitySetViews(IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.MappingVersionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_MappingVersion()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.StoreItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_StoreItemCollection()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.WorkspaceGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_Workspace()</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.ContainsStorageEntityContainerString">
            <summary>Sets the shim of StorageMappingItemCollection.ContainsStorageEntityContainer(String storageEntityContainerName)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.EdmItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_EdmItemCollection()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.GenerateEntitySetViewsIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StorageMappingItemCollection.GenerateEntitySetViews(IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.MappingVersionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_MappingVersion()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.StoreItemCollectionGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_StoreItemCollection()</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.ShimStorageMappingItemCollection.AllInstances.WorkspaceGet">
            <summary>Sets the shim of StorageMappingItemCollection.get_Workspace()</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.StubEntityViewContainer">
            <summary>Stub type of System.Data.Mapping.EntityViewContainer</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubEntityViewContainer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubEntityViewContainer.GetViewAt(System.Int32)">
            <summary>Sets the stub of EntityViewContainer.GetViewAt(Int32 index)</summary>
        </member>
        <member name="F:System.Data.Mapping.Fakes.StubEntityViewContainer.GetViewAtInt32">
            <summary>Sets the stub of EntityViewContainer.GetViewAt(Int32 index)</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubEntityViewContainer.InitializeStub">
            <summary>Initializes a new instance of type StubEntityViewContainer</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.StubEntityViewContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.StubEntityViewContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.StubEntityViewContainer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Mapping.Fakes.StubStorageMappingItemCollection">
            <summary>Stub type of System.Data.Mapping.StorageMappingItemCollection</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.Contains(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="F:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.ContainsString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.GetItems``1">
            <summary>Sets the stub of ItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets stubs of GetItems()</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.GetValue(System.String,System.Boolean)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.GetValueStringBoolean">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.InitializeStub">
            <summary>Initializes a new instance of type StubStorageMappingItemCollection</summary>
        </member>
        <member name="F:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.ItemGetString">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="M:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.TryGetValue(System.String,System.Boolean,System.Data.Metadata.Edm.GlobalItem@)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="F:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.TryGetValueStringBooleanGlobalItemOut">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Mapping.Fakes.StubStorageMappingItemCollection.Item(System.String)">
            <summary>Sets the stub of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember">
            <summary>Shim type of System.Data.Metadata.Edm.AssociationEndMember</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.#ctor(System.Data.Metadata.Edm.AssociationEndMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationEndMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.ConstructorStringRefTypeRelationshipMultiplicity">
            <summary>Sets the shim of AssociationEndMember.AssociationEndMember(String name, RefType endRefType, RelationshipMultiplicity multiplicity)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.GetRelatedEndGet">
            <summary>Sets the shim of AssociationEndMember.get_GetRelatedEnd()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.GetRelatedEndSetFuncOfRelationshipManagerRelatedEndRelatedEnd">
            <summary>Sets the shim of AssociationEndMember.set_GetRelatedEnd(Func`3&lt;RelationshipManager,RelatedEnd,RelatedEnd&gt; value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationEndMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances.GetRelatedEndGet">
            <summary>Sets the shim of AssociationEndMember.get_GetRelatedEnd()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationEndMember.AllInstances.GetRelatedEndSetFuncOfRelationshipManagerRelatedEndRelatedEnd">
            <summary>Sets the shim of AssociationEndMember.set_GetRelatedEnd(Func`3&lt;RelationshipManager,RelatedEnd,RelatedEnd&gt; value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationSet">
            <summary>Shim type of System.Data.Metadata.Edm.AssociationSet</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.#ctor(System.Data.Metadata.Edm.AssociationSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AddAssociationSetEndAssociationSetEnd">
            <summary>Sets the shim of AssociationSet.AddAssociationSetEnd(AssociationSetEnd associationSetEnd)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AssociationSetEndsGet">
            <summary>Sets the shim of AssociationSet.get_AssociationSetEnds()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.ConstructorStringAssociationType">
            <summary>Sets the shim of AssociationSet.AssociationSet(String name, AssociationType associationType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.ElementTypeGet">
            <summary>Sets the shim of AssociationSet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.SetReadOnly">
            <summary>Sets the shim of AssociationSet.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.AddAssociationSetEndAssociationSetEnd">
            <summary>Sets the shim of AssociationSet.AddAssociationSetEnd(AssociationSetEnd associationSetEnd)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.AssociationSetEndsGet">
            <summary>Sets the shim of AssociationSet.get_AssociationSetEnds()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.ElementTypeGet">
            <summary>Sets the shim of AssociationSet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSet.AllInstances.SetReadOnly">
            <summary>Sets the shim of AssociationSet.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd">
            <summary>Shim type of System.Data.Metadata.Edm.AssociationSetEnd</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.#ctor(System.Data.Metadata.Edm.AssociationSetEnd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSetEnd.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.ConstructorEntitySetAssociationSetAssociationEndMember">
            <summary>Sets the shim of AssociationSetEnd.AssociationSetEnd(EntitySet entitySet, AssociationSet parentSet, AssociationEndMember endMember)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.CorrespondingAssociationEndMemberGet">
            <summary>Sets the shim of AssociationSetEnd.get_CorrespondingAssociationEndMember()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.EntitySetGet">
            <summary>Sets the shim of AssociationSetEnd.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.IdentityGet">
            <summary>Sets the shim of AssociationSetEnd.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.NameGet">
            <summary>Sets the shim of AssociationSetEnd.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.ParentAssociationSetGet">
            <summary>Sets the shim of AssociationSetEnd.get_ParentAssociationSet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.RoleGet">
            <summary>Sets the shim of AssociationSetEnd.get_Role()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.SetReadOnly">
            <summary>Sets the shim of AssociationSetEnd.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.ToString">
            <summary>Sets the shim of AssociationSetEnd.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationSetEnd.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.CorrespondingAssociationEndMemberGet">
            <summary>Sets the shim of AssociationSetEnd.get_CorrespondingAssociationEndMember()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.EntitySetGet">
            <summary>Sets the shim of AssociationSetEnd.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.IdentityGet">
            <summary>Sets the shim of AssociationSetEnd.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.NameGet">
            <summary>Sets the shim of AssociationSetEnd.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.ParentAssociationSetGet">
            <summary>Sets the shim of AssociationSetEnd.get_ParentAssociationSet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.RoleGet">
            <summary>Sets the shim of AssociationSetEnd.get_Role()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.SetReadOnly">
            <summary>Sets the shim of AssociationSetEnd.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationSetEnd.AllInstances.ToString01">
            <summary>Sets the shim of AssociationSetEnd.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationType">
            <summary>Shim type of System.Data.Metadata.Edm.AssociationType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationType.#ctor(System.Data.Metadata.Edm.AssociationType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimAssociationType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AddReferentialConstraintReferentialConstraint">
            <summary>Sets the shim of AssociationType.AddReferentialConstraint(ReferentialConstraint referentialConstraint)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AssociationEndMembersGet">
            <summary>Sets the shim of AssociationType.get_AssociationEndMembers()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.ConstructorStringStringBooleanDataSpace">
            <summary>Sets the shim of AssociationType.AssociationType(String name, String namespaceName, Boolean foreignKey, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.IsForeignKeyGet">
            <summary>Sets the shim of AssociationType.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.ReferentialConstraintsGet">
            <summary>Sets the shim of AssociationType.get_ReferentialConstraints()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.SetReadOnly">
            <summary>Sets the shim of AssociationType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of AssociationType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.AddReferentialConstraintReferentialConstraint">
            <summary>Sets the shim of AssociationType.AddReferentialConstraint(ReferentialConstraint referentialConstraint)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.AssociationEndMembersGet">
            <summary>Sets the shim of AssociationType.get_AssociationEndMembers()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of AssociationType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.IsForeignKeyGet">
            <summary>Sets the shim of AssociationType.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.ReferentialConstraintsGet">
            <summary>Sets the shim of AssociationType.get_ReferentialConstraints()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.SetReadOnly">
            <summary>Sets the shim of AssociationType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimAssociationType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of AssociationType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimCollectionType">
            <summary>Shim type of System.Data.Metadata.Edm.CollectionType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimCollectionType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimCollectionType.#ctor(System.Data.Metadata.Edm.CollectionType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimCollectionType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimCollectionType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.BuiltInTypeKindGet">
            <summary>Sets the shim of CollectionType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.ConstructorEdmType">
            <summary>Sets the shim of CollectionType.CollectionType(EdmType elementType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.ConstructorTypeUsage">
            <summary>Sets the shim of CollectionType.CollectionType(TypeUsage elementType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.EdmEqualsMetadataItem">
            <summary>Sets the shim of CollectionType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.TypeUsageGet">
            <summary>Sets the shim of CollectionType.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimCollectionType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of CollectionType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of CollectionType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimCollectionType.AllInstances.TypeUsageGet">
            <summary>Sets the shim of CollectionType.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimComplexType">
            <summary>Shim type of System.Data.Metadata.Edm.ComplexType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimComplexType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimComplexType.#ctor(System.Data.Metadata.Edm.ComplexType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimComplexType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimComplexType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.BuiltInTypeKindGet">
            <summary>Sets the shim of ComplexType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.Constructor">
            <summary>Sets the shim of ComplexType.ComplexType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of ComplexType.ComplexType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.PropertiesGet">
            <summary>Sets the shim of ComplexType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of ComplexType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimComplexType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of ComplexType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.AllInstances.PropertiesGet">
            <summary>Sets the shim of ComplexType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimComplexType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of ComplexType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimDocumentation">
            <summary>Shim type of System.Data.Metadata.Edm.Documentation</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimDocumentation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimDocumentation.#ctor(System.Data.Metadata.Edm.Documentation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimDocumentation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimDocumentation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.BuiltInTypeKindGet">
            <summary>Sets the shim of Documentation.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.Constructor">
            <summary>Sets the shim of Documentation.Documentation()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.IdentityGet">
            <summary>Sets the shim of Documentation.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.IsEmptyGet">
            <summary>Sets the shim of Documentation.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.LongDescriptionGet">
            <summary>Sets the shim of Documentation.get_LongDescription()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.LongDescriptionSetString">
            <summary>Sets the shim of Documentation.set_LongDescription(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.SummaryGet">
            <summary>Sets the shim of Documentation.get_Summary()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.SummarySetString">
            <summary>Sets the shim of Documentation.set_Summary(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.ToString">
            <summary>Sets the shim of Documentation.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of Documentation.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.IdentityGet">
            <summary>Sets the shim of Documentation.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.IsEmptyGet">
            <summary>Sets the shim of Documentation.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.LongDescriptionGet">
            <summary>Sets the shim of Documentation.get_LongDescription()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.LongDescriptionSetString">
            <summary>Sets the shim of Documentation.set_LongDescription(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.SummaryGet">
            <summary>Sets the shim of Documentation.get_Summary()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.SummarySetString">
            <summary>Sets the shim of Documentation.set_Summary(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimDocumentation.AllInstances.ToString01">
            <summary>Sets the shim of Documentation.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmError">
            <summary>Shim type of System.Data.Metadata.Edm.EdmError</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmError.#ctor(System.Data.Metadata.Edm.EdmError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmError.ConstructorString">
            <summary>Sets the shim of EdmError.EdmError(String message)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmError.MessageGet">
            <summary>Sets the shim of EdmError.get_Message()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmError.AllInstances.MessageGet">
            <summary>Sets the shim of EdmError.get_Message()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmFunction">
            <summary>Shim type of System.Data.Metadata.Edm.EdmFunction</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.#ctor(System.Data.Metadata.Edm.EdmFunction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.BuildIdentityOf1StringBuilderStringIEnumerableOfM0FuncOfM0TypeUsageFuncOfM0ParameterMode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Text.StringBuilder,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Data.Metadata.Edm.TypeUsage},System.Func{``0,System.Data.Metadata.Edm.ParameterMode}})">
            <summary>Sets the shim of EdmFunction.BuildIdentity(StringBuilder builder, String functionName, IEnumerable`1&lt;!!0&gt; functionParameters, Func`2&lt;!!0,TypeUsage&gt; getParameterTypeUsage, Func`2&lt;!!0,ParameterMode&gt; getParameterMode)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AggregateAttributeGet">
            <summary>Sets the shim of EdmFunction.get_AggregateAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmFunction.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.BuildIdentityStringIEnumerableOfTypeUsage">
            <summary>Sets the shim of EdmFunction.BuildIdentity(String functionName, IEnumerable`1&lt;TypeUsage&gt; functionParameters)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.BuiltInAttributeGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.CommandTextAttributeGet">
            <summary>Sets the shim of EdmFunction.get_CommandTextAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.EntitySetGet">
            <summary>Sets the shim of EdmFunction.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.EntitySetsGet">
            <summary>Sets the shim of EdmFunction.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.FullNameGet">
            <summary>Sets the shim of EdmFunction.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.HasUserDefinedBodyGet">
            <summary>Sets the shim of EdmFunction.get_HasUserDefinedBody()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.IsCachedStoreFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsCachedStoreFunction()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.IsComposableAttributeGet">
            <summary>Sets the shim of EdmFunction.get_IsComposableAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.IsFromProviderManifestGet">
            <summary>Sets the shim of EdmFunction.get_IsFromProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.IsFunctionImportGet">
            <summary>Sets the shim of EdmFunction.get_IsFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.IsModelDefinedFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsModelDefinedFunction()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.NiladicFunctionAttributeGet">
            <summary>Sets the shim of EdmFunction.get_NiladicFunctionAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.ParameterTypeSemanticsAttributeGet">
            <summary>Sets the shim of EdmFunction.get_ParameterTypeSemanticsAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.ParametersGet">
            <summary>Sets the shim of EdmFunction.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.ReturnParameterGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameter()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.ReturnParametersGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameters()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.SchemaGet">
            <summary>Sets the shim of EdmFunction.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.SetReadOnly">
            <summary>Sets the shim of EdmFunction.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.StoreFunctionNameAttributeGet">
            <summary>Sets the shim of EdmFunction.get_StoreFunctionNameAttribute()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.AggregateAttributeGet">
            <summary>Sets the shim of EdmFunction.get_AggregateAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmFunction.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.BuiltInAttributeGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmFunction.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.CommandTextAttributeGet">
            <summary>Sets the shim of EdmFunction.get_CommandTextAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.EntitySetGet">
            <summary>Sets the shim of EdmFunction.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.EntitySetsGet">
            <summary>Sets the shim of EdmFunction.get_EntitySets()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.FullNameGet">
            <summary>Sets the shim of EdmFunction.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.HasUserDefinedBodyGet">
            <summary>Sets the shim of EdmFunction.get_HasUserDefinedBody()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsCachedStoreFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsCachedStoreFunction()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsComposableAttributeGet">
            <summary>Sets the shim of EdmFunction.get_IsComposableAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsFromProviderManifestGet">
            <summary>Sets the shim of EdmFunction.get_IsFromProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsFunctionImportGet">
            <summary>Sets the shim of EdmFunction.get_IsFunctionImport()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.IsModelDefinedFunctionGet">
            <summary>Sets the shim of EdmFunction.get_IsModelDefinedFunction()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.NiladicFunctionAttributeGet">
            <summary>Sets the shim of EdmFunction.get_NiladicFunctionAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ParameterTypeSemanticsAttributeGet">
            <summary>Sets the shim of EdmFunction.get_ParameterTypeSemanticsAttribute()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ParametersGet">
            <summary>Sets the shim of EdmFunction.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ReturnParameterGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameter()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.ReturnParametersGet">
            <summary>Sets the shim of EdmFunction.get_ReturnParameters()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.SchemaGet">
            <summary>Sets the shim of EdmFunction.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.SetReadOnly">
            <summary>Sets the shim of EdmFunction.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmFunction.AllInstances.StoreFunctionNameAttributeGet">
            <summary>Sets the shim of EdmFunction.get_StoreFunctionNameAttribute()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection">
            <summary>Shim type of System.Data.Metadata.Edm.EdmItemCollection</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.IList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorIEnumerableOfXmlReader">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorIEnumerableOfXmlReaderIEnumerableOfString">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, IEnumerable`1&lt;String&gt; filePaths)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorIEnumerableOfXmlReaderReadOnlyCollectionOfStringIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, ReadOnlyCollection`1&lt;String&gt; filePaths, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.ConstructorStringArray">
            <summary>Sets the shim of EdmItemCollection.EdmItemCollection(String[] filePaths)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.EdmVersionGet">
            <summary>Sets the shim of EdmItemCollection.get_EdmVersion()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.EdmVersionSetDouble">
            <summary>Sets the shim of EdmItemCollection.set_EdmVersion(Double value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.GenerateFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GenerateFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of EdmItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.GetPrimitiveTypes">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.GetPrimitiveTypesDouble">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes(Double edmVersion)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.IsSystemNamespaceDbProviderManifestString">
            <summary>Sets the shim of EdmItemCollection.IsSystemNamespace(DbProviderManifest manifest, String namespaceName)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.EdmVersionGet">
            <summary>Sets the shim of EdmItemCollection.get_EdmVersion()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.EdmVersionSetDouble">
            <summary>Sets the shim of EdmItemCollection.set_EdmVersion(Double value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GenerateFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GenerateFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of EdmItemCollection.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of EdmItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetPrimitiveTypes">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmItemCollection.AllInstances.GetPrimitiveTypesDouble">
            <summary>Sets the shim of EdmItemCollection.GetPrimitiveTypes(Double edmVersion)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmMember">
            <summary>Shim type of System.Data.Metadata.Edm.EdmMember</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmMember.#ctor(System.Data.Metadata.Edm.EdmMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.ChangeDeclaringTypeWithoutCollectionFixupStructuralType">
            <summary>Sets the shim of EdmMember.ChangeDeclaringTypeWithoutCollectionFixup(StructuralType newDeclaringType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.ConstructorStringTypeUsage">
            <summary>Sets the shim of EdmMember.EdmMember(String name, TypeUsage memberTypeUsage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.DeclaringTypeGet">
            <summary>Sets the shim of EdmMember.get_DeclaringType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.IdentityGet">
            <summary>Sets the shim of EdmMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.IsStoreGeneratedComputedGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedComputed()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.IsStoreGeneratedIdentityGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedIdentity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.NameGet">
            <summary>Sets the shim of EdmMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.SetReadOnly">
            <summary>Sets the shim of EdmMember.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.ToString">
            <summary>Sets the shim of EdmMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.TypeUsageGet">
            <summary>Sets the shim of EdmMember.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.ChangeDeclaringTypeWithoutCollectionFixupStructuralType">
            <summary>Sets the shim of EdmMember.ChangeDeclaringTypeWithoutCollectionFixup(StructuralType newDeclaringType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.DeclaringTypeGet">
            <summary>Sets the shim of EdmMember.get_DeclaringType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IdentityGet">
            <summary>Sets the shim of EdmMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IsStoreGeneratedComputedGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedComputed()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.IsStoreGeneratedIdentityGet">
            <summary>Sets the shim of EdmMember.get_IsStoreGeneratedIdentity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.NameGet">
            <summary>Sets the shim of EdmMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.SetReadOnly">
            <summary>Sets the shim of EdmMember.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.ToString01">
            <summary>Sets the shim of EdmMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmMember.AllInstances.TypeUsageGet">
            <summary>Sets the shim of EdmMember.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmProperty">
            <summary>Shim type of System.Data.Metadata.Edm.EdmProperty</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.#ctor(System.Data.Metadata.Edm.EdmProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.ConstructorStringTypeUsage">
            <summary>Sets the shim of EdmProperty.EdmProperty(String name, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.ConstructorStringTypeUsagePropertyInfoRuntimeTypeHandle">
            <summary>Sets the shim of EdmProperty.EdmProperty(String name, TypeUsage typeUsage, PropertyInfo propertyInfo, RuntimeTypeHandle entityDeclaringType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.DefaultValueGet">
            <summary>Sets the shim of EdmProperty.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.NullableGet">
            <summary>Sets the shim of EdmProperty.get_Nullable()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.ValueGetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueGetter()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.ValueGetterSetFuncOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueGetter(Func`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.ValueSetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueSetter()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.ValueSetterSetActionOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueSetter(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EdmProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.DefaultValueGet">
            <summary>Sets the shim of EdmProperty.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.NullableGet">
            <summary>Sets the shim of EdmProperty.get_Nullable()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueGetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueGetter()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueGetterSetFuncOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueGetter(Func`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueSetterGet">
            <summary>Sets the shim of EdmProperty.get_ValueSetter()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmProperty.AllInstances.ValueSetterSetActionOfObjectObject">
            <summary>Sets the shim of EdmProperty.set_ValueSetter(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError">
            <summary>Shim type of System.Data.Metadata.Edm.EdmSchemaError</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.#ctor(System.Data.Metadata.Edm.EdmSchemaError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.ColumnGet">
            <summary>Sets the shim of EdmSchemaError.get_Column()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverity">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverityException">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity, Exception exception)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverityStringInt32Int32">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity, String schemaLocation, Int32 line, Int32 column)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.ConstructorStringInt32EdmSchemaErrorSeverityStringInt32Int32Exception">
            <summary>Sets the shim of EdmSchemaError.EdmSchemaError(String message, Int32 errorCode, EdmSchemaErrorSeverity severity, String schemaLocation, Int32 line, Int32 column, Exception exception)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.ErrorCodeGet">
            <summary>Sets the shim of EdmSchemaError.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.LineGet">
            <summary>Sets the shim of EdmSchemaError.get_Line()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.SchemaLocationGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaLocation()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.SchemaNameGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.SeverityGet">
            <summary>Sets the shim of EdmSchemaError.get_Severity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.SeveritySetEdmSchemaErrorSeverity">
            <summary>Sets the shim of EdmSchemaError.set_Severity(EdmSchemaErrorSeverity value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.StackTraceGet">
            <summary>Sets the shim of EdmSchemaError.get_StackTrace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.ToString">
            <summary>Sets the shim of EdmSchemaError.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.ColumnGet">
            <summary>Sets the shim of EdmSchemaError.get_Column()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of EdmSchemaError.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.LineGet">
            <summary>Sets the shim of EdmSchemaError.get_Line()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SchemaLocationGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaLocation()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SchemaNameGet">
            <summary>Sets the shim of EdmSchemaError.get_SchemaName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SeverityGet">
            <summary>Sets the shim of EdmSchemaError.get_Severity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.SeveritySetEdmSchemaErrorSeverity">
            <summary>Sets the shim of EdmSchemaError.set_Severity(EdmSchemaErrorSeverity value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.StackTraceGet">
            <summary>Sets the shim of EdmSchemaError.get_StackTrace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmSchemaError.AllInstances.ToString01">
            <summary>Sets the shim of EdmSchemaError.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmType">
            <summary>Shim type of System.Data.Metadata.Edm.EdmType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmType.#ctor(System.Data.Metadata.Edm.EdmType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEdmType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AbstractGet">
            <summary>Sets the shim of EdmType.get_Abstract()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AbstractSetBoolean">
            <summary>Sets the shim of EdmType.set_Abstract(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.BaseTypeGet">
            <summary>Sets the shim of EdmType.get_BaseType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.BaseTypeSetEdmType">
            <summary>Sets the shim of EdmType.set_BaseType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmType.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.CacheIdentityGet">
            <summary>Sets the shim of EdmType.get_CacheIdentity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.CacheIdentitySetString">
            <summary>Sets the shim of EdmType.set_CacheIdentity(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.ClrTypeGet">
            <summary>Sets the shim of EdmType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.Constructor">
            <summary>Sets the shim of EdmType.EdmType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of EdmType.EdmType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.CreateEdmTypeIdentityStringString">
            <summary>Sets the shim of EdmType.CreateEdmTypeIdentity(String namespaceName, String name)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.FullNameGet">
            <summary>Sets the shim of EdmType.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of EdmType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.GetCollectionType">
            <summary>Sets the shim of EdmType.GetCollectionType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.IdentityGet">
            <summary>Sets the shim of EdmType.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.InitializeEdmTypeStringStringDataSpaceBooleanEdmType">
            <summary>Sets the shim of EdmType.Initialize(EdmType edmType, String name, String namespaceName, DataSpace dataSpace, Boolean isAbstract, EdmType baseType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.IsAssignableFromEdmType">
            <summary>Sets the shim of EdmType.IsAssignableFrom(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.IsBaseTypeOfEdmType">
            <summary>Sets the shim of EdmType.IsBaseTypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.IsSubtypeOfEdmType">
            <summary>Sets the shim of EdmType.IsSubtypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.NameGet">
            <summary>Sets the shim of EdmType.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.NameSetString">
            <summary>Sets the shim of EdmType.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.NamespaceNameGet">
            <summary>Sets the shim of EdmType.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.NamespaceNameSetString">
            <summary>Sets the shim of EdmType.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.SetReadOnly">
            <summary>Sets the shim of EdmType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.ToString">
            <summary>Sets the shim of EdmType.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.AbstractGet">
            <summary>Sets the shim of EdmType.get_Abstract()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.AbstractSetBoolean">
            <summary>Sets the shim of EdmType.set_Abstract(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.BaseTypeGet">
            <summary>Sets the shim of EdmType.get_BaseType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.BaseTypeSetEdmType">
            <summary>Sets the shim of EdmType.set_BaseType(EdmType value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of EdmType.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.CacheIdentityGet">
            <summary>Sets the shim of EdmType.get_CacheIdentity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.CacheIdentitySetString">
            <summary>Sets the shim of EdmType.set_CacheIdentity(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.ClrTypeGet">
            <summary>Sets the shim of EdmType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.FullNameGet">
            <summary>Sets the shim of EdmType.get_FullName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of EdmType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.GetCollectionType">
            <summary>Sets the shim of EdmType.GetCollectionType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IdentityGet">
            <summary>Sets the shim of EdmType.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IsAssignableFromEdmType">
            <summary>Sets the shim of EdmType.IsAssignableFrom(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IsBaseTypeOfEdmType">
            <summary>Sets the shim of EdmType.IsBaseTypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.IsSubtypeOfEdmType">
            <summary>Sets the shim of EdmType.IsSubtypeOf(EdmType otherType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NameGet">
            <summary>Sets the shim of EdmType.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NameSetString">
            <summary>Sets the shim of EdmType.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of EdmType.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of EdmType.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.SetReadOnly">
            <summary>Sets the shim of EdmType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEdmType.AllInstances.ToString01">
            <summary>Sets the shim of EdmType.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntityContainer">
            <summary>Shim type of System.Data.Metadata.Edm.EntityContainer</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.#ctor(System.Data.Metadata.Edm.EntityContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AddEntitySetBaseEntitySetBase">
            <summary>Sets the shim of EntityContainer.AddEntitySetBase(EntitySetBase entitySetBase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AddFunctionImportEdmFunction">
            <summary>Sets the shim of EntityContainer.AddFunctionImport(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.BaseEntitySetsGet">
            <summary>Sets the shim of EntityContainer.get_BaseEntitySets()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityContainer.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.ConstructorStringDataSpace">
            <summary>Sets the shim of EntityContainer.EntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.FunctionImportsGet">
            <summary>Sets the shim of EntityContainer.get_FunctionImports()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.GetEntitySetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetEntitySetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.GetRelationshipSetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetRelationshipSetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.IdentityGet">
            <summary>Sets the shim of EntityContainer.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.NameGet">
            <summary>Sets the shim of EntityContainer.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.SetReadOnly">
            <summary>Sets the shim of EntityContainer.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.ToString">
            <summary>Sets the shim of EntityContainer.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.TryGetEntitySetByNameStringBooleanEntitySetOut">
            <summary>Sets the shim of EntityContainer.TryGetEntitySetByName(String name, Boolean ignoreCase, EntitySet&amp; entitySet)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.TryGetRelationshipSetByNameStringBooleanRelationshipSetOut">
            <summary>Sets the shim of EntityContainer.TryGetRelationshipSetByName(String name, Boolean ignoreCase, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.AddEntitySetBaseEntitySetBase">
            <summary>Sets the shim of EntityContainer.AddEntitySetBase(EntitySetBase entitySetBase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.AddFunctionImportEdmFunction">
            <summary>Sets the shim of EntityContainer.AddFunctionImport(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.BaseEntitySetsGet">
            <summary>Sets the shim of EntityContainer.get_BaseEntitySets()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityContainer.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.FunctionImportsGet">
            <summary>Sets the shim of EntityContainer.get_FunctionImports()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.GetEntitySetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetEntitySetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.GetRelationshipSetByNameStringBoolean">
            <summary>Sets the shim of EntityContainer.GetRelationshipSetByName(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.IdentityGet">
            <summary>Sets the shim of EntityContainer.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.NameGet">
            <summary>Sets the shim of EntityContainer.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.SetReadOnly">
            <summary>Sets the shim of EntityContainer.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.ToString01">
            <summary>Sets the shim of EntityContainer.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.TryGetEntitySetByNameStringBooleanEntitySetOut">
            <summary>Sets the shim of EntityContainer.TryGetEntitySetByName(String name, Boolean ignoreCase, EntitySet&amp; entitySet)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityContainer.AllInstances.TryGetRelationshipSetByNameStringBooleanRelationshipSetOut">
            <summary>Sets the shim of EntityContainer.TryGetRelationshipSetByName(String name, Boolean ignoreCase, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntitySet">
            <summary>Shim type of System.Data.Metadata.Edm.EntitySet</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntitySet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntitySet.#ctor(System.Data.Metadata.Edm.EntitySet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntitySet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntitySet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.ConstructorStringStringStringStringEntityType">
            <summary>Sets the shim of EntitySet.EntitySet(String name, String schema, String table, String definingQuery, EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.ElementTypeGet">
            <summary>Sets the shim of EntitySet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.ForeignKeyDependentsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyDependents()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.ForeignKeyPrincipalsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyPrincipals()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.HasForeignKeyRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasForeignKeyRelationships()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.HasIndependentRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasIndependentRelationships()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntitySet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.ElementTypeGet">
            <summary>Sets the shim of EntitySet.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.ForeignKeyDependentsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyDependents()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.ForeignKeyPrincipalsGet">
            <summary>Sets the shim of EntitySet.get_ForeignKeyPrincipals()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.HasForeignKeyRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasForeignKeyRelationships()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySet.AllInstances.HasIndependentRelationshipsGet">
            <summary>Sets the shim of EntitySet.get_HasIndependentRelationships()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase">
            <summary>Shim type of System.Data.Metadata.Edm.EntitySetBase</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.#ctor(System.Data.Metadata.Edm.EntitySetBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySetBase.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.CachedProviderSqlGet">
            <summary>Sets the shim of EntitySetBase.get_CachedProviderSql()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.CachedProviderSqlSetString">
            <summary>Sets the shim of EntitySetBase.set_CachedProviderSql(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.ChangeEntityContainerWithoutCollectionFixupEntityContainer">
            <summary>Sets the shim of EntitySetBase.ChangeEntityContainerWithoutCollectionFixup(EntityContainer newEntityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.ConstructorStringStringStringStringEntityTypeBase">
            <summary>Sets the shim of EntitySetBase.EntitySetBase(String name, String schema, String table, String definingQuery, EntityTypeBase entityType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.DefiningQueryGet">
            <summary>Sets the shim of EntitySetBase.get_DefiningQuery()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.DefiningQuerySetString">
            <summary>Sets the shim of EntitySetBase.set_DefiningQuery(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.ElementTypeGet">
            <summary>Sets the shim of EntitySetBase.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.ElementTypeSetEntityTypeBase">
            <summary>Sets the shim of EntitySetBase.set_ElementType(EntityTypeBase value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.EntityContainerGet">
            <summary>Sets the shim of EntitySetBase.get_EntityContainer()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.IdentityGet">
            <summary>Sets the shim of EntitySetBase.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.NameGet">
            <summary>Sets the shim of EntitySetBase.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.SchemaGet">
            <summary>Sets the shim of EntitySetBase.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.SetReadOnly">
            <summary>Sets the shim of EntitySetBase.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.TableGet">
            <summary>Sets the shim of EntitySetBase.get_Table()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.ToString">
            <summary>Sets the shim of EntitySetBase.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntitySetBase.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.CachedProviderSqlGet">
            <summary>Sets the shim of EntitySetBase.get_CachedProviderSql()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.CachedProviderSqlSetString">
            <summary>Sets the shim of EntitySetBase.set_CachedProviderSql(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ChangeEntityContainerWithoutCollectionFixupEntityContainer">
            <summary>Sets the shim of EntitySetBase.ChangeEntityContainerWithoutCollectionFixup(EntityContainer newEntityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.DefiningQueryGet">
            <summary>Sets the shim of EntitySetBase.get_DefiningQuery()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.DefiningQuerySetString">
            <summary>Sets the shim of EntitySetBase.set_DefiningQuery(String value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ElementTypeGet">
            <summary>Sets the shim of EntitySetBase.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ElementTypeSetEntityTypeBase">
            <summary>Sets the shim of EntitySetBase.set_ElementType(EntityTypeBase value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.EntityContainerGet">
            <summary>Sets the shim of EntitySetBase.get_EntityContainer()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.IdentityGet">
            <summary>Sets the shim of EntitySetBase.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.NameGet">
            <summary>Sets the shim of EntitySetBase.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.SchemaGet">
            <summary>Sets the shim of EntitySetBase.get_Schema()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.SetReadOnly">
            <summary>Sets the shim of EntitySetBase.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.TableGet">
            <summary>Sets the shim of EntitySetBase.get_Table()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntitySetBase.AllInstances.ToString01">
            <summary>Sets the shim of EntitySetBase.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntityType">
            <summary>Shim type of System.Data.Metadata.Edm.EntityType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityType.#ctor(System.Data.Metadata.Edm.EntityType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of EntityType.EntityType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.ConstructorStringStringDataSpaceIEnumerableOfStringIEnumerableOfEdmMember">
            <summary>Sets the shim of EntityType.EntityType(String name, String namespaceName, DataSpace dataSpace, IEnumerable`1&lt;String&gt; keyMemberNames, IEnumerable`1&lt;EdmMember&gt; members)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.GetKeyRowTypeMetadataWorkspace">
            <summary>Sets the shim of EntityType.GetKeyRowType(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.GetReferenceType">
            <summary>Sets the shim of EntityType.GetReferenceType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.NavigationPropertiesGet">
            <summary>Sets the shim of EntityType.get_NavigationProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.PropertiesGet">
            <summary>Sets the shim of EntityType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.SetMemberSqlEdmMemberString">
            <summary>Sets the shim of EntityType.SetMemberSql(EdmMember member, String sql)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.TryGetMemberSqlEdmMemberStringOut">
            <summary>Sets the shim of EntityType.TryGetMemberSql(EdmMember member, String&amp; sql)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.TryGetNavigationPropertyStringStringStringNavigationPropertyOut">
            <summary>Sets the shim of EntityType.TryGetNavigationProperty(String relationshipType, String fromName, String toName, NavigationProperty&amp; navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of EntityType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EntityType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.GetKeyRowTypeMetadataWorkspace">
            <summary>Sets the shim of EntityType.GetKeyRowType(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.GetReferenceType">
            <summary>Sets the shim of EntityType.GetReferenceType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.NavigationPropertiesGet">
            <summary>Sets the shim of EntityType.get_NavigationProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.PropertiesGet">
            <summary>Sets the shim of EntityType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.SetMemberSqlEdmMemberString">
            <summary>Sets the shim of EntityType.SetMemberSql(EdmMember member, String sql)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.TryGetMemberSqlEdmMemberStringOut">
            <summary>Sets the shim of EntityType.TryGetMemberSql(EdmMember member, String&amp; sql)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.TryGetNavigationPropertyStringStringStringNavigationPropertyOut">
            <summary>Sets the shim of EntityType.TryGetNavigationProperty(String relationshipType, String fromName, String toName, NavigationProperty&amp; navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of EntityType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase">
            <summary>Shim type of System.Data.Metadata.Edm.EntityTypeBase</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.#ctor(System.Data.Metadata.Edm.EntityTypeBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.AddKeyMemberEdmMember">
            <summary>Sets the shim of EntityTypeBase.AddKeyMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.CheckAndAddKeyMembersIEnumerableOfString">
            <summary>Sets the shim of EntityTypeBase.CheckAndAddKeyMembers(IEnumerable`1&lt;String&gt; keyMembers)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.CheckAndAddMembersIEnumerableOfEdmMemberEntityType">
            <summary>Sets the shim of EntityTypeBase.CheckAndAddMembers(IEnumerable`1&lt;EdmMember&gt; members, EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.ConstructorStringStringDataSpace">
            <summary>Sets the shim of EntityTypeBase.EntityTypeBase(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.KeyMemberNamesGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMemberNames()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.KeyMembersGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMembers()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.SetReadOnly">
            <summary>Sets the shim of EntityTypeBase.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.AddKeyMemberEdmMember">
            <summary>Sets the shim of EntityTypeBase.AddKeyMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.CheckAndAddKeyMembersIEnumerableOfString">
            <summary>Sets the shim of EntityTypeBase.CheckAndAddKeyMembers(IEnumerable`1&lt;String&gt; keyMembers)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.KeyMemberNamesGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMemberNames()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.KeyMembersGet">
            <summary>Sets the shim of EntityTypeBase.get_KeyMembers()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEntityTypeBase.AllInstances.SetReadOnly">
            <summary>Sets the shim of EntityTypeBase.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEnumMember">
            <summary>Shim type of System.Data.Metadata.Edm.EnumMember</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumMember.#ctor(System.Data.Metadata.Edm.EnumMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.ConstructorStringObject">
            <summary>Sets the shim of EnumMember.EnumMember(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.IdentityGet">
            <summary>Sets the shim of EnumMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.NameGet">
            <summary>Sets the shim of EnumMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.ToString">
            <summary>Sets the shim of EnumMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.ValueGet">
            <summary>Sets the shim of EnumMember.get_Value()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEnumMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumMember.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.IdentityGet">
            <summary>Sets the shim of EnumMember.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.NameGet">
            <summary>Sets the shim of EnumMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.ToString01">
            <summary>Sets the shim of EnumMember.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumMember.AllInstances.ValueGet">
            <summary>Sets the shim of EnumMember.get_Value()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEnumType">
            <summary>Shim type of System.Data.Metadata.Edm.EnumType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumType.#ctor(System.Data.Metadata.Edm.EnumType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimEnumType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.AddMemberEnumMember">
            <summary>Sets the shim of EnumType.AddMember(EnumMember enumMember)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.Constructor">
            <summary>Sets the shim of EnumType.EnumType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.ConstructorStringStringPrimitiveTypeBooleanDataSpace">
            <summary>Sets the shim of EnumType.EnumType(String name, String namespaceName, PrimitiveType underlyingType, Boolean isFlags, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.ConstructorType">
            <summary>Sets the shim of EnumType.EnumType(Type clrType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.IsFlagsGet">
            <summary>Sets the shim of EnumType.get_IsFlags()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.MembersGet">
            <summary>Sets the shim of EnumType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.SetReadOnly">
            <summary>Sets the shim of EnumType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.UnderlyingTypeGet">
            <summary>Sets the shim of EnumType.get_UnderlyingType()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimEnumType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.AllInstances.AddMemberEnumMember">
            <summary>Sets the shim of EnumType.AddMember(EnumMember enumMember)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of EnumType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.AllInstances.IsFlagsGet">
            <summary>Sets the shim of EnumType.get_IsFlags()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.AllInstances.MembersGet">
            <summary>Sets the shim of EnumType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.AllInstances.SetReadOnly">
            <summary>Sets the shim of EnumType.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimEnumType.AllInstances.UnderlyingTypeGet">
            <summary>Sets the shim of EnumType.get_UnderlyingType()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimFacet">
            <summary>Shim type of System.Data.Metadata.Edm.Facet</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacet.#ctor(System.Data.Metadata.Edm.Facet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.BuiltInTypeKindGet">
            <summary>Sets the shim of Facet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.Constructor">
            <summary>Sets the shim of Facet.Facet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.CreateFacetDescriptionObject">
            <summary>Sets the shim of Facet.Create(FacetDescription facetDescription, Object value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.CreateFacetDescriptionObjectBoolean">
            <summary>Sets the shim of Facet.Create(FacetDescription facetDescription, Object value, Boolean bypassKnownValues)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.DescriptionGet">
            <summary>Sets the shim of Facet.get_Description()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.FacetTypeGet">
            <summary>Sets the shim of Facet.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.IdentityGet">
            <summary>Sets the shim of Facet.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.IsUnboundedGet">
            <summary>Sets the shim of Facet.get_IsUnbounded()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.NameGet">
            <summary>Sets the shim of Facet.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.ToString">
            <summary>Sets the shim of Facet.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.ValueGet">
            <summary>Sets the shim of Facet.get_Value()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of Facet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.Constructor">
            <summary>Sets the shim of Facet.Facet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.DescriptionGet">
            <summary>Sets the shim of Facet.get_Description()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.FacetTypeGet">
            <summary>Sets the shim of Facet.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.IdentityGet">
            <summary>Sets the shim of Facet.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.IsUnboundedGet">
            <summary>Sets the shim of Facet.get_IsUnbounded()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.NameGet">
            <summary>Sets the shim of Facet.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.ToString01">
            <summary>Sets the shim of Facet.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacet.AllInstances.ValueGet">
            <summary>Sets the shim of Facet.get_Value()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimFacetDescription">
            <summary>Shim type of System.Data.Metadata.Edm.FacetDescription</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.#ctor(System.Data.Metadata.Edm.FacetDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.ConstructorStringEdmTypeNullableOfInt32NullableOfInt32Object">
            <summary>Sets the shim of FacetDescription.FacetDescription(String facetName, EdmType facetType, Nullable`1&lt;Int32&gt; minValue, Nullable`1&lt;Int32&gt; maxValue, Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.ConstructorStringEdmTypeNullableOfInt32NullableOfInt32ObjectBooleanString">
            <summary>Sets the shim of FacetDescription.FacetDescription(String facetName, EdmType facetType, Nullable`1&lt;Int32&gt; minValue, Nullable`1&lt;Int32&gt; maxValue, Object defaultValue, Boolean isConstant, String declaringTypeName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.DefaultValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValueFacet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.DefaultValueGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.FacetNameGet">
            <summary>Sets the shim of FacetDescription.get_FacetName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.FacetTypeGet">
            <summary>Sets the shim of FacetDescription.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.GetBooleanFacetBoolean">
            <summary>Sets the shim of FacetDescription.GetBooleanFacet(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.IsConstantGet">
            <summary>Sets the shim of FacetDescription.get_IsConstant()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.IsNumericTypeEdmType">
            <summary>Sets the shim of FacetDescription.IsNumericType(EdmType facetType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.IsRequiredGet">
            <summary>Sets the shim of FacetDescription.get_IsRequired()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.MaxValueGet">
            <summary>Sets the shim of FacetDescription.get_MaxValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.MinValueGet">
            <summary>Sets the shim of FacetDescription.get_MinValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.NullValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_NullValueFacet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.StaticConstructor">
            <summary>Sets the shim of FacetDescription.FacetDescription()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.ToString">
            <summary>Sets the shim of FacetDescription.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.DefaultValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValueFacet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.DefaultValueGet">
            <summary>Sets the shim of FacetDescription.get_DefaultValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.FacetNameGet">
            <summary>Sets the shim of FacetDescription.get_FacetName()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.FacetTypeGet">
            <summary>Sets the shim of FacetDescription.get_FacetType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.GetBooleanFacetBoolean">
            <summary>Sets the shim of FacetDescription.GetBooleanFacet(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.IsConstantGet">
            <summary>Sets the shim of FacetDescription.get_IsConstant()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.IsRequiredGet">
            <summary>Sets the shim of FacetDescription.get_IsRequired()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.MaxValueGet">
            <summary>Sets the shim of FacetDescription.get_MaxValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.MinValueGet">
            <summary>Sets the shim of FacetDescription.get_MinValue()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.NullValueFacetGet">
            <summary>Sets the shim of FacetDescription.get_NullValueFacet()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFacetDescription.AllInstances.ToString01">
            <summary>Sets the shim of FacetDescription.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter">
            <summary>Shim type of System.Data.Metadata.Edm.FunctionParameter</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.#ctor(System.Data.Metadata.Edm.FunctionParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.BuiltInTypeKindGet">
            <summary>Sets the shim of FunctionParameter.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.ConstructorStringTypeUsageParameterMode">
            <summary>Sets the shim of FunctionParameter.FunctionParameter(String name, TypeUsage typeUsage, ParameterMode parameterMode)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.DeclaringFunctionGet">
            <summary>Sets the shim of FunctionParameter.get_DeclaringFunction()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.IdentityGet">
            <summary>Sets the shim of FunctionParameter.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.ModeGet">
            <summary>Sets the shim of FunctionParameter.get_Mode()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.NameGet">
            <summary>Sets the shim of FunctionParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.SetReadOnly">
            <summary>Sets the shim of FunctionParameter.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.StaticConstructor">
            <summary>Sets the shim of FunctionParameter.FunctionParameter()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.ToString">
            <summary>Sets the shim of FunctionParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.TypeUsageGet">
            <summary>Sets the shim of FunctionParameter.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of FunctionParameter.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.DeclaringFunctionGet">
            <summary>Sets the shim of FunctionParameter.get_DeclaringFunction()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.IdentityGet">
            <summary>Sets the shim of FunctionParameter.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.ModeGet">
            <summary>Sets the shim of FunctionParameter.get_Mode()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.NameGet">
            <summary>Sets the shim of FunctionParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.SetReadOnly">
            <summary>Sets the shim of FunctionParameter.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.ToString01">
            <summary>Sets the shim of FunctionParameter.ToString()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimFunctionParameter.AllInstances.TypeUsageGet">
            <summary>Sets the shim of FunctionParameter.get_TypeUsage()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimGlobalItem">
            <summary>Shim type of System.Data.Metadata.Edm.GlobalItem</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.#ctor(System.Data.Metadata.Edm.GlobalItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.Constructor">
            <summary>Sets the shim of GlobalItem.GlobalItem()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.DataSpaceGet">
            <summary>Sets the shim of GlobalItem.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.DataSpaceSetDataSpace">
            <summary>Sets the shim of GlobalItem.set_DataSpace(DataSpace value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.AllInstances.DataSpaceGet">
            <summary>Sets the shim of GlobalItem.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimGlobalItem.AllInstances.DataSpaceSetDataSpace">
            <summary>Sets the shim of GlobalItem.set_DataSpace(DataSpace value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimItemCollection">
            <summary>Shim type of System.Data.Metadata.Edm.ItemCollection</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.#ctor(System.Data.Metadata.Edm.ItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.IList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetItemOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetItemOf1StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Boolean,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.TryGetItemOf1StringBooleanM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Boolean,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, Boolean ignoreCase, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.TryGetItemOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, !!0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AddInternalGlobalItem">
            <summary>Sets the shim of ItemCollection.AddInternal(GlobalItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AtomicAddRangeListOfGlobalItem">
            <summary>Sets the shim of ItemCollection.AtomicAddRange(List`1&lt;GlobalItem&gt; items)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.ConstructorDataSpace">
            <summary>Sets the shim of ItemCollection.ItemCollection(DataSpace dataspace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.DataSpaceGet">
            <summary>Sets the shim of ItemCollection.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.FunctionLookUpTableGet">
            <summary>Sets the shim of ItemCollection.get_FunctionLookUpTable()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetCaseSensitiveFunctionsReadOnlyCollectionOfEdmFunctionString">
            <summary>Sets the shim of ItemCollection.GetCaseSensitiveFunctions(ReadOnlyCollection`1&lt;EdmFunction&gt; functionOverloads, String functionName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetEntityContainerString">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetEntityContainerStringBoolean">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetFunctionsDictionaryOfStringReadOnlyCollectionOfEdmFunctionStringBoolean">
            <summary>Sets the shim of ItemCollection.GetFunctions(Dictionary`2&lt;String,ReadOnlyCollection`1&lt;EdmFunction&gt;&gt; functionCollection, String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetFunctionsString">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetFunctionsStringBoolean">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetTypeStringString">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.GetTypeStringStringBoolean">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.InternalGetItemsType">
            <summary>Sets the shim of ItemCollection.InternalGetItems(Type type)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.MetadataEqualsItemCollection">
            <summary>Sets the shim of ItemCollection.MetadataEquals(ItemCollection other)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.TryGetEntityContainerStringBooleanEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, Boolean ignoreCase, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.TryGetEntityContainerStringEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.TryGetFunctionStringTypeUsageArrayBooleanEdmFunctionOut">
            <summary>Sets the shim of ItemCollection.TryGetFunction(String functionName, TypeUsage[] parameterTypes, Boolean ignoreCase, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.TryGetTypeStringStringBooleanEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, Boolean ignoreCase, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.TryGetTypeStringStringEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, EdmType&amp; type)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetItemOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.ItemCollection,System.String,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetItemOf1StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.ItemCollection,System.String,System.Boolean,``0})">
            <summary>Sets the shim of ItemCollection.GetItem(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.ItemCollection,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ItemCollection.GetItems()</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetItemOf1StringBooleanM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Metadata.Edm.ItemCollection,System.String,System.Boolean,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, Boolean ignoreCase, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetItemOf1StringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Metadata.Edm.ItemCollection,System.String,``0,System.Boolean})">
            <summary>Sets the shim of ItemCollection.TryGetItem(String identity, !!0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.AddInternalGlobalItem">
            <summary>Sets the shim of ItemCollection.AddInternal(GlobalItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.AtomicAddRangeListOfGlobalItem">
            <summary>Sets the shim of ItemCollection.AtomicAddRange(List`1&lt;GlobalItem&gt; items)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.DataSpaceGet">
            <summary>Sets the shim of ItemCollection.get_DataSpace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.FunctionLookUpTableGet">
            <summary>Sets the shim of ItemCollection.get_FunctionLookUpTable()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetEntityContainerString">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetEntityContainerStringBoolean">
            <summary>Sets the shim of ItemCollection.GetEntityContainer(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetFunctionsString">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetFunctionsStringBoolean">
            <summary>Sets the shim of ItemCollection.GetFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetTypeStringString">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.GetTypeStringStringBoolean">
            <summary>Sets the shim of ItemCollection.GetType(String name, String namespaceName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.InternalGetItemsType">
            <summary>Sets the shim of ItemCollection.InternalGetItems(Type type)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.MetadataEqualsItemCollection">
            <summary>Sets the shim of ItemCollection.MetadataEquals(ItemCollection other)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetEntityContainerStringBooleanEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, Boolean ignoreCase, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetEntityContainerStringEntityContainerOut">
            <summary>Sets the shim of ItemCollection.TryGetEntityContainer(String name, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetFunctionStringTypeUsageArrayBooleanEdmFunctionOut">
            <summary>Sets the shim of ItemCollection.TryGetFunction(String functionName, TypeUsage[] parameterTypes, Boolean ignoreCase, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetTypeStringStringBooleanEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, Boolean ignoreCase, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimItemCollection.AllInstances.TryGetTypeStringStringEdmTypeOut">
            <summary>Sets the shim of ItemCollection.TryGetType(String name, String namespaceName, EdmType&amp; type)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimMetadataItem">
            <summary>Shim type of System.Data.Metadata.Edm.MetadataItem</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.#ctor(System.Data.Metadata.Edm.MetadataItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AddMetadataPropertiesListOfMetadataProperty">
            <summary>Sets the shim of MetadataItem.AddMetadataProperties(List`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.BuildIdentityStringBuilder">
            <summary>Sets the shim of MetadataItem.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.CollectionKindFacetDescriptionGet">
            <summary>Sets the shim of MetadataItem.get_CollectionKindFacetDescription()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.Constructor">
            <summary>Sets the shim of MetadataItem.MetadataItem()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.DefaultValueFacetDescriptionGet">
            <summary>Sets the shim of MetadataItem.get_DefaultValueFacetDescription()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.DocumentationGet">
            <summary>Sets the shim of MetadataItem.get_Documentation()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.DocumentationSetDocumentation">
            <summary>Sets the shim of MetadataItem.set_Documentation(Documentation value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.EdmEqualsMetadataItem">
            <summary>Sets the shim of MetadataItem.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.GetBuiltInTypeBuiltInTypeKind">
            <summary>Sets the shim of MetadataItem.GetBuiltInType(BuiltInTypeKind builtInTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.GetDataSpace">
            <summary>Sets the shim of MetadataItem.GetDataSpace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.GetGeneralFacetDescriptions">
            <summary>Sets the shim of MetadataItem.GetGeneralFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.GetParameterMode">
            <summary>Sets the shim of MetadataItem.GetParameterMode()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.IsReadOnlyGet">
            <summary>Sets the shim of MetadataItem.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.MetadataPropertiesGet">
            <summary>Sets the shim of MetadataItem.get_MetadataProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.NullableFacetDescriptionGet">
            <summary>Sets the shim of MetadataItem.get_NullableFacetDescription()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.SetDataSpaceDataSpace">
            <summary>Sets the shim of MetadataItem.SetDataSpace(DataSpace space)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.SetParameterModeParameterMode">
            <summary>Sets the shim of MetadataItem.SetParameterMode(ParameterMode mode)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.SetReadOnly">
            <summary>Sets the shim of MetadataItem.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.StaticConstructor">
            <summary>Sets the shim of MetadataItem.MetadataItem()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.AddMetadataPropertiesListOfMetadataProperty">
            <summary>Sets the shim of MetadataItem.AddMetadataProperties(List`1&lt;MetadataProperty&gt; metadataProperties)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of MetadataItem.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.DocumentationGet">
            <summary>Sets the shim of MetadataItem.get_Documentation()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.DocumentationSetDocumentation">
            <summary>Sets the shim of MetadataItem.set_Documentation(Documentation value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of MetadataItem.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.GetDataSpace">
            <summary>Sets the shim of MetadataItem.GetDataSpace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.GetParameterMode">
            <summary>Sets the shim of MetadataItem.GetParameterMode()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of MetadataItem.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.MetadataPropertiesGet">
            <summary>Sets the shim of MetadataItem.get_MetadataProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.SetDataSpaceDataSpace">
            <summary>Sets the shim of MetadataItem.SetDataSpace(DataSpace space)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.SetParameterModeParameterMode">
            <summary>Sets the shim of MetadataItem.SetParameterMode(ParameterMode mode)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataItem.AllInstances.SetReadOnly">
            <summary>Sets the shim of MetadataItem.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty">
            <summary>Shim type of System.Data.Metadata.Edm.MetadataProperty</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.#ctor(System.Data.Metadata.Edm.MetadataProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.BuiltInTypeKindGet">
            <summary>Sets the shim of MetadataProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.ConstructorStringEdmTypeBooleanObject">
            <summary>Sets the shim of MetadataProperty.MetadataProperty(String name, EdmType edmType, Boolean isCollectionType, Object value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.ConstructorStringTypeUsageObject">
            <summary>Sets the shim of MetadataProperty.MetadataProperty(String name, TypeUsage typeUsage, Object value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.IdentityGet">
            <summary>Sets the shim of MetadataProperty.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.NameGet">
            <summary>Sets the shim of MetadataProperty.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.PropertyKindGet">
            <summary>Sets the shim of MetadataProperty.get_PropertyKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.SetReadOnly">
            <summary>Sets the shim of MetadataProperty.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.TypeUsageGet">
            <summary>Sets the shim of MetadataProperty.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.ValueGet">
            <summary>Sets the shim of MetadataProperty.get_Value()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of MetadataProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.IdentityGet">
            <summary>Sets the shim of MetadataProperty.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.NameGet">
            <summary>Sets the shim of MetadataProperty.get_Name()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.PropertyKindGet">
            <summary>Sets the shim of MetadataProperty.get_PropertyKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.SetReadOnly">
            <summary>Sets the shim of MetadataProperty.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.TypeUsageGet">
            <summary>Sets the shim of MetadataProperty.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataProperty.AllInstances.ValueGet">
            <summary>Sets the shim of MetadataProperty.get_Value()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace">
            <summary>Shim type of System.Data.Metadata.Edm.MetadataWorkspace</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemOf1StringBooleanDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemOf1StringDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemsOf1DataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.DataSpace,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetItemOf1StringBooleanDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, Boolean ignoreCase, DataSpace dataSpace, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetItemOf1StringDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Data.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, DataSpace space, !!0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AddMetadataEntryTokenObject">
            <summary>Sets the shim of MetadataWorkspace.AddMetadataEntryToken(Object token)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.ClearCache">
            <summary>Sets the shim of MetadataWorkspace.ClearCache()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.Constructor">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.ConstructorIEnumerableOfStringIEnumerableOfAssembly">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace(IEnumerable`1&lt;String&gt; paths, IEnumerable`1&lt;Assembly&gt; assembliesToConsider)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.CreateEntitySqlParser">
            <summary>Sets the shim of MetadataWorkspace.CreateEntitySqlParser()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.CreateQueryCommandTreeDbExpression">
            <summary>Sets the shim of MetadataWorkspace.CreateQueryCommandTree(DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetCanonicalModelTypeUsagePrimitiveTypeKind">
            <summary>Sets the shim of MetadataWorkspace.GetCanonicalModelTypeUsage(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetCqtViewEntitySetBase">
            <summary>Sets the shim of MetadataWorkspace.GetCqtView(EntitySetBase extent)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEdmSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEdmSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEntityContainerStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetEntityContainerStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetFunctionsStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetFunctionsStringStringDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of MetadataWorkspace.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemCollectionDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemCollectionDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace, Boolean required)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetItemsDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetMappedPrimitiveTypePrimitiveTypeKindDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetModelPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of MetadataWorkspace.GetModelPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetOSpaceTypeUsageTypeUsage">
            <summary>Sets the shim of MetadataWorkspace.GetOSpaceTypeUsage(TypeUsage edmSpaceTypeUsage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetObjectSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(EnumType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetObjectSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(StructuralType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetPrimitiveTypesDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetPrimitiveTypes(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetRelevantMembersForUpdateEntitySetBaseEntityTypeBaseBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase entitySet, EntityTypeBase entityType, Boolean partialUpdateSupported)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetRequiredOriginalValueMembersEntitySetBaseEntityTypeBase">
            <summary>Sets the shim of MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase entitySet, EntityTypeBase entityType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetTypeStringStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.GetTypeStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.ImplicitLoadAssemblyForTypeTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadAssemblyForType(Type type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.ImplicitLoadFromEntityTypeEntityTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadFromEntityType(EntityType type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.IsItemCollectionAlreadyRegisteredDataSpace">
            <summary>Sets the shim of MetadataWorkspace.IsItemCollectionAlreadyRegistered(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.IsMetadataWorkspaceCSCompatibleMetadataWorkspace">
            <summary>Sets the shim of MetadataWorkspace.IsMetadataWorkspaceCSCompatible(MetadataWorkspace other)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.LoadFromAssemblyAssembly">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.LoadFromAssemblyAssemblyActionOfString">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.MetadataWorkspaceIdGet">
            <summary>Sets the shim of MetadataWorkspace.get_MetadataWorkspaceId()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.RegisterItemCollectionItemCollection">
            <summary>Sets the shim of MetadataWorkspace.RegisterItemCollection(ItemCollection collection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.ShallowCopy">
            <summary>Sets the shim of MetadataWorkspace.ShallowCopy()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.StaticConstructor">
            <summary>Sets the shim of MetadataWorkspace.MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEdmSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(EnumType objectSpaceType, EnumType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEdmSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(StructuralType objectSpaceType, StructuralType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEntityContainerStringBooleanDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetEntityContainerStringDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetFunctionStringStringTypeUsageArrayBooleanDataSpaceEdmFunctionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetFunction(String name, String namespaceName, TypeUsage[] parameterTypes, Boolean ignoreCase, DataSpace dataSpace, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetItemCollectionDataSpaceItemCollectionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetItemCollection(DataSpace dataSpace, ItemCollection&amp; collection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetObjectSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(EnumType edmSpaceType, EnumType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetObjectSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(StructuralType edmSpaceType, StructuralType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetTypeStringStringBooleanDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.TryGetTypeStringStringDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemOf1StringBooleanDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.MetadataWorkspace,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemOf1StringDataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.MetadataWorkspace,System.String,System.Data.Metadata.Edm.DataSpace,``0})">
            <summary>Sets the shim of MetadataWorkspace.GetItem(String identity, DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemsOf1DataSpace``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetItemOf1StringBooleanDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Metadata.Edm.MetadataWorkspace,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, Boolean ignoreCase, DataSpace dataSpace, !!0&amp; item)</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetItemOf1StringDataSpaceM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Metadata.Edm.MetadataWorkspace,System.String,System.Data.Metadata.Edm.DataSpace,``0,System.Boolean})">
            <summary>Sets the shim of MetadataWorkspace.TryGetItem(String identity, DataSpace space, !!0&amp; item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.AddMetadataEntryTokenObject">
            <summary>Sets the shim of MetadataWorkspace.AddMetadataEntryToken(Object token)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.CreateEntitySqlParser">
            <summary>Sets the shim of MetadataWorkspace.CreateEntitySqlParser()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.CreateQueryCommandTreeDbExpression">
            <summary>Sets the shim of MetadataWorkspace.CreateQueryCommandTree(DbExpression query)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetCanonicalModelTypeUsagePrimitiveTypeKind">
            <summary>Sets the shim of MetadataWorkspace.GetCanonicalModelTypeUsage(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetCqtViewEntitySetBase">
            <summary>Sets the shim of MetadataWorkspace.GetCqtView(EntitySetBase extent)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEdmSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEdmSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetEdmSpaceType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEntityContainerStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetEntityContainerStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetEntityContainer(String name, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetFunctionsStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetFunctionsStringStringDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetFunctions(String name, String namespaceName, DataSpace dataSpace, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetGeneratedFunctionDefinitionEdmFunction">
            <summary>Sets the shim of MetadataWorkspace.GetGeneratedFunctionDefinition(EdmFunction function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemCollectionDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemCollectionDataSpaceBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetItemCollection(DataSpace dataSpace, Boolean required)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetItemsDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetItems(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKindDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetModelPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of MetadataWorkspace.GetModelPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetOSpaceTypeUsageTypeUsage">
            <summary>Sets the shim of MetadataWorkspace.GetOSpaceTypeUsage(TypeUsage edmSpaceTypeUsage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetObjectSpaceTypeEnumType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(EnumType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetObjectSpaceTypeStructuralType">
            <summary>Sets the shim of MetadataWorkspace.GetObjectSpaceType(StructuralType edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetPrimitiveTypesDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetPrimitiveTypes(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetRelevantMembersForUpdateEntitySetBaseEntityTypeBaseBoolean">
            <summary>Sets the shim of MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase entitySet, EntityTypeBase entityType, Boolean partialUpdateSupported)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetRequiredOriginalValueMembersEntitySetBaseEntityTypeBase">
            <summary>Sets the shim of MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase entitySet, EntityTypeBase entityType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetTypeStringStringBooleanDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.GetTypeStringStringDataSpace">
            <summary>Sets the shim of MetadataWorkspace.GetType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.ImplicitLoadAssemblyForTypeTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadAssemblyForType(Type type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.ImplicitLoadFromEntityTypeEntityTypeAssembly">
            <summary>Sets the shim of MetadataWorkspace.ImplicitLoadFromEntityType(EntityType type, Assembly callingAssembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.IsItemCollectionAlreadyRegisteredDataSpace">
            <summary>Sets the shim of MetadataWorkspace.IsItemCollectionAlreadyRegistered(DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.IsMetadataWorkspaceCSCompatibleMetadataWorkspace">
            <summary>Sets the shim of MetadataWorkspace.IsMetadataWorkspaceCSCompatible(MetadataWorkspace other)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.LoadFromAssemblyAssembly">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.LoadFromAssemblyAssemblyActionOfString">
            <summary>Sets the shim of MetadataWorkspace.LoadFromAssembly(Assembly assembly, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.MetadataWorkspaceIdGet">
            <summary>Sets the shim of MetadataWorkspace.get_MetadataWorkspaceId()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.RegisterItemCollectionItemCollection">
            <summary>Sets the shim of MetadataWorkspace.RegisterItemCollection(ItemCollection collection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.ShallowCopy">
            <summary>Sets the shim of MetadataWorkspace.ShallowCopy()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEdmSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(EnumType objectSpaceType, EnumType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEdmSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEdmSpaceType(StructuralType objectSpaceType, StructuralType&amp; edmSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEntityContainerStringBooleanDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, Boolean ignoreCase, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetEntityContainerStringDataSpaceEntityContainerOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetEntityContainer(String name, DataSpace dataSpace, EntityContainer&amp; entityContainer)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetFunctionStringStringTypeUsageArrayBooleanDataSpaceEdmFunctionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetFunction(String name, String namespaceName, TypeUsage[] parameterTypes, Boolean ignoreCase, DataSpace dataSpace, EdmFunction&amp; function)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetItemCollectionDataSpaceItemCollectionOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetItemCollection(DataSpace dataSpace, ItemCollection&amp; collection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetObjectSpaceTypeEnumTypeEnumTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(EnumType edmSpaceType, EnumType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetObjectSpaceTypeStructuralTypeStructuralTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetObjectSpaceType(StructuralType edmSpaceType, StructuralType&amp; objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetTypeStringStringBooleanDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, Boolean ignoreCase, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimMetadataWorkspace.AllInstances.TryGetTypeStringStringDataSpaceEdmTypeOut">
            <summary>Sets the shim of MetadataWorkspace.TryGetType(String name, String namespaceName, DataSpace dataSpace, EdmType&amp; type)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty">
            <summary>Shim type of System.Data.Metadata.Edm.NavigationProperty</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.#ctor(System.Data.Metadata.Edm.NavigationProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.BuiltInTypeKindGet">
            <summary>Sets the shim of NavigationProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.ConstructorStringTypeUsage">
            <summary>Sets the shim of NavigationProperty.NavigationProperty(String name, TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.ConstructorStringTypeUsagePropertyInfo">
            <summary>Sets the shim of NavigationProperty.NavigationProperty(String name, TypeUsage typeUsage, PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.FromEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_FromEndMember()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.FromEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_FromEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.GetDependentProperties">
            <summary>Sets the shim of NavigationProperty.GetDependentProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.RelationshipTypeGet">
            <summary>Sets the shim of NavigationProperty.get_RelationshipType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.RelationshipTypeSetRelationshipType">
            <summary>Sets the shim of NavigationProperty.set_RelationshipType(RelationshipType value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.ToEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.ToEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_ToEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of NavigationProperty.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.FromEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_FromEndMember()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.FromEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_FromEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.GetDependentProperties">
            <summary>Sets the shim of NavigationProperty.GetDependentProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.RelationshipTypeGet">
            <summary>Sets the shim of NavigationProperty.get_RelationshipType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.RelationshipTypeSetRelationshipType">
            <summary>Sets the shim of NavigationProperty.set_RelationshipType(RelationshipType value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.ToEndMemberGet">
            <summary>Sets the shim of NavigationProperty.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimNavigationProperty.AllInstances.ToEndMemberSetRelationshipEndMember">
            <summary>Sets the shim of NavigationProperty.set_ToEndMember(RelationshipEndMember value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection">
            <summary>Shim type of System.Data.Metadata.Edm.ObjectItemCollection</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.#ctor(System.Data.Metadata.Edm.ObjectItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.IList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ObjectItemCollection.GetItems()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.Constructor">
            <summary>Sets the shim of ObjectItemCollection.ObjectItemCollection()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.ExplicitLoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.ExplicitLoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetAllRelationshipTypesExpensiveWayAssembly">
            <summary>Sets the shim of ObjectItemCollection.GetAllRelationshipTypesExpensiveWay(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetClrTypeEnumType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetClrTypeStructuralType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ObjectItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind modelType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetPrimitiveTypes">
            <summary>Sets the shim of ObjectItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetRelationshipTypeExpensiveWayTypeString">
            <summary>Sets the shim of ObjectItemCollection.GetRelationshipTypeExpensiveWay(Type entityClrType, String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.GetRelationshipTypeTypeString">
            <summary>Sets the shim of ObjectItemCollection.GetRelationshipType(Type entityClrType, String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.ImplicitLoadAllReferencedAssembliesAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAllReferencedAssemblies(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.ImplicitLoadAssemblyForTypeTypeEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAssemblyForType(Type type, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.ImplicitLoadFromAssemblyAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.ImplicitLoadViewsFromAllReferencedAssembliesAssembly">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadViewsFromAllReferencedAssemblies(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.IsCompiledViewGenAttributePresentAssembly">
            <summary>Sets the shim of ObjectItemCollection.IsCompiledViewGenAttributePresent(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadAssemblyLockGet">
            <summary>Sets the shim of ObjectItemCollection.get_LoadAssemblyLock()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadFromAssemblyAssembly">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadFromAssemblyAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.LoadTypesExpensiveWayAssembly">
            <summary>Sets the shim of ObjectItemCollection.LoadTypesExpensiveWay(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetClrTypeEnumTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(EnumType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetClrTypeStructuralTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(StructuralType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetMappingCSpaceTypeIdentityEdmType">
            <summary>Sets the shim of ObjectItemCollection.TryGetMappingCSpaceTypeIdentity(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.TryGetOSpaceTypeEdmTypeEdmTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetOSpaceType(EdmType cspaceType, EdmType&amp; edmType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.ViewGenerationAssembliesGet">
            <summary>Sets the shim of ObjectItemCollection.get_ViewGenerationAssemblies()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetItemsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.ObjectItemCollection,System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>Sets the shim of ObjectItemCollection.GetItems()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ExplicitLoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.ExplicitLoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetClrTypeEnumType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(EnumType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetClrTypeStructuralType">
            <summary>Sets the shim of ObjectItemCollection.GetClrType(StructuralType objectSpaceType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of ObjectItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind modelType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetPrimitiveTypes">
            <summary>Sets the shim of ObjectItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.GetRelationshipTypeTypeString">
            <summary>Sets the shim of ObjectItemCollection.GetRelationshipType(Type entityClrType, String relationshipName)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ImplicitLoadAllReferencedAssembliesAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAllReferencedAssemblies(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ImplicitLoadAssemblyForTypeTypeEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadAssemblyForType(Type type, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ImplicitLoadFromAssemblyAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.ImplicitLoadViewsFromAllReferencedAssembliesAssembly">
            <summary>Sets the shim of ObjectItemCollection.ImplicitLoadViewsFromAllReferencedAssemblies(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadAssemblyLockGet">
            <summary>Sets the shim of ObjectItemCollection.get_LoadAssemblyLock()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadFromAssemblyAssembly">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadFromAssemblyAssemblyEdmItemCollection">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.LoadFromAssemblyAssemblyEdmItemCollectionActionOfString">
            <summary>Sets the shim of ObjectItemCollection.LoadFromAssembly(Assembly assembly, EdmItemCollection edmItemCollection, Action`1&lt;String&gt; logLoadMessage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.TryGetClrTypeEnumTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(EnumType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.TryGetClrTypeStructuralTypeTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetClrType(StructuralType objectSpaceType, Type&amp; clrType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimObjectItemCollection.AllInstances.TryGetOSpaceTypeEdmTypeEdmTypeOut">
            <summary>Sets the shim of ObjectItemCollection.TryGetOSpaceType(EdmType cspaceType, EdmType&amp; edmType)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType">
            <summary>Shim type of System.Data.Metadata.Edm.PrimitiveType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.#ctor(System.Data.Metadata.Edm.PrimitiveType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.BuiltInTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.ClrEquivalentTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrEquivalentType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.ClrTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.Constructor">
            <summary>Sets the shim of PrimitiveType.PrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.ConstructorStringStringDataSpacePrimitiveTypeDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.PrimitiveType(String name, String namespaceName, DataSpace dataSpace, PrimitiveType baseType, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.ConstructorTypePrimitiveTypeDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.PrimitiveType(Type clrType, PrimitiveType baseType, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.FacetDescriptionsGet">
            <summary>Sets the shim of PrimitiveType.get_FacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of PrimitiveType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.GetEdmPrimitiveType">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.GetEdmPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.GetEdmPrimitiveTypes">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.InitializePrimitiveTypePrimitiveTypeKindBooleanDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.Initialize(PrimitiveType primitiveType, PrimitiveTypeKind primitiveTypeKind, Boolean isDefaultType, DbProviderManifest providerManifest)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.PrimitiveTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_PrimitiveTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.PrimitiveTypeKindSetPrimitiveTypeKind">
            <summary>Sets the shim of PrimitiveType.set_PrimitiveTypeKind(PrimitiveTypeKind value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.ProviderManifestGet">
            <summary>Sets the shim of PrimitiveType.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ClrEquivalentTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrEquivalentType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ClrTypeGet">
            <summary>Sets the shim of PrimitiveType.get_ClrType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.FacetDescriptionsGet">
            <summary>Sets the shim of PrimitiveType.get_FacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.GetAssociatedFacetDescriptions">
            <summary>Sets the shim of PrimitiveType.GetAssociatedFacetDescriptions()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.GetEdmPrimitiveType">
            <summary>Sets the shim of PrimitiveType.GetEdmPrimitiveType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.PrimitiveTypeKindGet">
            <summary>Sets the shim of PrimitiveType.get_PrimitiveTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.PrimitiveTypeKindSetPrimitiveTypeKind">
            <summary>Sets the shim of PrimitiveType.set_PrimitiveTypeKind(PrimitiveTypeKind value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ProviderManifestGet">
            <summary>Sets the shim of PrimitiveType.get_ProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimPrimitiveType.AllInstances.ProviderManifestSetDbProviderManifest">
            <summary>Sets the shim of PrimitiveType.set_ProviderManifest(DbProviderManifest value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1">
            <summary>Shim type of System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.#ctor(System.Data.Metadata.Edm.ReadOnlyMetadataCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ConstructorIListOfT0">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.ReadOnlyMetadataCollection`1(IList`1&lt;!0&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ContainsString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.GetEnumerator">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.GetValueStringBoolean">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.IndexOfT0">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.IsReadOnlyGet">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ItemGetString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.TryGetValueStringBooleanT0Out">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.ContainsString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.Contains(String identity)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.GetValueStringBoolean">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.GetValue(String identity, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.ItemGetString">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.get_Item(String identity)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.AllInstances.TryGetValueStringBooleanT0Out">
            <summary>Sets the shim of ReadOnlyMetadataCollection`1.TryGetValue(String identity, Boolean ignoreCase, !0&amp; item)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator">
            <summary>Shim type of System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimReadOnlyMetadataCollection`1.ShimEnumerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRefType">
            <summary>Shim type of System.Data.Metadata.Edm.RefType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRefType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRefType.#ctor(System.Data.Metadata.Edm.RefType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRefType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRefType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRefType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRefType.BuiltInTypeKindGet">
            <summary>Sets the shim of RefType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRefType.ConstructorEntityType">
            <summary>Sets the shim of RefType.RefType(EntityType entityType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRefType.ElementTypeGet">
            <summary>Sets the shim of RefType.get_ElementType()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRefType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRefType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of RefType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRefType.AllInstances.ElementTypeGet">
            <summary>Sets the shim of RefType.get_ElementType()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint">
            <summary>Shim type of System.Data.Metadata.Edm.ReferentialConstraint</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.#ctor(System.Data.Metadata.Edm.ReferentialConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.BuiltInTypeKindGet">
            <summary>Sets the shim of ReferentialConstraint.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.ConstructorRelationshipEndMemberRelationshipEndMemberIEnumerableOfEdmPropertyIEnumerableOfEdmProperty">
            <summary>Sets the shim of ReferentialConstraint.ReferentialConstraint(RelationshipEndMember fromRole, RelationshipEndMember toRole, IEnumerable`1&lt;EdmProperty&gt; fromProperties, IEnumerable`1&lt;EdmProperty&gt; toProperties)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.FromPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.FromRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromRole()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.IdentityGet">
            <summary>Sets the shim of ReferentialConstraint.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.SetReadOnly">
            <summary>Sets the shim of ReferentialConstraint.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.ToPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.ToRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToRole()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.ToString">
            <summary>Sets the shim of ReferentialConstraint.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of ReferentialConstraint.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.FromPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.FromRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_FromRole()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.IdentityGet">
            <summary>Sets the shim of ReferentialConstraint.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.SetReadOnly">
            <summary>Sets the shim of ReferentialConstraint.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.ToPropertiesGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToProperties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.ToRoleGet">
            <summary>Sets the shim of ReferentialConstraint.get_ToRole()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimReferentialConstraint.AllInstances.ToString01">
            <summary>Sets the shim of ReferentialConstraint.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember">
            <summary>Shim type of System.Data.Metadata.Edm.RelationshipEndMember</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.#ctor(System.Data.Metadata.Edm.RelationshipEndMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.ConstructorStringRefTypeRelationshipMultiplicity">
            <summary>Sets the shim of RelationshipEndMember.RelationshipEndMember(String name, RefType endRefType, RelationshipMultiplicity multiplicity)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.DeleteBehaviorGet">
            <summary>Sets the shim of RelationshipEndMember.get_DeleteBehavior()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.DeleteBehaviorSetOperationAction">
            <summary>Sets the shim of RelationshipEndMember.set_DeleteBehavior(OperationAction value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.GetEntityType">
            <summary>Sets the shim of RelationshipEndMember.GetEntityType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.RelationshipMultiplicityGet">
            <summary>Sets the shim of RelationshipEndMember.get_RelationshipMultiplicity()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.DeleteBehaviorGet">
            <summary>Sets the shim of RelationshipEndMember.get_DeleteBehavior()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.DeleteBehaviorSetOperationAction">
            <summary>Sets the shim of RelationshipEndMember.set_DeleteBehavior(OperationAction value)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.GetEntityType">
            <summary>Sets the shim of RelationshipEndMember.GetEntityType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipEndMember.AllInstances.RelationshipMultiplicityGet">
            <summary>Sets the shim of RelationshipEndMember.get_RelationshipMultiplicity()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet">
            <summary>Shim type of System.Data.Metadata.Edm.RelationshipSet</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.#ctor(System.Data.Metadata.Edm.RelationshipSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.BuiltInTypeKindGet">
            <summary>Sets the shim of RelationshipSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.ConstructorStringStringStringStringRelationshipType">
            <summary>Sets the shim of RelationshipSet.RelationshipSet(String name, String schema, String table, String definingQuery, RelationshipType relationshipType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.ElementTypeGet">
            <summary>Sets the shim of RelationshipSet.get_ElementType()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of RelationshipSet.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipSet.AllInstances.ElementTypeGet">
            <summary>Sets the shim of RelationshipSet.get_ElementType()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRelationshipType">
            <summary>Shim type of System.Data.Metadata.Edm.RelationshipType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.#ctor(System.Data.Metadata.Edm.RelationshipType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of RelationshipType.RelationshipType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.RelationshipEndMembersGet">
            <summary>Sets the shim of RelationshipType.get_RelationshipEndMembers()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRelationshipType.AllInstances.RelationshipEndMembersGet">
            <summary>Sets the shim of RelationshipType.get_RelationshipEndMembers()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRowType">
            <summary>Shim type of System.Data.Metadata.Edm.RowType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRowType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRowType.#ctor(System.Data.Metadata.Edm.RowType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRowType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimRowType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.BuiltInTypeKindGet">
            <summary>Sets the shim of RowType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.ConstructorIEnumerableOfEdmProperty">
            <summary>Sets the shim of RowType.RowType(IEnumerable`1&lt;EdmProperty&gt; properties)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.EdmEqualsMetadataItem">
            <summary>Sets the shim of RowType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.PropertiesGet">
            <summary>Sets the shim of RowType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of RowType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimRowType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of RowType.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of RowType.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.AllInstances.PropertiesGet">
            <summary>Sets the shim of RowType.get_Properties()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimRowType.AllInstances.ValidateMemberForAddEdmMember">
            <summary>Sets the shim of RowType.ValidateMemberForAdd(EdmMember member)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimSimpleType">
            <summary>Shim type of System.Data.Metadata.Edm.SimpleType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimSimpleType.#ctor(System.Data.Metadata.Edm.SimpleType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimSimpleType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimSimpleType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimSimpleType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimSimpleType.Constructor">
            <summary>Sets the shim of SimpleType.SimpleType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimSimpleType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of SimpleType.SimpleType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimSimpleType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection">
            <summary>Shim type of System.Data.Metadata.Edm.StoreItemCollection</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.#ctor(System.Data.Metadata.Edm.StoreItemCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.ICollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.IList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Data.Metadata.Edm.GlobalItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorDbProviderFactoryDbProviderManifestString">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(DbProviderFactory factory, DbProviderManifest manifest, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorIEnumerableOfXmlReader">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorIEnumerableOfXmlReaderIEnumerableOfString">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, IEnumerable`1&lt;String&gt; filePaths)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorIEnumerableOfXmlReaderReadOnlyCollectionOfStringIListOfEdmSchemaErrorOut">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(IEnumerable`1&lt;XmlReader&gt; xmlReaders, ReadOnlyCollection`1&lt;String&gt; filePaths, IList`1&lt;EdmSchemaError&gt;&amp; errors)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.ConstructorStringArray">
            <summary>Sets the shim of StoreItemCollection.StoreItemCollection(String[] filePaths)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.ConvertToCTypeFunctionEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertToCTypeFunction(EdmFunction sTypeFunction)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.GetCTypeFunctionsStringBoolean">
            <summary>Sets the shim of StoreItemCollection.GetCTypeFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of StoreItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.GetPrimitiveTypes">
            <summary>Sets the shim of StoreItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.StoreProviderFactoryGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.StoreProviderManifestGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.StoreProviderManifestTokenGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreProviderManifestToken()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.StoreSchemaVersionGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreSchemaVersion()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.StoreSchemaVersionSetDouble">
            <summary>Sets the shim of StoreItemCollection.set_StoreSchemaVersion(Double value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.ConvertToCTypeFunctionEdmFunction">
            <summary>Sets the shim of StoreItemCollection.ConvertToCTypeFunction(EdmFunction sTypeFunction)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.GetCTypeFunctionsStringBoolean">
            <summary>Sets the shim of StoreItemCollection.GetCTypeFunctions(String functionName, Boolean ignoreCase)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.GetMappedPrimitiveTypePrimitiveTypeKind">
            <summary>Sets the shim of StoreItemCollection.GetMappedPrimitiveType(PrimitiveTypeKind primitiveTypeKind)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.GetPrimitiveTypes">
            <summary>Sets the shim of StoreItemCollection.GetPrimitiveTypes()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.StoreProviderFactoryGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreProviderFactory()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.StoreProviderManifestGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreProviderManifest()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.StoreProviderManifestTokenGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreProviderManifestToken()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.StoreSchemaVersionGet">
            <summary>Sets the shim of StoreItemCollection.get_StoreSchemaVersion()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStoreItemCollection.AllInstances.StoreSchemaVersionSetDouble">
            <summary>Sets the shim of StoreItemCollection.set_StoreSchemaVersion(Double value)</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimStructuralType">
            <summary>Shim type of System.Data.Metadata.Edm.StructuralType</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStructuralType.#ctor(System.Data.Metadata.Edm.StructuralType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStructuralType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStructuralType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStructuralType.GetDeclaredOnlyMembersOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.ReadOnlyMetadataCollection{``0}})">
            <summary>Sets the shim of StructuralType.GetDeclaredOnlyMembers()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.AddMemberEdmMember">
            <summary>Sets the shim of StructuralType.AddMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.Constructor">
            <summary>Sets the shim of StructuralType.StructuralType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.ConstructorStringStringDataSpace">
            <summary>Sets the shim of StructuralType.StructuralType(String name, String namespaceName, DataSpace dataSpace)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.MembersGet">
            <summary>Sets the shim of StructuralType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.SetReadOnly">
            <summary>Sets the shim of StructuralType.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimStructuralType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.GetDeclaredOnlyMembersOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{``0}})">
            <summary>Sets the shim of StructuralType.GetDeclaredOnlyMembers()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.AddMemberEdmMember">
            <summary>Sets the shim of StructuralType.AddMember(EdmMember member)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.MembersGet">
            <summary>Sets the shim of StructuralType.get_Members()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimStructuralType.AllInstances.SetReadOnly">
            <summary>Sets the shim of StructuralType.SetReadOnly()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimTypeUsage">
            <summary>Shim type of System.Data.Metadata.Edm.TypeUsage</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.#ctor(System.Data.Metadata.Edm.TypeUsage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.BuildIdentityStringBuilder">
            <summary>Sets the shim of TypeUsage.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.BuiltInTypeKindGet">
            <summary>Sets the shim of TypeUsage.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.Constructor">
            <summary>Sets the shim of TypeUsage.TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateBinaryTypeUsagePrimitiveTypeBoolean">
            <summary>Sets the shim of TypeUsage.CreateBinaryTypeUsage(PrimitiveType primitiveType, Boolean isFixedLength)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateBinaryTypeUsagePrimitiveTypeBooleanInt32">
            <summary>Sets the shim of TypeUsage.CreateBinaryTypeUsage(PrimitiveType primitiveType, Boolean isFixedLength, Int32 maxLength)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateDateTimeOffsetTypeUsagePrimitiveTypeNullableOfByte">
            <summary>Sets the shim of TypeUsage.CreateDateTimeOffsetTypeUsage(PrimitiveType primitiveType, Nullable`1&lt;Byte&gt; precision)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateDateTimeTypeUsagePrimitiveTypeNullableOfByte">
            <summary>Sets the shim of TypeUsage.CreateDateTimeTypeUsage(PrimitiveType primitiveType, Nullable`1&lt;Byte&gt; precision)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateDecimalTypeUsagePrimitiveType">
            <summary>Sets the shim of TypeUsage.CreateDecimalTypeUsage(PrimitiveType primitiveType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateDecimalTypeUsagePrimitiveTypeByteByte">
            <summary>Sets the shim of TypeUsage.CreateDecimalTypeUsage(PrimitiveType primitiveType, Byte precision, Byte scale)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateDefaultTypeUsageEdmType">
            <summary>Sets the shim of TypeUsage.CreateDefaultTypeUsage(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateEdmType">
            <summary>Sets the shim of TypeUsage.Create(EdmType edmType)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateEdmTypeIEnumerableOfFacet">
            <summary>Sets the shim of TypeUsage.Create(EdmType edmType, IEnumerable`1&lt;Facet&gt; facets)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateStringTypeUsagePrimitiveTypeBooleanBoolean">
            <summary>Sets the shim of TypeUsage.CreateStringTypeUsage(PrimitiveType primitiveType, Boolean isUnicode, Boolean isFixedLength)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateStringTypeUsagePrimitiveTypeBooleanBooleanInt32">
            <summary>Sets the shim of TypeUsage.CreateStringTypeUsage(PrimitiveType primitiveType, Boolean isUnicode, Boolean isFixedLength, Int32 maxLength)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.CreateTimeTypeUsagePrimitiveTypeNullableOfByte">
            <summary>Sets the shim of TypeUsage.CreateTimeTypeUsage(PrimitiveType primitiveType, Nullable`1&lt;Byte&gt; precision)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.EdmEqualsMetadataItem">
            <summary>Sets the shim of TypeUsage.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.EdmTypeGet">
            <summary>Sets the shim of TypeUsage.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.FacetsGet">
            <summary>Sets the shim of TypeUsage.get_Facets()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.GetModelTypeUsage">
            <summary>Sets the shim of TypeUsage.GetModelTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.IdentityGet">
            <summary>Sets the shim of TypeUsage.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.IsSubtypeOfTypeUsage">
            <summary>Sets the shim of TypeUsage.IsSubtypeOf(TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.SetReadOnly">
            <summary>Sets the shim of TypeUsage.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.StaticConstructor">
            <summary>Sets the shim of TypeUsage.TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.ToString">
            <summary>Sets the shim of TypeUsage.ToString()</summary>
        </member>
        <member name="T:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.BuildIdentityStringBuilder">
            <summary>Sets the shim of TypeUsage.BuildIdentity(StringBuilder builder)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.BuiltInTypeKindGet">
            <summary>Sets the shim of TypeUsage.get_BuiltInTypeKind()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.Constructor">
            <summary>Sets the shim of TypeUsage.TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.EdmEqualsMetadataItem">
            <summary>Sets the shim of TypeUsage.EdmEquals(MetadataItem item)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.EdmTypeGet">
            <summary>Sets the shim of TypeUsage.get_EdmType()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.FacetsGet">
            <summary>Sets the shim of TypeUsage.get_Facets()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.GetModelTypeUsage">
            <summary>Sets the shim of TypeUsage.GetModelTypeUsage()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.IdentityGet">
            <summary>Sets the shim of TypeUsage.get_Identity()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.IsSubtypeOfTypeUsage">
            <summary>Sets the shim of TypeUsage.IsSubtypeOf(TypeUsage typeUsage)</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.SetReadOnly">
            <summary>Sets the shim of TypeUsage.SetReadOnly()</summary>
        </member>
        <member name="P:System.Data.Metadata.Edm.Fakes.ShimTypeUsage.AllInstances.ToString01">
            <summary>Sets the shim of TypeUsage.ToString()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimComplexObject">
            <summary>Shim type of System.Data.Objects.DataClasses.ComplexObject</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.#ctor(System.Data.Objects.DataClasses.ComplexObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AttachToParentStructuralObjectString">
            <summary>Sets the shim of ComplexObject.AttachToParent(StructuralObject parent, String parentPropertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.Constructor">
            <summary>Sets the shim of ComplexObject.ComplexObject()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.DetachFromParent">
            <summary>Sets the shim of ComplexObject.DetachFromParent()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.IsChangeTrackedGet">
            <summary>Sets the shim of ComplexObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.ReportPropertyChangedString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.ReportPropertyChangingString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.AttachToParentStructuralObjectString">
            <summary>Sets the shim of ComplexObject.AttachToParent(StructuralObject parent, String parentPropertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.DetachFromParent">
            <summary>Sets the shim of ComplexObject.DetachFromParent()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.IsChangeTrackedGet">
            <summary>Sets the shim of ComplexObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of ComplexObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportPropertyChangedString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimComplexObject.AllInstances.ReportPropertyChangingString">
            <summary>Sets the shim of ComplexObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmComplexPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.#ctor(System.Data.Objects.DataClasses.EdmComplexPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.Constructor">
            <summary>Sets the shim of EdmComplexPropertyAttribute.EdmComplexPropertyAttribute()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmComplexTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.#ctor(System.Data.Objects.DataClasses.EdmComplexTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.Constructor">
            <summary>Sets the shim of EdmComplexTypeAttribute.EdmComplexTypeAttribute()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmComplexTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmEntityTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.#ctor(System.Data.Objects.DataClasses.EdmEntityTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.Constructor">
            <summary>Sets the shim of EdmEntityTypeAttribute.EdmEntityTypeAttribute()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmEntityTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmEnumTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.#ctor(System.Data.Objects.DataClasses.EdmEnumTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.Constructor">
            <summary>Sets the shim of EdmEnumTypeAttribute.EdmEnumTypeAttribute()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmEnumTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmFunctionAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.#ctor(System.Data.Objects.DataClasses.EdmFunctionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.ConstructorStringString">
            <summary>Sets the shim of EdmFunctionAttribute.EdmFunctionAttribute(String namespaceName, String functionName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.FunctionNameGet">
            <summary>Sets the shim of EdmFunctionAttribute.get_FunctionName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.NamespaceNameGet">
            <summary>Sets the shim of EdmFunctionAttribute.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.AllInstances.FunctionNameGet">
            <summary>Sets the shim of EdmFunctionAttribute.get_FunctionName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmFunctionAttribute.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of EdmFunctionAttribute.get_NamespaceName()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.#ctor(System.Data.Objects.DataClasses.EdmPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.Constructor">
            <summary>Sets the shim of EdmPropertyAttribute.EdmPropertyAttribute()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmRelationshipAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.#ctor(System.Data.Objects.DataClasses.EdmRelationshipAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.ConstructorStringStringStringRelationshipMultiplicityTypeStringRelationshipMultiplicityType">
            <summary>Sets the shim of EdmRelationshipAttribute.EdmRelationshipAttribute(String relationshipNamespaceName, String relationshipName, String role1Name, RelationshipMultiplicity role1Multiplicity, Type role1Type, String role2Name, RelationshipMultiplicity role2Multiplicity, Type role2Type)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.ConstructorStringStringStringRelationshipMultiplicityTypeStringRelationshipMultiplicityTypeBoolean">
            <summary>Sets the shim of EdmRelationshipAttribute.EdmRelationshipAttribute(String relationshipNamespaceName, String relationshipName, String role1Name, RelationshipMultiplicity role1Multiplicity, Type role1Type, String role2Name, RelationshipMultiplicity role2Multiplicity, Type role2Type, Boolean isForeignKey)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.IsForeignKeyGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role1MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role1NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Name()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role1TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Type()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role2MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role2NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Name()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.Role2TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Type()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.IsForeignKeyGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role1MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role1NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Name()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role1TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role1Type()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role2MultiplicityGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Multiplicity()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role2NameGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Name()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipAttribute.AllInstances.Role2TypeGet">
            <summary>Sets the shim of EdmRelationshipAttribute.get_Role2Type()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.#ctor(System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.ConstructorStringStringString">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.EdmRelationshipNavigationPropertyAttribute(String relationshipNamespaceName, String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.TargetRoleNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_TargetRoleName()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances.RelationshipNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances.RelationshipNamespaceNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_RelationshipNamespaceName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmRelationshipNavigationPropertyAttribute.AllInstances.TargetRoleNameGet">
            <summary>Sets the shim of EdmRelationshipNavigationPropertyAttribute.get_TargetRoleName()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmScalarPropertyAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.#ctor(System.Data.Objects.DataClasses.EdmScalarPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.Constructor">
            <summary>Sets the shim of EdmScalarPropertyAttribute.EdmScalarPropertyAttribute()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.EntityKeyPropertyGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_EntityKeyProperty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.EntityKeyPropertySetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_EntityKeyProperty(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.IsNullableGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.IsNullableSetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.EntityKeyPropertyGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_EntityKeyProperty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.EntityKeyPropertySetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_EntityKeyProperty(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.IsNullableGet">
            <summary>Sets the shim of EdmScalarPropertyAttribute.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmScalarPropertyAttribute.AllInstances.IsNullableSetBoolean">
            <summary>Sets the shim of EdmScalarPropertyAttribute.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmSchemaAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.#ctor(System.Data.Objects.DataClasses.EdmSchemaAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.Constructor">
            <summary>Sets the shim of EdmSchemaAttribute.EdmSchemaAttribute()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.ConstructorString">
            <summary>Sets the shim of EdmSchemaAttribute.EdmSchemaAttribute(String assemblyGuid)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmSchemaAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute">
            <summary>Shim type of System.Data.Objects.DataClasses.EdmTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.#ctor(System.Data.Objects.DataClasses.EdmTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.Constructor">
            <summary>Sets the shim of EdmTypeAttribute.EdmTypeAttribute()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NamespaceNameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.NamespaceNameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_NamespaceName(String value)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of EdmTypeAttribute.get_NamespaceName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEdmTypeAttribute.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of EdmTypeAttribute.set_NamespaceName(String value)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1">
            <summary>Shim type of System.Data.Objects.DataClasses.EntityCollection`1</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.#ctor(System.Data.Objects.DataClasses.EntityCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Data.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AddT0">
            <summary>Sets the shim of EntityCollection`1.Add(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AttachIEnumerableOfT0">
            <summary>Sets the shim of EntityCollection`1.Attach(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AttachT0">
            <summary>Sets the shim of EntityCollection`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.BulkDeleteAllListOfObject">
            <summary>Sets the shim of EntityCollection`1.BulkDeleteAll(List`1&lt;Object&gt; list)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Clear">
            <summary>Sets the shim of EntityCollection`1.Clear()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.ClearWrappedValues">
            <summary>Sets the shim of EntityCollection`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Constructor">
            <summary>Sets the shim of EntityCollection`1.EntityCollection`1()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.ContainsT0">
            <summary>Sets the shim of EntityCollection`1.Contains(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of EntityCollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.CountGet">
            <summary>Sets the shim of EntityCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.CountInternalGet">
            <summary>Sets the shim of EntityCollection`1.get_CountInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.CreateSourceQuery">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.Exclude">
            <summary>Sets the shim of EntityCollection`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.GetEnumerator">
            <summary>Sets the shim of EntityCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.GetInternalEnumerable">
            <summary>Sets the shim of EntityCollection`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityCollection`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.IsEmpty">
            <summary>Sets the shim of EntityCollection`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.IsReadOnlyGet">
            <summary>Sets the shim of EntityCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.LoadMergeOption">
            <summary>Sets the shim of EntityCollection`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of EntityCollection`1.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnCollectionDeserializedStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnCollectionDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnRelatedEndClear">
            <summary>Sets the shim of EntityCollection`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.RemoveInternalT0">
            <summary>Sets the shim of EntityCollection`1.RemoveInternal(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.RemoveT0">
            <summary>Sets the shim of EntityCollection`1.Remove(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EntityCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityCollection`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AddT0">
            <summary>Sets the shim of EntityCollection`1.Add(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of EntityCollection`1.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AttachIEnumerableOfT0">
            <summary>Sets the shim of EntityCollection`1.Attach(IEnumerable`1&lt;!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.AttachT0">
            <summary>Sets the shim of EntityCollection`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.BulkDeleteAllListOfObject">
            <summary>Sets the shim of EntityCollection`1.BulkDeleteAll(List`1&lt;Object&gt; list)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.Clear">
            <summary>Sets the shim of EntityCollection`1.Clear()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.ClearWrappedValues">
            <summary>Sets the shim of EntityCollection`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of EntityCollection`1.Contains(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of EntityCollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CountGet">
            <summary>Sets the shim of EntityCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CountInternalGet">
            <summary>Sets the shim of EntityCollection`1.get_CountInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CreateSourceQuery">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityCollection`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.Exclude">
            <summary>Sets the shim of EntityCollection`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of EntityCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.GetInternalEnumerable">
            <summary>Sets the shim of EntityCollection`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityCollection`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.IsEmpty">
            <summary>Sets the shim of EntityCollection`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of EntityCollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.LoadMergeOption">
            <summary>Sets the shim of EntityCollection`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of EntityCollection`1.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnCollectionDeserializedStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnCollectionDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnRelatedEndClear">
            <summary>Sets the shim of EntityCollection`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityCollection`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.RemoveInternalT0">
            <summary>Sets the shim of EntityCollection`1.RemoveInternal(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.RemoveT0">
            <summary>Sets the shim of EntityCollection`1.Remove(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EntityCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of EntityCollection`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityCollection`1.AllInstances.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityCollection`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityObject">
            <summary>Shim type of System.Data.Objects.DataClasses.EntityObject</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.#ctor(System.Data.Objects.DataClasses.EntityObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.Data.Objects.DataClasses.IEntityWithChangeTracker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.Data.Objects.DataClasses.IEntityWithKey)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.Bind(System.Data.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.Constructor">
            <summary>Sets the shim of EntityObject.EntityObject()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.EntityKeyGet">
            <summary>Sets the shim of EntityObject.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityObject.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.EntityStateGet">
            <summary>Sets the shim of EntityObject.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.IsChangeTrackedGet">
            <summary>Sets the shim of EntityObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.RelationshipManagerSystemDataObjectsDataClassesIEntityWithRelationshipsget">
            <summary>Sets the shim of EntityObject.System.Data.Objects.DataClasses.IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.ReportPropertyChangedString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.ReportPropertyChangingString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.StaticConstructor">
            <summary>Sets the shim of EntityObject.EntityObject()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.SystemDataObjectsDataClassesIEntityWithChangeTrackerSetChangeTrackerIEntityChangeTracker">
            <summary>Sets the shim of EntityObject.System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityKeyGet">
            <summary>Sets the shim of EntityObject.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityObject.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.EntityStateGet">
            <summary>Sets the shim of EntityObject.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.IsChangeTrackedGet">
            <summary>Sets the shim of EntityObject.get_IsChangeTracked()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.RelationshipManagerSystemDataObjectsDataClassesIEntityWithRelationshipsget">
            <summary>Sets the shim of EntityObject.System.Data.Objects.DataClasses.IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportComplexPropertyChangedStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanged(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportComplexPropertyChangingStringComplexObjectString">
            <summary>Sets the shim of EntityObject.ReportComplexPropertyChanging(String entityMemberName, ComplexObject complexObject, String complexMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportPropertyChangedString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.ReportPropertyChangingString">
            <summary>Sets the shim of EntityObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityObject.AllInstances.SystemDataObjectsDataClassesIEntityWithChangeTrackerSetChangeTrackerIEntityChangeTracker">
            <summary>Sets the shim of EntityObject.System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityReference">
            <summary>Shim type of System.Data.Objects.DataClasses.EntityReference</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.#ctor(System.Data.Objects.DataClasses.EntityReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.Bind(System.Data.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AttachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_AttachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AttemptToNullFKsOnRefOrKeySetToNull">
            <summary>Sets the shim of EntityReference.AttemptToNullFKsOnRefOrKeySetToNull()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.CachedForeignKeyGet">
            <summary>Sets the shim of EntityReference.get_CachedForeignKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.CanDeferredLoadGet">
            <summary>Sets the shim of EntityReference.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.Constructor">
            <summary>Sets the shim of EntityReference.EntityReference()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.DetachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_DetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.DetachedEntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_DetachedEntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.EntityKeyGet">
            <summary>Sets the shim of EntityReference.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.GetAllKeyValues">
            <summary>Sets the shim of EntityReference.GetAllKeyValues()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.GetDependentEndOfReferentialConstraintObject">
            <summary>Sets the shim of EntityReference.GetDependentEndOfReferentialConstraint(Object relatedValue)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.NavigationPropertyIsNullOrMissing">
            <summary>Sets the shim of EntityReference.NavigationPropertyIsNullOrMissing()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.NullAllForeignKeys">
            <summary>Sets the shim of EntityReference.NullAllForeignKeys()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.SetEntityKeyEntityKeyBoolean">
            <summary>Sets the shim of EntityReference.SetEntityKey(EntityKey value, Boolean forceFixup)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.AttachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_AttachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.AttemptToNullFKsOnRefOrKeySetToNull">
            <summary>Sets the shim of EntityReference.AttemptToNullFKsOnRefOrKeySetToNull()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.CachedForeignKeyGet">
            <summary>Sets the shim of EntityReference.get_CachedForeignKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.CanDeferredLoadGet">
            <summary>Sets the shim of EntityReference.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.DetachedEntityKeyGet">
            <summary>Sets the shim of EntityReference.get_DetachedEntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.DetachedEntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_DetachedEntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.EntityKeyGet">
            <summary>Sets the shim of EntityReference.get_EntityKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.EntityKeySetEntityKey">
            <summary>Sets the shim of EntityReference.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.GetAllKeyValues">
            <summary>Sets the shim of EntityReference.GetAllKeyValues()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.GetDependentEndOfReferentialConstraintObject">
            <summary>Sets the shim of EntityReference.GetDependentEndOfReferentialConstraint(Object relatedValue)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.NavigationPropertyIsNullOrMissing">
            <summary>Sets the shim of EntityReference.NavigationPropertyIsNullOrMissing()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.NullAllForeignKeys">
            <summary>Sets the shim of EntityReference.NullAllForeignKeys()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference.AllInstances.SetEntityKeyEntityKeyBoolean">
            <summary>Sets the shim of EntityReference.SetEntityKey(EntityKey value, Boolean forceFixup)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1">
            <summary>Shim type of System.Data.Objects.DataClasses.EntityReference`1</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.#ctor(System.Data.Objects.DataClasses.EntityReference{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.Bind(System.Data.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AttachT0">
            <summary>Sets the shim of EntityReference`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.ClearWrappedValues">
            <summary>Sets the shim of EntityReference`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.Constructor">
            <summary>Sets the shim of EntityReference`1.EntityReference`1()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.CreateSourceQuery">
            <summary>Sets the shim of EntityReference`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityReference`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.Exclude">
            <summary>Sets the shim of EntityReference`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.GetInternalEnumerable">
            <summary>Sets the shim of EntityReference`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityReference`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.InitializeWithValueRelatedEnd">
            <summary>Sets the shim of EntityReference`1.InitializeWithValue(RelatedEnd relatedEnd)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.IsEmpty">
            <summary>Sets the shim of EntityReference`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.LoadMergeOption">
            <summary>Sets the shim of EntityReference`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.OnRefDeserializedStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnRefDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.OnRelatedEndClear">
            <summary>Sets the shim of EntityReference`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.ValueGet">
            <summary>Sets the shim of EntityReference`1.get_Value()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.ValueSetT0">
            <summary>Sets the shim of EntityReference`1.set_Value(!0 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityReference`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.AttachT0">
            <summary>Sets the shim of EntityReference`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.ClearWrappedValues">
            <summary>Sets the shim of EntityReference`1.ClearWrappedValues()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.CreateSourceQuery">
            <summary>Sets the shim of EntityReference`1.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.CreateSourceQueryInternal">
            <summary>Sets the shim of EntityReference`1.CreateSourceQueryInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.Exclude">
            <summary>Sets the shim of EntityReference`1.Exclude()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.GetInternalEnumerable">
            <summary>Sets the shim of EntityReference`1.GetInternalEnumerable()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.IncludeBooleanBoolean">
            <summary>Sets the shim of EntityReference`1.Include(Boolean addRelationshipAsUnchanged, Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.InitializeWithValueRelatedEnd">
            <summary>Sets the shim of EntityReference`1.InitializeWithValue(RelatedEnd relatedEnd)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.IsEmpty">
            <summary>Sets the shim of EntityReference`1.IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.LoadMergeOption">
            <summary>Sets the shim of EntityReference`1.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.OnRefDeserializedStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnRefDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.OnRelatedEndClear">
            <summary>Sets the shim of EntityReference`1.OnRelatedEndClear()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of EntityReference`1.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.ValueGet">
            <summary>Sets the shim of EntityReference`1.get_Value()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.ValueSetT0">
            <summary>Sets the shim of EntityReference`1.set_Value(!0 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimEntityReference`1.AllInstances.VerifyMultiplicityConstraintsForAddBoolean">
            <summary>Sets the shim of EntityReference`1.VerifyMultiplicityConstraintsForAdd(Boolean applyConstraints)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd">
            <summary>Shim type of System.Data.Objects.DataClasses.RelatedEnd</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.#ctor(System.Data.Objects.DataClasses.RelatedEnd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.Bind(System.Data.Objects.DataClasses.IRelatedEnd)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.CreateSourceQueryOf1MergeOptionBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Objects.MergeOption,System.Boolean,System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.CreateSourceQuery(MergeOption mergeOption, Boolean&amp; hasResults)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.GetResultsOf1ObjectQueryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectQuery{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of RelatedEnd.GetResults(ObjectQuery`1&lt;!!0&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.MergeOf1IEnumerableOfM0MergeOptionBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Data.Objects.MergeOption,System.Boolean})">
            <summary>Sets the shim of RelatedEnd.Merge(IEnumerable`1&lt;!!0&gt; collection, MergeOption mergeOption, Boolean setIsLoaded)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.ValidateLoadOf1MergeOptionStringBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Objects.MergeOption,System.String,System.Boolean,System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.ValidateLoad(MergeOption mergeOption, String relatedEndName, Boolean&amp; hasResults)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AssociationChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AttachContextObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AttachContextObjectContextMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.BulkDeleteAllListOfObject">
            <summary>Sets the shim of RelatedEnd.BulkDeleteAll(List`1&lt;Object&gt; list)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.CanDeferredLoadGet">
            <summary>Sets the shim of RelatedEnd.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.CheckIfAllPropertiesAreKeyPropertiesStringArrayReadOnlyMetadataCollectionOfEdmProperty">
            <summary>Sets the shim of RelatedEnd.CheckIfAllPropertiesAreKeyProperties(String[] keyMemberNames, ReadOnlyMetadataCollection`1&lt;EdmProperty&gt; toProperties)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.CheckOwnerNull">
            <summary>Sets the shim of RelatedEnd.CheckOwnerNull()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.CheckRelationEntitySetEntitySet">
            <summary>Sets the shim of RelatedEnd.CheckRelationEntitySet(EntitySet set)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.Constructor">
            <summary>Sets the shim of RelatedEnd.RelatedEnd()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.DefaultMergeOptionGet">
            <summary>Sets the shim of RelatedEnd.get_DefaultMergeOption()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.DeferredLoad">
            <summary>Sets the shim of RelatedEnd.DeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.DetachAllEntityState">
            <summary>Sets the shim of RelatedEnd.DetachAll(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.DetachContext">
            <summary>Sets the shim of RelatedEnd.DetachContext()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.FindRelationshipSetObjectContextEntitySetEdmTypeOutRelationshipSetOut">
            <summary>Sets the shim of RelatedEnd.FindRelationshipSet(ObjectContext context, EntitySet entitySet, EdmType&amp; relationshipType, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.FromEndPropertyGet">
            <summary>Sets the shim of RelatedEnd.get_FromEndProperty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.GetEnumerator">
            <summary>Sets the shim of RelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.GetTargetEntitySetFromRelationshipSet">
            <summary>Sets the shim of RelatedEnd.GetTargetEntitySetFromRelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.IsDependentEndOfReferentialConstraintBoolean">
            <summary>Sets the shim of RelatedEnd.IsDependentEndOfReferentialConstraint(Boolean checkIdentifying)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.IsForeignKeyGet">
            <summary>Sets the shim of RelatedEnd.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.IsLoadedGet">
            <summary>Sets the shim of RelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.IsPrincipalEndOfReferentialConstraint">
            <summary>Sets the shim of RelatedEnd.IsPrincipalEndOfReferentialConstraint()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.IsValidEntityKeyTypeEntityKey">
            <summary>Sets the shim of RelatedEnd.IsValidEntityKeyType(EntityKey entityKey)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.Load">
            <summary>Sets the shim of RelatedEnd.Load()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.MarkForeignKeyPropertiesModified">
            <summary>Sets the shim of RelatedEnd.MarkForeignKeyPropertiesModified()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.NavigationPropertyGet">
            <summary>Sets the shim of RelatedEnd.get_NavigationProperty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.ObjectContextGet">
            <summary>Sets the shim of RelatedEnd.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of RelatedEnd.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelatedEnd.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.RelationMetadataGet">
            <summary>Sets the shim of RelatedEnd.get_RelationMetadata()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.RelationshipNameGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.RelationshipSetGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.RemoveAll">
            <summary>Sets the shim of RelatedEnd.RemoveAll()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SetIsLoadedBoolean">
            <summary>Sets the shim of RelatedEnd.SetIsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SourceRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataObjectsDataClassesIRelatedEndAddIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataObjectsDataClassesIRelatedEndAddObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataObjectsDataClassesIRelatedEndAttachIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataObjectsDataClassesIRelatedEndAttachObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataObjectsDataClassesIRelatedEndCreateSourceQuery">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataObjectsDataClassesIRelatedEndRemoveIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.SystemDataObjectsDataClassesIRelatedEndRemoveObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.TargetRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.ToEndMemberGet">
            <summary>Sets the shim of RelatedEnd.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.UsingNoTrackingGet">
            <summary>Sets the shim of RelatedEnd.get_UsingNoTracking()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.ValidateOwnerForAttach">
            <summary>Sets the shim of RelatedEnd.ValidateOwnerForAttach()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.VerifyRIConstraintsWithRelatedEntryReferentialConstraintFuncOfStringObjectEntityKey">
            <summary>Sets the shim of RelatedEnd.VerifyRIConstraintsWithRelatedEntry(ReferentialConstraint constraint, Func`2&lt;String,Object&gt; getDependentPropertyValue, EntityKey principalKey)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CreateSourceQueryOf1MergeOptionBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.MergeOption,System.Boolean,System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.CreateSourceQuery(MergeOption mergeOption, Boolean&amp; hasResults)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.MergeOf1IEnumerableOfM0MergeOptionBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Objects.DataClasses.RelatedEnd,System.Collections.Generic.IEnumerable{``0},System.Data.Objects.MergeOption,System.Boolean})">
            <summary>Sets the shim of RelatedEnd.Merge(IEnumerable`1&lt;!!0&gt; collection, MergeOption mergeOption, Boolean setIsLoaded)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ValidateLoadOf1MergeOptionStringBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.MergeOption,System.String,System.Boolean,System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of RelatedEnd.ValidateLoad(MergeOption mergeOption, String relatedEndName, Boolean&amp; hasResults)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedForObjectViewAddCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.add_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedForObjectViewRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChangedForObjectView(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AssociationChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of RelatedEnd.remove_AssociationChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AttachContextObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.AttachContextObjectContextMergeOption">
            <summary>Sets the shim of RelatedEnd.AttachContext(ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.BulkDeleteAllListOfObject">
            <summary>Sets the shim of RelatedEnd.BulkDeleteAll(List`1&lt;Object&gt; list)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CanDeferredLoadGet">
            <summary>Sets the shim of RelatedEnd.get_CanDeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CheckOwnerNull">
            <summary>Sets the shim of RelatedEnd.CheckOwnerNull()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.CheckRelationEntitySetEntitySet">
            <summary>Sets the shim of RelatedEnd.CheckRelationEntitySet(EntitySet set)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DefaultMergeOptionGet">
            <summary>Sets the shim of RelatedEnd.get_DefaultMergeOption()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DeferredLoad">
            <summary>Sets the shim of RelatedEnd.DeferredLoad()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DetachAllEntityState">
            <summary>Sets the shim of RelatedEnd.DetachAll(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.DetachContext">
            <summary>Sets the shim of RelatedEnd.DetachContext()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.FindRelationshipSetObjectContextEntitySetEdmTypeOutRelationshipSetOut">
            <summary>Sets the shim of RelatedEnd.FindRelationshipSet(ObjectContext context, EntitySet entitySet, EdmType&amp; relationshipType, RelationshipSet&amp; relationshipSet)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.FromEndPropertyGet">
            <summary>Sets the shim of RelatedEnd.get_FromEndProperty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.GetEnumerator">
            <summary>Sets the shim of RelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.GetTargetEntitySetFromRelationshipSet">
            <summary>Sets the shim of RelatedEnd.GetTargetEntitySetFromRelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsDependentEndOfReferentialConstraintBoolean">
            <summary>Sets the shim of RelatedEnd.IsDependentEndOfReferentialConstraint(Boolean checkIdentifying)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsForeignKeyGet">
            <summary>Sets the shim of RelatedEnd.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsLoadedGet">
            <summary>Sets the shim of RelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.IsPrincipalEndOfReferentialConstraint">
            <summary>Sets the shim of RelatedEnd.IsPrincipalEndOfReferentialConstraint()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.Load">
            <summary>Sets the shim of RelatedEnd.Load()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.MarkForeignKeyPropertiesModified">
            <summary>Sets the shim of RelatedEnd.MarkForeignKeyPropertiesModified()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.NavigationPropertyGet">
            <summary>Sets the shim of RelatedEnd.get_NavigationProperty()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ObjectContextGet">
            <summary>Sets the shim of RelatedEnd.get_ObjectContext()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.OnAssociationChangedCollectionChangeActionObject">
            <summary>Sets the shim of RelatedEnd.OnAssociationChanged(CollectionChangeAction collectionChangeAction, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelatedEnd.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RelationMetadataGet">
            <summary>Sets the shim of RelatedEnd.get_RelationMetadata()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RelationshipNameGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RelationshipSetGet">
            <summary>Sets the shim of RelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.RemoveAll">
            <summary>Sets the shim of RelatedEnd.RemoveAll()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SetIsLoadedBoolean">
            <summary>Sets the shim of RelatedEnd.SetIsLoaded(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SourceRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataObjectsDataClassesIRelatedEndAddIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataObjectsDataClassesIRelatedEndAddObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataObjectsDataClassesIRelatedEndAttachIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataObjectsDataClassesIRelatedEndAttachObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataObjectsDataClassesIRelatedEndCreateSourceQuery">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataObjectsDataClassesIRelatedEndRemoveIEntityWithRelationships">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.SystemDataObjectsDataClassesIRelatedEndRemoveObject">
            <summary>Sets the shim of RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.TargetRoleNameGet">
            <summary>Sets the shim of RelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ToEndMemberGet">
            <summary>Sets the shim of RelatedEnd.get_ToEndMember()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.UsingNoTrackingGet">
            <summary>Sets the shim of RelatedEnd.get_UsingNoTracking()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelatedEnd.AllInstances.ValidateOwnerForAttach">
            <summary>Sets the shim of RelatedEnd.ValidateOwnerForAttach()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager">
            <summary>Shim type of System.Data.Objects.DataClasses.RelationshipManager</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.#ctor(System.Data.Objects.DataClasses.RelationshipManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedCollectionOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedCollection(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedReferenceOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedReference(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.InitializeRelatedCollectionOf1StringStringEntityCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedCollection(String relationshipName, String targetRoleName, EntityCollection`1&lt;!!0&gt; entityCollection)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.InitializeRelatedReferenceOf1StringStringEntityReferenceOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedReference(String relationshipName, String targetRoleName, EntityReference`1&lt;!!0&gt; entityReference)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AddRelatedEntitiesToObjectStateManagerBoolean">
            <summary>Sets the shim of RelationshipManager.AddRelatedEntitiesToObjectStateManager(Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AttachContextToRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.AttachContextToRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.ClearRelatedEndWrappers">
            <summary>Sets the shim of RelationshipManager.ClearRelatedEndWrappers()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.Constructor">
            <summary>Sets the shim of RelationshipManager.RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.Create">
            <summary>Sets the shim of RelationshipManager.Create()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.CreateIEntityWithRelationships">
            <summary>Sets the shim of RelationshipManager.Create(IEntityWithRelationships owner)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.DetachContextFromRelatedEnds">
            <summary>Sets the shim of RelationshipManager.DetachContextFromRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.DetachEntityFromRelationshipsEntityState">
            <summary>Sets the shim of RelationshipManager.DetachEntityFromRelationships(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.GetAllRelatedEnds">
            <summary>Sets the shim of RelationshipManager.GetAllRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndInternalStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndStringBoolean">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String navigationProperty, Boolean throwArgumentException)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.GetRelatedEndStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.HasRelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_HasRelationships()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.NodeVisitedGet">
            <summary>Sets the shim of RelationshipManager.get_NodeVisited()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.NodeVisitedSetBoolean">
            <summary>Sets the shim of RelationshipManager.set_NodeVisited(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.NullAllFKsInDependentsForWhichThisIsThePrincipal">
            <summary>Sets the shim of RelationshipManager.NullAllFKsInDependentsForWhichThisIsThePrincipal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.OnSerializingStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.RelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_Relationships()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.RemoveEntityFromRelationships">
            <summary>Sets the shim of RelationshipManager.RemoveEntityFromRelationships()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.ResetContextOnRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.ResetContextOnRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.VerifyIsNotRelated">
            <summary>Sets the shim of RelationshipManager.VerifyIsNotRelated()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedCollectionOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedCollection(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedReferenceOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.GetRelatedReference(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.InitializeRelatedCollectionOf1StringStringEntityCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedCollection(String relationshipName, String targetRoleName, EntityCollection`1&lt;!!0&gt; entityCollection)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.InitializeRelatedReferenceOf1StringStringEntityReferenceOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Objects.DataClasses.RelationshipManager,System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0}})">
            <summary>Sets the shim of RelationshipManager.InitializeRelatedReference(String relationshipName, String targetRoleName, EntityReference`1&lt;!!0&gt; entityReference)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.AddRelatedEntitiesToObjectStateManagerBoolean">
            <summary>Sets the shim of RelationshipManager.AddRelatedEntitiesToObjectStateManager(Boolean doAttach)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.AttachContextToRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.AttachContextToRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.ClearRelatedEndWrappers">
            <summary>Sets the shim of RelationshipManager.ClearRelatedEndWrappers()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.DetachContextFromRelatedEnds">
            <summary>Sets the shim of RelationshipManager.DetachContextFromRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.DetachEntityFromRelationshipsEntityState">
            <summary>Sets the shim of RelationshipManager.DetachEntityFromRelationships(EntityState ownerEntityState)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetAllRelatedEnds">
            <summary>Sets the shim of RelationshipManager.GetAllRelatedEnds()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndInternalStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEndInternal(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndStringBoolean">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String navigationProperty, Boolean throwArgumentException)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.GetRelatedEndStringString">
            <summary>Sets the shim of RelationshipManager.GetRelatedEnd(String relationshipName, String targetRoleName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.HasRelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_HasRelationships()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.NodeVisitedGet">
            <summary>Sets the shim of RelationshipManager.get_NodeVisited()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.NodeVisitedSetBoolean">
            <summary>Sets the shim of RelationshipManager.set_NodeVisited(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.NullAllFKsInDependentsForWhichThisIsThePrincipal">
            <summary>Sets the shim of RelationshipManager.NullAllFKsInDependentsForWhichThisIsThePrincipal()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of RelationshipManager.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.RelationshipsGet">
            <summary>Sets the shim of RelationshipManager.get_Relationships()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.RemoveEntityFromRelationships">
            <summary>Sets the shim of RelationshipManager.RemoveEntityFromRelationships()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.ResetContextOnRelatedEndsObjectContextEntitySetMergeOption">
            <summary>Sets the shim of RelationshipManager.ResetContextOnRelatedEnds(ObjectContext context, EntitySet entitySet, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimRelationshipManager.AllInstances.VerifyIsNotRelated">
            <summary>Sets the shim of RelationshipManager.VerifyIsNotRelated()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject">
            <summary>Shim type of System.Data.Objects.DataClasses.StructuralObject</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.#ctor(System.Data.Objects.DataClasses.StructuralObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.GetValidValueOf1M0StringBooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Boolean,System.Boolean,``0})">
            <summary>Sets the shim of StructuralObject.GetValidValue(!!0 currentValue, String property, Boolean isNullable, Boolean isInitialized)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueOf1M0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,System.String,``0})">
            <summary>Sets the shim of StructuralObject.SetValidValue(!!0 oldValue, !!0 newValue, String property)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.VerifyComplexObjectIsNotNullOf1M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,``0})">
            <summary>Sets the shim of StructuralObject.VerifyComplexObjectIsNotNull(!!0 complexObject, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.BinaryEqualsByteArrayByteArray">
            <summary>Sets the shim of StructuralObject.BinaryEquals(Byte[] first, Byte[] second)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.Constructor">
            <summary>Sets the shim of StructuralObject.StructuralObject()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.DefaultDateTimeValue">
            <summary>Sets the shim of StructuralObject.DefaultDateTimeValue()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.GetValidValueByteArray">
            <summary>Sets the shim of StructuralObject.GetValidValue(Byte[] currentValue)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.OnPropertyChangedString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.OnPropertyChangingString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.ReportPropertyChangedString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.ReportPropertyChangingString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Boolean value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByteArrayBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte[] value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByteArrayBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte[] value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Byte value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTime">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTime value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTimeOffset">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTimeOffset value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTimeOffsetString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTimeOffset value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDateTimeString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DateTime value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeographyBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeography value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeographyBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeography value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeometryBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeometry value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDbGeometryBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(DbGeometry value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDecimal">
            <summary>Sets the shim of StructuralObject.SetValidValue(Decimal value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDecimalString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Decimal value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDouble">
            <summary>Sets the shim of StructuralObject.SetValidValue(Double value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueDoubleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Double value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueGuid">
            <summary>Sets the shim of StructuralObject.SetValidValue(Guid value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueGuidString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Guid value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int16 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int16 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int32 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int64 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Int64 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Boolean&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Byte&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTime">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTimeOffset">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTimeOffsetString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTimeOffset&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDateTimeString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;DateTime&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDecimal">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Decimal&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDecimalString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Decimal&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDouble">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfDoubleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Double&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfGuid">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Guid&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfGuidString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Guid&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int16&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int32&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Int64&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;SByte&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;SByte&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSingle">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfSingleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;Single&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfTimeSpan">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfTimeSpanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;TimeSpan&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt16&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt32&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt64&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueNullableOfUInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(Nullable`1&lt;UInt64&gt; value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSByte">
            <summary>Sets the shim of StructuralObject.SetValidValue(SByte value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSByteString">
            <summary>Sets the shim of StructuralObject.SetValidValue(SByte value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSingle">
            <summary>Sets the shim of StructuralObject.SetValidValue(Single value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueSingleString">
            <summary>Sets the shim of StructuralObject.SetValidValue(Single value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueStringBoolean">
            <summary>Sets the shim of StructuralObject.SetValidValue(String value, Boolean isNullable)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueStringBooleanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(String value, Boolean isNullable, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueTimeSpan">
            <summary>Sets the shim of StructuralObject.SetValidValue(TimeSpan value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueTimeSpanString">
            <summary>Sets the shim of StructuralObject.SetValidValue(TimeSpan value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt16">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt16 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt16String">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt16 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt32">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt32 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt32String">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt32 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt64">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt64 value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.SetValidValueUInt64String">
            <summary>Sets the shim of StructuralObject.SetValidValue(UInt64 value, String propertyName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.StaticConstructor">
            <summary>Sets the shim of StructuralObject.StructuralObject()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.GetValidValueOf1M0StringBooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.DataClasses.StructuralObject,``0,System.String,System.Boolean,System.Boolean,``0})">
            <summary>Sets the shim of StructuralObject.GetValidValue(!!0 currentValue, String property, Boolean isNullable, Boolean isInitialized)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.SetValidValueOf1M0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.DataClasses.StructuralObject,``0,``0,System.String,``0})">
            <summary>Sets the shim of StructuralObject.SetValidValue(!!0 oldValue, !!0 newValue, String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.OnPropertyChangedString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.OnPropertyChangingString">
            <summary>Sets the shim of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.add_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Sets the shim of StructuralObject.remove_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.ReportPropertyChangedString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanged(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.ShimStructuralObject.AllInstances.ReportPropertyChangingString">
            <summary>Sets the shim of StructuralObject.ReportPropertyChanging(String property)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.StubComplexObject">
            <summary>Stub type of System.Data.Objects.DataClasses.ComplexObject</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubComplexObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubComplexObject.InitializeStub">
            <summary>Initializes a new instance of type StubComplexObject</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChanged(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChangedString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChanging(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubComplexObject.OnPropertyChangingString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubComplexObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubComplexObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubComplexObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.StubEntityObject">
            <summary>Stub type of System.Data.Objects.DataClasses.EntityObject</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubEntityObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubEntityObject.InitializeStub">
            <summary>Initializes a new instance of type StubEntityObject</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChanged(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChangedString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanged(String property)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChanging(System.String)">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubEntityObject.OnPropertyChangingString">
            <summary>Sets the stub of StructuralObject.OnPropertyChanging(String property)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubEntityObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubEntityObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubEntityObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker">
            <summary>Stub type of System.Data.Objects.DataClasses.IEntityChangeTracker</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.#ctor">
            <summary>Initializes a new instance of type StubIEntityChangeTracker</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityComplexMemberChangedStringObjectString">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityComplexMemberChangingStringObjectString">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityMemberChangedString">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityMemberChangingString">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.EntityStateGet">
            <summary>Sets the stub of IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.sde::System#Data#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanged(System.String,System.Object,System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.sde::System#Data#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanging(System.String,System.Object,System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.sde::System#Data#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanged(System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.sde::System#Data#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanging(System.String)">
            <summary>Sets the stub of IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIEntityChangeTracker.sde::System#Data#Objects#DataClasses#IEntityChangeTracker#EntityState">
            <summary>Sets the stub of IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker">
            <summary>Stub type of System.Data.Objects.DataClasses.IEntityWithChangeTracker</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker.#ctor">
            <summary>Initializes a new instance of type StubIEntityWithChangeTracker</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker.SetChangeTrackerIEntityChangeTracker">
            <summary>Sets the stub of IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityWithChangeTracker.sde::System#Data#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)">
            <summary>Sets the stub of IEntityWithChangeTracker.SetChangeTracker(IEntityChangeTracker changeTracker)</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.StubIEntityWithKey">
            <summary>Stub type of System.Data.Objects.DataClasses.IEntityWithKey</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityWithKey.#ctor">
            <summary>Initializes a new instance of type StubIEntityWithKey</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityWithKey.AttachBackingFieldToEntityKey">
            <summary>Attaches delegates to emulate StubIEntityWithKey.EntityKey as a property with a backing field.</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityWithKey.EntityKeyGet">
            <summary>Sets the stub of IEntityWithKey.get_EntityKey()</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityWithKey.EntityKeySetEntityKey">
            <summary>Sets the stub of IEntityWithKey.set_EntityKey(EntityKey value)</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIEntityWithKey.sde::System#Data#Objects#DataClasses#IEntityWithKey#EntityKey">
            <summary>Sets the stub of IEntityWithKey.get_EntityKey()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.StubIEntityWithRelationships">
            <summary>Stub type of System.Data.Objects.DataClasses.IEntityWithRelationships</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIEntityWithRelationships.#ctor">
            <summary>Initializes a new instance of type StubIEntityWithRelationships</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIEntityWithRelationships.RelationshipManagerGet">
            <summary>Sets the stub of IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIEntityWithRelationships.sde::System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager">
            <summary>Sets the stub of IEntityWithRelationships.get_RelationshipManager()</summary>
        </member>
        <member name="T:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd">
            <summary>Stub type of System.Data.Objects.DataClasses.IRelatedEnd</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.#ctor">
            <summary>Initializes a new instance of type StubIRelatedEnd</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.AddIEntityWithRelationships">
            <summary>Sets the stub of IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.AddObject">
            <summary>Sets the stub of IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.AttachIEntityWithRelationships">
            <summary>Sets the stub of IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.AttachObject">
            <summary>Sets the stub of IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.CreateSourceQuery">
            <summary>Sets the stub of IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.GetEnumerator">
            <summary>Sets the stub of IRelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.IsLoadedGet">
            <summary>Sets the stub of IRelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.Load">
            <summary>Sets the stub of IRelatedEnd.Load()</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.LoadMergeOption">
            <summary>Sets the stub of IRelatedEnd.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.RelationshipNameGet">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.RelationshipSetGet">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.RemoveIEntityWithRelationships">
            <summary>Sets the stub of IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.RemoveObject">
            <summary>Sets the stub of IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.SourceRoleNameGet">
            <summary>Sets the stub of IRelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Sets the stub of IRelatedEnd.Add(IEntityWithRelationships entity)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)">
            <summary>Sets the stub of IRelatedEnd.Add(Object entity)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Sets the stub of IRelatedEnd.Attach(IEntityWithRelationships entity)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)">
            <summary>Sets the stub of IRelatedEnd.Attach(Object entity)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery">
            <summary>Sets the stub of IRelatedEnd.CreateSourceQuery()</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#GetEnumerator">
            <summary>Sets the stub of IRelatedEnd.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Load">
            <summary>Sets the stub of IRelatedEnd.Load()</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Load(System.Data.Objects.MergeOption)">
            <summary>Sets the stub of IRelatedEnd.Load(MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
            <summary>Sets the stub of IRelatedEnd.Remove(IEntityWithRelationships entity)</summary>
        </member>
        <member name="M:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)">
            <summary>Sets the stub of IRelatedEnd.Remove(Object entity)</summary>
        </member>
        <member name="F:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.TargetRoleNameGet">
            <summary>Sets the stub of IRelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#IsLoaded">
            <summary>Sets the stub of IRelatedEnd.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#RelationshipName">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#RelationshipSet">
            <summary>Sets the stub of IRelatedEnd.get_RelationshipSet()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#SourceRoleName">
            <summary>Sets the stub of IRelatedEnd.get_SourceRoleName()</summary>
        </member>
        <member name="P:System.Data.Objects.DataClasses.Fakes.StubIRelatedEnd.sde::System#Data#Objects#DataClasses#IRelatedEnd#TargetRoleName">
            <summary>Sets the stub of IRelatedEnd.get_TargetRoleName()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimCompiledQuery">
            <summary>Shim type of System.Data.Objects.CompiledQuery</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.#ctor(System.Data.Objects.CompiledQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf10ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`10&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf11ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10``11(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`11&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf12ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11``12(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`12&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf13ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12``13(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`13&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf14ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13``14(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`14&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf15ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14``15(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`15&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf16ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15``16(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`16&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14,!!15&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf17ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15M16``17(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`17&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14,!!15,!!16&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,``1}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf3ExpressionOfFuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Func{``0,``1,``2}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`3&lt;!!0,!!1,!!2&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf4ExpressionOfFuncOfM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}},System.Func{``0,``1,``2,``3}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`4&lt;!!0,!!1,!!2,!!3&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf5ExpressionOfFuncOfM0M1M2M3M4``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}},System.Func{``0,``1,``2,``3,``4}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`5&lt;!!0,!!1,!!2,!!3,!!4&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf6ExpressionOfFuncOfM0M1M2M3M4M5``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}},System.Func{``0,``1,``2,``3,``4,``5}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`6&lt;!!0,!!1,!!2,!!3,!!4,!!5&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf7ExpressionOfFuncOfM0M1M2M3M4M5M6``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}},System.Func{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`7&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf8ExpressionOfFuncOfM0M1M2M3M4M5M6M7``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`8&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCompiledQuery.CompileOf9ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`9&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt;&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimCompiledQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimCompiledQuery.Constructor">
            <summary>Sets the shim of CompiledQuery.CompiledQuery()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimCompiledQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimCompiledQuery.AllInstances.Constructor">
            <summary>Sets the shim of CompiledQuery.CompiledQuery()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimCurrentValueRecord">
            <summary>Shim type of System.Data.Objects.CurrentValueRecord</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCurrentValueRecord.#ctor(System.Data.Objects.CurrentValueRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCurrentValueRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCurrentValueRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCurrentValueRecord.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCurrentValueRecord.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimCurrentValueRecord.Bind(System.Data.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimCurrentValueRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimCurrentValueRecord.ConstructorObjectStateEntry">
            <summary>Sets the shim of CurrentValueRecord.CurrentValueRecord(ObjectStateEntry cacheEntry)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimCurrentValueRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord">
            <summary>Shim type of System.Data.Objects.DbUpdatableDataRecord</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.#ctor(System.Data.Objects.DbUpdatableDataRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.Bind(System.Data.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.ConstructorObjectStateEntry">
            <summary>Sets the shim of DbUpdatableDataRecord.DbUpdatableDataRecord(ObjectStateEntry cacheEntry)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.DataRecordInfoGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.FieldCountGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetBooleanInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBoolean(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetByteInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetByte(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBytes(Int32 ordinal, Int64 dataIndex, Byte[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetCharInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChar(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChars(Int32 ordinal, Int64 dataIndex, Char[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetDataRecordInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataRecord(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetDataTypeNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataTypeName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetDateTimeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDateTime(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetDbDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDbDataReader(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetDecimalInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDecimal(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetDoubleInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDouble(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetFieldTypeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetFloatInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFloat(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetGuidInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetGuid(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetInt16Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt16(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt32(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetInt64Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt64(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetOrdinalString">
            <summary>Sets the shim of DbUpdatableDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetStringInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetString(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetValueInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.GetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.IsDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.IsDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.ItemGetInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.ItemGetString">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetBooleanInt32Boolean">
            <summary>Sets the shim of DbUpdatableDataRecord.SetBoolean(Int32 ordinal, Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetByteInt32Byte">
            <summary>Sets the shim of DbUpdatableDataRecord.SetByte(Int32 ordinal, Byte value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetCharInt32Char">
            <summary>Sets the shim of DbUpdatableDataRecord.SetChar(Int32 ordinal, Char value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetDataRecordInt32IDataRecord">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDataRecord(Int32 ordinal, IDataRecord value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetDateTimeInt32DateTime">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDateTime(Int32 ordinal, DateTime value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetDecimalInt32Decimal">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDecimal(Int32 ordinal, Decimal value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetDoubleInt32Double">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDouble(Int32 ordinal, Double value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetFloatInt32Single">
            <summary>Sets the shim of DbUpdatableDataRecord.SetFloat(Int32 ordinal, Single value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetGuidInt32Guid">
            <summary>Sets the shim of DbUpdatableDataRecord.SetGuid(Int32 ordinal, Guid value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetInt16Int32Int16">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt16(Int32 ordinal, Int16 value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetInt32Int32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt32(Int32 ordinal, Int32 value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetInt64Int32Int64">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt64(Int32 ordinal, Int64 value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetStringInt32String">
            <summary>Sets the shim of DbUpdatableDataRecord.SetString(Int32 ordinal, String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetValueInt32Object">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValue(Int32 ordinal, Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.SystemDataIDataRecordGetDataInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.System.Data.IDataRecord.GetData(Int32 ordinal)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.DataRecordInfoGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_DataRecordInfo()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.FieldCountGet">
            <summary>Sets the shim of DbUpdatableDataRecord.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBoolean(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetByteInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetByte(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetBytes(Int32 ordinal, Int64 dataIndex, Byte[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetCharInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChar(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetChars(Int32 ordinal, Int64 dataIndex, Char[] buffer, Int32 bufferIndex, Int32 length)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataReader(Int32 i)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDataRecordInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataRecord(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDataTypeNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDataTypeName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDateTimeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDateTime(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDbDataReaderInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDbDataReader(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDecimalInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDecimal(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetDoubleInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetDouble(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetFieldTypeInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFieldType(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetFloatInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetFloat(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetGuidInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetGuid(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetInt16Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt16(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetInt32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt32(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetInt64Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetInt64(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetNameInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetName(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetOrdinalString">
            <summary>Sets the shim of DbUpdatableDataRecord.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetStringInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetString(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetValueInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValue(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.GetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.IsDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.IsDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.ItemGetInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.ItemGetString">
            <summary>Sets the shim of DbUpdatableDataRecord.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetBooleanInt32Boolean">
            <summary>Sets the shim of DbUpdatableDataRecord.SetBoolean(Int32 ordinal, Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetByteInt32Byte">
            <summary>Sets the shim of DbUpdatableDataRecord.SetByte(Int32 ordinal, Byte value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetCharInt32Char">
            <summary>Sets the shim of DbUpdatableDataRecord.SetChar(Int32 ordinal, Char value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDBNullInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDBNull(Int32 ordinal)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDataRecordInt32IDataRecord">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDataRecord(Int32 ordinal, IDataRecord value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDateTimeInt32DateTime">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDateTime(Int32 ordinal, DateTime value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDecimalInt32Decimal">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDecimal(Int32 ordinal, Decimal value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetDoubleInt32Double">
            <summary>Sets the shim of DbUpdatableDataRecord.SetDouble(Int32 ordinal, Double value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetFloatInt32Single">
            <summary>Sets the shim of DbUpdatableDataRecord.SetFloat(Int32 ordinal, Single value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetGuidInt32Guid">
            <summary>Sets the shim of DbUpdatableDataRecord.SetGuid(Int32 ordinal, Guid value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetInt16Int32Int16">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt16(Int32 ordinal, Int16 value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetInt32Int32Int32">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt32(Int32 ordinal, Int32 value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetInt64Int32Int64">
            <summary>Sets the shim of DbUpdatableDataRecord.SetInt64(Int32 ordinal, Int64 value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetStringInt32String">
            <summary>Sets the shim of DbUpdatableDataRecord.SetString(Int32 ordinal, String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetValueInt32Object">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValue(Int32 ordinal, Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SetValuesObjectArray">
            <summary>Sets the shim of DbUpdatableDataRecord.SetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimDbUpdatableDataRecord.AllInstances.SystemDataIDataRecordGetDataInt32">
            <summary>Sets the shim of DbUpdatableDataRecord.System.Data.IDataRecord.GetData(Int32 ordinal)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimEntityFunctions">
            <summary>Shim type of System.Data.Objects.EntityFunctions</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimEntityFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimEntityFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimEntityFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddDaysNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddDays(Nullable`1&lt;DateTime&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddDaysNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddDays(Nullable`1&lt;DateTimeOffset&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddHoursNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddHours(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddHoursNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddHours(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddHoursNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddHours(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMicrosecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMicroseconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMicrosecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMicroseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMicrosecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMicroseconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMillisecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMilliseconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMillisecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMilliseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMillisecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMilliseconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMinutesNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMinutes(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMinutesNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMinutes(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMinutesNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMinutes(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMonthsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMonths(Nullable`1&lt;DateTime&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddMonthsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddMonths(Nullable`1&lt;DateTimeOffset&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddNanosecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddNanoseconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddNanosecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddNanoseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddNanosecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddNanoseconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddSecondsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddSeconds(Nullable`1&lt;DateTime&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddSecondsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddSeconds(Nullable`1&lt;DateTimeOffset&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddSecondsNullableOfTimeSpanNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddSeconds(Nullable`1&lt;TimeSpan&gt; timeValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddYearsNullableOfDateTimeNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddYears(Nullable`1&lt;DateTime&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AddYearsNullableOfDateTimeOffsetNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.AddYears(Nullable`1&lt;DateTimeOffset&gt; dateValue, Nullable`1&lt;Int32&gt; addValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AsNonUnicodeString">
            <summary>Sets the shim of EntityFunctions.AsNonUnicode(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.AsUnicodeString">
            <summary>Sets the shim of EntityFunctions.AsUnicode(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.CreateDateTimeNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfDouble">
            <summary>Sets the shim of EntityFunctions.CreateDateTime(Nullable`1&lt;Int32&gt; year, Nullable`1&lt;Int32&gt; month, Nullable`1&lt;Int32&gt; day, Nullable`1&lt;Int32&gt; hour, Nullable`1&lt;Int32&gt; minute, Nullable`1&lt;Double&gt; second)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.CreateDateTimeOffsetNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32NullableOfDoubleNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.CreateDateTimeOffset(Nullable`1&lt;Int32&gt; year, Nullable`1&lt;Int32&gt; month, Nullable`1&lt;Int32&gt; day, Nullable`1&lt;Int32&gt; hour, Nullable`1&lt;Int32&gt; minute, Nullable`1&lt;Double&gt; second, Nullable`1&lt;Int32&gt; timeZoneOffset)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.CreateTimeNullableOfInt32NullableOfInt32NullableOfDouble">
            <summary>Sets the shim of EntityFunctions.CreateTime(Nullable`1&lt;Int32&gt; hour, Nullable`1&lt;Int32&gt; minute, Nullable`1&lt;Double&gt; second)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffDaysNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffDays(Nullable`1&lt;DateTime&gt; dateValue1, Nullable`1&lt;DateTime&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffDaysNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffDays(Nullable`1&lt;DateTimeOffset&gt; dateValue1, Nullable`1&lt;DateTimeOffset&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffHoursNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffHours(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffHoursNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffHours(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffHoursNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of EntityFunctions.DiffHours(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMicrosecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffMicroseconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMicrosecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffMicroseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMicrosecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of EntityFunctions.DiffMicroseconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMillisecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffMilliseconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMillisecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffMilliseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMillisecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of EntityFunctions.DiffMilliseconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMinutesNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffMinutes(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMinutesNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffMinutes(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMinutesNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of EntityFunctions.DiffMinutes(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMonthsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffMonths(Nullable`1&lt;DateTime&gt; dateValue1, Nullable`1&lt;DateTime&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffMonthsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffMonths(Nullable`1&lt;DateTimeOffset&gt; dateValue1, Nullable`1&lt;DateTimeOffset&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffNanosecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffNanoseconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffNanosecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffNanoseconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffNanosecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of EntityFunctions.DiffNanoseconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffSecondsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffSeconds(Nullable`1&lt;DateTime&gt; timeValue1, Nullable`1&lt;DateTime&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffSecondsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffSeconds(Nullable`1&lt;DateTimeOffset&gt; timeValue1, Nullable`1&lt;DateTimeOffset&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffSecondsNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of EntityFunctions.DiffSeconds(Nullable`1&lt;TimeSpan&gt; timeValue1, Nullable`1&lt;TimeSpan&gt; timeValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffYearsNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.DiffYears(Nullable`1&lt;DateTime&gt; dateValue1, Nullable`1&lt;DateTime&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.DiffYearsNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.DiffYears(Nullable`1&lt;DateTimeOffset&gt; dateValue1, Nullable`1&lt;DateTimeOffset&gt; dateValue2)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.GetTotalOffsetMinutesNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.GetTotalOffsetMinutes(Nullable`1&lt;DateTimeOffset&gt; dateTimeOffsetArgument)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.LeftStringNullableOfInt64">
            <summary>Sets the shim of EntityFunctions.Left(String stringArgument, Nullable`1&lt;Int64&gt; length)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.ReverseString">
            <summary>Sets the shim of EntityFunctions.Reverse(String stringArgument)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.RightStringNullableOfInt64">
            <summary>Sets the shim of EntityFunctions.Right(String stringArgument, Nullable`1&lt;Int64&gt; length)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfDecimal">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfDouble">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfInt32">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfInt64">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of EntityFunctions.StandardDeviation(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfDecimal">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfDouble">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfInt32">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfInt64">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.StandardDeviationPIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of EntityFunctions.StandardDeviationP(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.TruncateNullableOfDecimalNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.Truncate(Nullable`1&lt;Decimal&gt; value, Nullable`1&lt;Int32&gt; digits)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.TruncateNullableOfDoubleNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.Truncate(Nullable`1&lt;Double&gt; value, Nullable`1&lt;Int32&gt; digits)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.TruncateTimeNullableOfDateTime">
            <summary>Sets the shim of EntityFunctions.TruncateTime(Nullable`1&lt;DateTime&gt; dateValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.TruncateTimeNullableOfDateTimeOffset">
            <summary>Sets the shim of EntityFunctions.TruncateTime(Nullable`1&lt;DateTimeOffset&gt; dateValue)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfDecimal">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfDouble">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfInt32">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfInt64">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of EntityFunctions.Var(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfDecimal">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Decimal&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfDouble">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Double&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfInt32">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Int32&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfInt64">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Int64&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfNullableOfDecimal">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Decimal&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfNullableOfDouble">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Double&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimEntityFunctions.VarPIEnumerableOfNullableOfInt64">
            <summary>Sets the shim of EntityFunctions.VarP(IEnumerable`1&lt;Nullable`1&lt;Int64&gt;&gt; collection)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectContext">
            <summary>Shim type of System.Data.Objects.ObjectContext</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.#ctor(System.Data.Objects.ObjectContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.ApplyCurrentValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyCurrentValues(String entitySetName, !!0 currentEntity)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.ApplyOriginalValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyOriginalValues(String entitySetName, !!0 originalEntity)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ObjectContext.CreateObject()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.CreateObjectSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.CreateObjectSetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet(String entitySetName)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.CreateQueryOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectContext.CreateQuery(String queryString, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.ExecuteFunctionOf1StringMergeOptionObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, MergeOption mergeOption, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.ExecuteFunctionOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.ExecuteStoreQueryOf1StringStringMergeOptionObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Data.Objects.MergeOption,System.Object[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, MergeOption mergeOption, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.LoadPropertyOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.LoadPropertyOf1M0ExpressionOfFuncOfM0ObjectMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.MaterializedDataRecordOf1EntityCommandDbDataReaderInt32ReadOnlyMetadataCollectionOfEntitySetEdmTypeArrayMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EntityClient.EntityCommand,System.Data.Common.DbDataReader,System.Int32,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EntitySet},System.Data.Metadata.Edm.EdmType[],System.Data.Objects.MergeOption,System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.MaterializedDataRecord(EntityCommand entityCommand, DbDataReader storeReader, Int32 resultSetIndex, ReadOnlyMetadataCollection`1&lt;EntitySet&gt; entitySets, EdmType[] edmTypes, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.ParsePropertySelectorExpressionOf1ExpressionOfFuncOfM0ObjectBooleanOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String})">
            <summary>Sets the shim of ObjectContext.ParsePropertySelectorExpression(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, Boolean&amp; removedConvert)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.TranslateOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.TranslateOf1DbDataReaderStringMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader, String entitySetName, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AcceptAllChanges">
            <summary>Sets the shim of ObjectContext.AcceptAllChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AddObjectStringObject">
            <summary>Sets the shim of ObjectContext.AddObject(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ApplyPropertyChangesStringObject">
            <summary>Sets the shim of ObjectContext.ApplyPropertyChanges(String entitySetName, Object changed)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AttachIEntityWithKey">
            <summary>Sets the shim of ObjectContext.Attach(IEntityWithKey entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AttachToStringObject">
            <summary>Sets the shim of ObjectContext.AttachTo(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.CommandTimeoutGet">
            <summary>Sets the shim of ObjectContext.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of ObjectContext.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ConnectionGet">
            <summary>Sets the shim of ObjectContext.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ConstructorEntityConnection">
            <summary>Sets the shim of ObjectContext.ObjectContext(EntityConnection connection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ConstructorEntityConnectionString">
            <summary>Sets the shim of ObjectContext.ObjectContext(EntityConnection connection, String defaultContainerName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ConstructorString">
            <summary>Sets the shim of ObjectContext.ObjectContext(String connectionString)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ConstructorStringString">
            <summary>Sets the shim of ObjectContext.ObjectContext(String connectionString, String defaultContainerName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ContextOptionsGet">
            <summary>Sets the shim of ObjectContext.get_ContextOptions()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.CreateDatabase">
            <summary>Sets the shim of ObjectContext.CreateDatabase()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.CreateDatabaseScript">
            <summary>Sets the shim of ObjectContext.CreateDatabaseScript()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.CreateEntityKeyStringObject">
            <summary>Sets the shim of ObjectContext.CreateEntityKey(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.CreateProxyTypesIEnumerableOfType">
            <summary>Sets the shim of ObjectContext.CreateProxyTypes(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DatabaseExists">
            <summary>Sets the shim of ObjectContext.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DefaultContainerNameGet">
            <summary>Sets the shim of ObjectContext.get_DefaultContainerName()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DefaultContainerNameSetString">
            <summary>Sets the shim of ObjectContext.set_DefaultContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DeleteDatabase">
            <summary>Sets the shim of ObjectContext.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DeleteObjectObject">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DeleteObjectObjectEntitySet">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DetachObject">
            <summary>Sets the shim of ObjectContext.Detach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DetachObjectEntitySet">
            <summary>Sets the shim of ObjectContext.Detach(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DetectChanges">
            <summary>Sets the shim of ObjectContext.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.Dispose">
            <summary>Sets the shim of ObjectContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.DisposeBoolean">
            <summary>Sets the shim of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.EnsureConnection">
            <summary>Sets the shim of ObjectContext.EnsureConnection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.EnsureMetadata">
            <summary>Sets the shim of ObjectContext.EnsureMetadata()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ExecuteFunctionStringObjectParameterArray">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ExecuteStoreCommandStringObjectArray">
            <summary>Sets the shim of ObjectContext.ExecuteStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.GetEntitySetFromNameString">
            <summary>Sets the shim of ObjectContext.GetEntitySetFromName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.GetEntitySetStringString">
            <summary>Sets the shim of ObjectContext.GetEntitySet(String entitySetName, String entityContainerName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.GetKnownProxyTypes">
            <summary>Sets the shim of ObjectContext.GetKnownProxyTypes()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.GetObjectByKeyEntityKey">
            <summary>Sets the shim of ObjectContext.GetObjectByKey(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.GetObjectTypeType">
            <summary>Sets the shim of ObjectContext.GetObjectType(Type type)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.GetTypeUsageType">
            <summary>Sets the shim of ObjectContext.GetTypeUsage(Type entityCLRType)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.InMaterializationGet">
            <summary>Sets the shim of ObjectContext.get_InMaterialization()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.InMaterializationSetBoolean">
            <summary>Sets the shim of ObjectContext.set_InMaterialization(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.LoadPropertyObjectString">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.LoadPropertyObjectStringMergeOption">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectContext.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ObjectMaterializedAddObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.add_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ObjectMaterializedRemoveObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.remove_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectContext.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.OnMaterializedHasHandlersGet">
            <summary>Sets the shim of ObjectContext.get_OnMaterializedHasHandlers()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.OnObjectMaterializedObject">
            <summary>Sets the shim of ObjectContext.OnObjectMaterialized(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.QueryProviderGet">
            <summary>Sets the shim of ObjectContext.get_QueryProvider()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.RefreshRefreshModeIEnumerable">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.RefreshRefreshModeObject">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.ReleaseConnection">
            <summary>Sets the shim of ObjectContext.ReleaseConnection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.SaveChanges">
            <summary>Sets the shim of ObjectContext.SaveChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.SaveChangesBoolean">
            <summary>Sets the shim of ObjectContext.SaveChanges(Boolean acceptChangesDuringSave)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.SaveChangesSaveOptions">
            <summary>Sets the shim of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.SavingChangesAddEventHandler">
            <summary>Sets the shim of ObjectContext.add_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.SavingChangesRemoveEventHandler">
            <summary>Sets the shim of ObjectContext.remove_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.TryGetObjectByKeyEntityKeyObjectOut">
            <summary>Sets the shim of ObjectContext.TryGetObjectByKey(EntityKey key, Object&amp; value)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ApplyCurrentValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyCurrentValues(String entitySetName, !!0 currentEntity)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ApplyOriginalValuesOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,``0,``0})">
            <summary>Sets the shim of ObjectContext.ApplyOriginalValues(String entitySetName, !!0 originalEntity)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,``0})">
            <summary>Sets the shim of ObjectContext.CreateObject()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateObjectSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.Data.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateObjectSetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,System.Data.Objects.ObjectSet{``0}})">
            <summary>Sets the shim of ObjectContext.CreateObjectSet(String entitySetName)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateQueryOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectContext.CreateQuery(String queryString, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteFunctionOf1StringMergeOptionObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, MergeOption mergeOption, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteFunctionOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,System.Object[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreQueryOf1StringStringMergeOptionObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.String,System.String,System.Data.Objects.MergeOption,System.Object[],System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.ExecuteStoreQuery(String commandText, String entitySetName, MergeOption mergeOption, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Objects.ObjectContext,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyOf1M0ExpressionOfFuncOfM0ObjectMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Objects.ObjectContext,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption})">
            <summary>Sets the shim of ObjectContext.LoadProperty(!!0 entity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; selector, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.MaterializedDataRecordOf1EntityCommandDbDataReaderInt32ReadOnlyMetadataCollectionOfEntitySetEdmTypeArrayMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.Data.EntityClient.EntityCommand,System.Data.Common.DbDataReader,System.Int32,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EntitySet},System.Data.Metadata.Edm.EdmType[],System.Data.Objects.MergeOption,System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.MaterializedDataRecord(EntityCommand entityCommand, DbDataReader storeReader, Int32 resultSetIndex, ReadOnlyMetadataCollection`1&lt;EntitySet&gt; entitySets, EdmType[] edmTypes, MergeOption mergeOption)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.TranslateOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.Data.Common.DbDataReader,System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.TranslateOf1DbDataReaderStringMergeOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectContext,System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectContext.Translate(DbDataReader reader, String entitySetName, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.AcceptAllChanges">
            <summary>Sets the shim of ObjectContext.AcceptAllChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.AddObjectStringObject">
            <summary>Sets the shim of ObjectContext.AddObject(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ApplyPropertyChangesStringObject">
            <summary>Sets the shim of ObjectContext.ApplyPropertyChanges(String entitySetName, Object changed)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.AttachIEntityWithKey">
            <summary>Sets the shim of ObjectContext.Attach(IEntityWithKey entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.AttachToStringObject">
            <summary>Sets the shim of ObjectContext.AttachTo(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of ObjectContext.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CommandTimeoutSetNullableOfInt32">
            <summary>Sets the shim of ObjectContext.set_CommandTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ConnectionGet">
            <summary>Sets the shim of ObjectContext.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ContextOptionsGet">
            <summary>Sets the shim of ObjectContext.get_ContextOptions()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateDatabase">
            <summary>Sets the shim of ObjectContext.CreateDatabase()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateDatabaseScript">
            <summary>Sets the shim of ObjectContext.CreateDatabaseScript()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateEntityKeyStringObject">
            <summary>Sets the shim of ObjectContext.CreateEntityKey(String entitySetName, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.CreateProxyTypesIEnumerableOfType">
            <summary>Sets the shim of ObjectContext.CreateProxyTypes(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DatabaseExists">
            <summary>Sets the shim of ObjectContext.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DefaultContainerNameGet">
            <summary>Sets the shim of ObjectContext.get_DefaultContainerName()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DefaultContainerNameSetString">
            <summary>Sets the shim of ObjectContext.set_DefaultContainerName(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DeleteDatabase">
            <summary>Sets the shim of ObjectContext.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DeleteObjectObject">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DeleteObjectObjectEntitySet">
            <summary>Sets the shim of ObjectContext.DeleteObject(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DetachObject">
            <summary>Sets the shim of ObjectContext.Detach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DetachObjectEntitySet">
            <summary>Sets the shim of ObjectContext.Detach(Object entity, EntitySet expectedEntitySet)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DetectChanges">
            <summary>Sets the shim of ObjectContext.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.Dispose">
            <summary>Sets the shim of ObjectContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.EnsureConnection">
            <summary>Sets the shim of ObjectContext.EnsureConnection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.EnsureMetadata">
            <summary>Sets the shim of ObjectContext.EnsureMetadata()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteFunctionStringObjectParameterArray">
            <summary>Sets the shim of ObjectContext.ExecuteFunction(String functionName, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ExecuteStoreCommandStringObjectArray">
            <summary>Sets the shim of ObjectContext.ExecuteStoreCommand(String commandText, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.GetEntitySetFromNameString">
            <summary>Sets the shim of ObjectContext.GetEntitySetFromName(String entitySetName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.GetEntitySetStringString">
            <summary>Sets the shim of ObjectContext.GetEntitySet(String entitySetName, String entityContainerName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.GetObjectByKeyEntityKey">
            <summary>Sets the shim of ObjectContext.GetObjectByKey(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.GetTypeUsageType">
            <summary>Sets the shim of ObjectContext.GetTypeUsage(Type entityCLRType)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.InMaterializationGet">
            <summary>Sets the shim of ObjectContext.get_InMaterialization()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.InMaterializationSetBoolean">
            <summary>Sets the shim of ObjectContext.set_InMaterialization(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyObjectString">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.LoadPropertyObjectStringMergeOption">
            <summary>Sets the shim of ObjectContext.LoadProperty(Object entity, String navigationProperty, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectContext.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ObjectMaterializedAddObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.add_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ObjectMaterializedRemoveObjectMaterializedEventHandler">
            <summary>Sets the shim of ObjectContext.remove_ObjectMaterialized(ObjectMaterializedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectContext.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.OnMaterializedHasHandlersGet">
            <summary>Sets the shim of ObjectContext.get_OnMaterializedHasHandlers()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.OnObjectMaterializedObject">
            <summary>Sets the shim of ObjectContext.OnObjectMaterialized(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.QueryProviderGet">
            <summary>Sets the shim of ObjectContext.get_QueryProvider()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.RefreshRefreshModeIEnumerable">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, IEnumerable collection)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.RefreshRefreshModeObject">
            <summary>Sets the shim of ObjectContext.Refresh(RefreshMode refreshMode, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.ReleaseConnection">
            <summary>Sets the shim of ObjectContext.ReleaseConnection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.SaveChanges">
            <summary>Sets the shim of ObjectContext.SaveChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.SaveChangesBoolean">
            <summary>Sets the shim of ObjectContext.SaveChanges(Boolean acceptChangesDuringSave)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.SaveChangesSaveOptions">
            <summary>Sets the shim of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.SavingChangesAddEventHandler">
            <summary>Sets the shim of ObjectContext.add_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.SavingChangesRemoveEventHandler">
            <summary>Sets the shim of ObjectContext.remove_SavingChanges(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContext.AllInstances.TryGetObjectByKeyEntityKeyObjectOut">
            <summary>Sets the shim of ObjectContext.TryGetObjectByKey(EntityKey key, Object&amp; value)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectContextOptions">
            <summary>Shim type of System.Data.Objects.ObjectContextOptions</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContextOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContextOptions.#ctor(System.Data.Objects.ObjectContextOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContextOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectContextOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.Constructor">
            <summary>Sets the shim of ObjectContextOptions.ObjectContextOptions()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.LazyLoadingEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_LazyLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.LazyLoadingEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_LazyLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.ProxyCreationEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_ProxyCreationEnabled()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.ProxyCreationEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_ProxyCreationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.UseCSharpNullComparisonBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseCSharpNullComparisonBehavior()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.UseCSharpNullComparisonBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseCSharpNullComparisonBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.UseConsistentNullReferenceBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseConsistentNullReferenceBehavior()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.UseConsistentNullReferenceBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseConsistentNullReferenceBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.UseLegacyPreserveChangesBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseLegacyPreserveChangesBehavior()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.UseLegacyPreserveChangesBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseLegacyPreserveChangesBehavior(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.LazyLoadingEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_LazyLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.LazyLoadingEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_LazyLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.ProxyCreationEnabledGet">
            <summary>Sets the shim of ObjectContextOptions.get_ProxyCreationEnabled()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.ProxyCreationEnabledSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_ProxyCreationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseCSharpNullComparisonBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseCSharpNullComparisonBehavior()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseCSharpNullComparisonBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseCSharpNullComparisonBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseConsistentNullReferenceBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseConsistentNullReferenceBehavior()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseConsistentNullReferenceBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseConsistentNullReferenceBehavior(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseLegacyPreserveChangesBehaviorGet">
            <summary>Sets the shim of ObjectContextOptions.get_UseLegacyPreserveChangesBehavior()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectContextOptions.AllInstances.UseLegacyPreserveChangesBehaviorSetBoolean">
            <summary>Sets the shim of ObjectContextOptions.set_UseLegacyPreserveChangesBehavior(Boolean value)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs">
            <summary>Shim type of System.Data.Objects.ObjectMaterializedEventArgs</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.#ctor(System.Data.Objects.ObjectMaterializedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.ConstructorObject">
            <summary>Sets the shim of ObjectMaterializedEventArgs.ObjectMaterializedEventArgs(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.EntityGet">
            <summary>Sets the shim of ObjectMaterializedEventArgs.get_Entity()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectMaterializedEventArgs.AllInstances.EntityGet">
            <summary>Sets the shim of ObjectMaterializedEventArgs.get_Entity()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectParameter">
            <summary>Shim type of System.Data.Objects.ObjectParameter</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameter.#ctor(System.Data.Objects.ObjectParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.ConstructorStringObject">
            <summary>Sets the shim of ObjectParameter.ObjectParameter(String name, Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.ConstructorStringType">
            <summary>Sets the shim of ObjectParameter.ObjectParameter(String name, Type type)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.MappableTypeGet">
            <summary>Sets the shim of ObjectParameter.get_MappableType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.NameGet">
            <summary>Sets the shim of ObjectParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.ParameterTypeGet">
            <summary>Sets the shim of ObjectParameter.get_ParameterType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.ShallowCopy">
            <summary>Sets the shim of ObjectParameter.ShallowCopy()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.TypeUsageGet">
            <summary>Sets the shim of ObjectParameter.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.TypeUsageSetTypeUsage">
            <summary>Sets the shim of ObjectParameter.set_TypeUsage(TypeUsage value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.ValidateParameterNameString">
            <summary>Sets the shim of ObjectParameter.ValidateParameterName(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.ValueGet">
            <summary>Sets the shim of ObjectParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.ValueSetObject">
            <summary>Sets the shim of ObjectParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.MappableTypeGet">
            <summary>Sets the shim of ObjectParameter.get_MappableType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.NameGet">
            <summary>Sets the shim of ObjectParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.ParameterTypeGet">
            <summary>Sets the shim of ObjectParameter.get_ParameterType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.ShallowCopy">
            <summary>Sets the shim of ObjectParameter.ShallowCopy()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.TypeUsageGet">
            <summary>Sets the shim of ObjectParameter.get_TypeUsage()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.TypeUsageSetTypeUsage">
            <summary>Sets the shim of ObjectParameter.set_TypeUsage(TypeUsage value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.ValueGet">
            <summary>Sets the shim of ObjectParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameter.AllInstances.ValueSetObject">
            <summary>Sets the shim of ObjectParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectParameterCollection">
            <summary>Shim type of System.Data.Objects.ObjectParameterCollection</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameterCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameterCollection.#ctor(System.Data.Objects.ObjectParameterCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameterCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameterCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameterCollection.Bind(System.Collections.Generic.ICollection{System.Data.Objects.ObjectParameter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectParameterCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectParameter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AddObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Add(ObjectParameter parameter)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.Clear">
            <summary>Sets the shim of ObjectParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.ContainsObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Contains(ObjectParameter parameter)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.ContainsString">
            <summary>Sets the shim of ObjectParameterCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.CopyToObjectParameterArrayInt32">
            <summary>Sets the shim of ObjectParameterCollection.CopyTo(ObjectParameter[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.CountGet">
            <summary>Sets the shim of ObjectParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.DeepCopyObjectParameterCollection">
            <summary>Sets the shim of ObjectParameterCollection.DeepCopy(ObjectParameterCollection copyParams)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.GetCacheKey">
            <summary>Sets the shim of ObjectParameterCollection.GetCacheKey()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.IsReadOnlySystemCollectionsGenericICollectionSystemDataObjectsObjectParameterget">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.ItemGetString">
            <summary>Sets the shim of ObjectParameterCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.RemoveObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Remove(ObjectParameter parameter)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.SetReadOnlyBoolean">
            <summary>Sets the shim of ObjectParameterCollection.SetReadOnly(Boolean isReadOnly)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.SystemCollectionsGenericIEnumerableSystemDataObjectsObjectParameterGetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.AddObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Add(ObjectParameter parameter)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.Clear">
            <summary>Sets the shim of ObjectParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.ContainsObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Contains(ObjectParameter parameter)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.ContainsString">
            <summary>Sets the shim of ObjectParameterCollection.Contains(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.CopyToObjectParameterArrayInt32">
            <summary>Sets the shim of ObjectParameterCollection.CopyTo(ObjectParameter[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.CountGet">
            <summary>Sets the shim of ObjectParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.GetCacheKey">
            <summary>Sets the shim of ObjectParameterCollection.GetCacheKey()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.IsReadOnlySystemCollectionsGenericICollectionSystemDataObjectsObjectParameterget">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ObjectParameterCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.RemoveObjectParameter">
            <summary>Sets the shim of ObjectParameterCollection.Remove(ObjectParameter parameter)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.SetReadOnlyBoolean">
            <summary>Sets the shim of ObjectParameterCollection.SetReadOnly(Boolean isReadOnly)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.SystemCollectionsGenericIEnumerableSystemDataObjectsObjectParameterGetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectParameterCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectQuery">
            <summary>Shim type of System.Data.Objects.ObjectQuery</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery.#ctor(System.Data.Objects.ObjectQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.CommandTextGet">
            <summary>Sets the shim of ObjectQuery.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ContextGet">
            <summary>Sets the shim of ObjectQuery.get_Context()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.EnablePlanCachingGet">
            <summary>Sets the shim of ObjectQuery.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of ObjectQuery.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.GetResultType">
            <summary>Sets the shim of ObjectQuery.GetResultType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.MergeOptionGet">
            <summary>Sets the shim of ObjectQuery.get_MergeOption()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.MergeOptionSetMergeOption">
            <summary>Sets the shim of ObjectQuery.set_MergeOption(MergeOption value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ParametersGet">
            <summary>Sets the shim of ObjectQuery.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.ToTraceString">
            <summary>Sets the shim of ObjectQuery.ToTraceString()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.CommandTextGet">
            <summary>Sets the shim of ObjectQuery.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ContextGet">
            <summary>Sets the shim of ObjectQuery.get_Context()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.EnablePlanCachingGet">
            <summary>Sets the shim of ObjectQuery.get_EnablePlanCaching()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.EnablePlanCachingSetBoolean">
            <summary>Sets the shim of ObjectQuery.set_EnablePlanCaching(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.GetResultType">
            <summary>Sets the shim of ObjectQuery.GetResultType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.MergeOptionGet">
            <summary>Sets the shim of ObjectQuery.get_MergeOption()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.MergeOptionSetMergeOption">
            <summary>Sets the shim of ObjectQuery.set_MergeOption(MergeOption value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ParametersGet">
            <summary>Sets the shim of ObjectQuery.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of ObjectQuery.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectQuery.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectQuery.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery.AllInstances.ToTraceString">
            <summary>Sets the shim of ObjectQuery.ToTraceString()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectQuery`1">
            <summary>Shim type of System.Data.Objects.ObjectQuery`1</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.#ctor(System.Data.Objects.ObjectQuery{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IOrderedQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.OfType()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.SelectValueOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.SelectValue(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.ConstructorEntitySetBaseObjectContextMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ObjectQuery`1(EntitySetBase entitySet, ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.ConstructorStringObjectContext">
            <summary>Sets the shim of ObjectQuery`1.ObjectQuery`1(String commandText, ObjectContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.ConstructorStringObjectContextMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ObjectQuery`1(String commandText, ObjectContext context, MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.Distinct">
            <summary>Sets the shim of ObjectQuery`1.Distinct()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.ExceptObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Except(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.ExecuteInternalMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ExecuteInternal(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery`1.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectQuery`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.GetExpression">
            <summary>Sets the shim of ObjectQuery`1.GetExpression()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectQuery`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.GroupByStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.GroupBy(String keys, String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.IncludeString">
            <summary>Sets the shim of ObjectQuery`1.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.IntersectObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Intersect(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.MergeAsMergeOption">
            <summary>Sets the shim of ObjectQuery`1.MergeAs(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.NameGet">
            <summary>Sets the shim of ObjectQuery`1.get_Name()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.NameSetString">
            <summary>Sets the shim of ObjectQuery`1.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.OrderByStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.OrderBy(String keys, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.SelectStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Select(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.SkipStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Skip(String keys, String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.TopStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Top(String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.UnionAllObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.UnionAll(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.UnionObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Union(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.WhereStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Where(String predicate, ObjectParameter[] parameters)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectQuery{`0},System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.OfType()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.SelectValueOf1StringObjectParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectQuery{`0},System.String,System.Data.Objects.ObjectParameter[],System.Data.Objects.ObjectQuery{``0}})">
            <summary>Sets the shim of ObjectQuery`1.SelectValue(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.Distinct">
            <summary>Sets the shim of ObjectQuery`1.Distinct()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.ExceptObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Except(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.ExecuteInternalMergeOption">
            <summary>Sets the shim of ObjectQuery`1.ExecuteInternal(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.ExecuteMergeOption">
            <summary>Sets the shim of ObjectQuery`1.Execute(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectQuery`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.GetExpression">
            <summary>Sets the shim of ObjectQuery`1.GetExpression()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectQuery`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.GroupByStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.GroupBy(String keys, String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.IncludeString">
            <summary>Sets the shim of ObjectQuery`1.Include(String path)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.IntersectObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Intersect(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.MergeAsMergeOption">
            <summary>Sets the shim of ObjectQuery`1.MergeAs(MergeOption mergeOption)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.NameGet">
            <summary>Sets the shim of ObjectQuery`1.get_Name()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.NameSetString">
            <summary>Sets the shim of ObjectQuery`1.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.OrderByStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.OrderBy(String keys, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.SelectStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Select(String projection, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.SkipStringStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Skip(String keys, String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.TopStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Top(String count, ObjectParameter[] parameters)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.UnionAllObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.UnionAll(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.UnionObjectQueryOfT0">
            <summary>Sets the shim of ObjectQuery`1.Union(ObjectQuery`1&lt;!0&gt; query)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectQuery`1.AllInstances.WhereStringObjectParameterArray">
            <summary>Sets the shim of ObjectQuery`1.Where(String predicate, ObjectParameter[] parameters)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectResult">
            <summary>Shim type of System.Data.Objects.ObjectResult</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.#ctor(System.Data.Objects.ObjectResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.GetNextResultOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult.GetNextResult()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.Constructor">
            <summary>Sets the shim of ObjectResult.ObjectResult()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectResult.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult.AllInstances.GetNextResultOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectResult,System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult.GetNextResult()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ObjectResult.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of ObjectResult.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectResult`1">
            <summary>Shim type of System.Data.Objects.ObjectResult`1</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.#ctor(System.Data.Objects.ObjectResult{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.GetNextResultInternalOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult`1.GetNextResultInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.Dispose">
            <summary>Sets the shim of ObjectResult`1.Dispose()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.ElementTypeGet">
            <summary>Sets the shim of ObjectResult`1.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.GetEnumerator">
            <summary>Sets the shim of ObjectResult`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectResult`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectResult`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectResult`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectResult`1.AllInstances.GetNextResultInternalOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectResult{`0},System.Data.Objects.ObjectResult{``0}})">
            <summary>Sets the shim of ObjectResult`1.GetNextResultInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.AllInstances.Dispose">
            <summary>Sets the shim of ObjectResult`1.Dispose()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ObjectResult`1.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ObjectResult`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.AllInstances.GetEnumeratorInternal">
            <summary>Sets the shim of ObjectResult`1.GetEnumeratorInternal()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectResult`1.AllInstances.GetIListSourceListInternal">
            <summary>Sets the shim of ObjectResult`1.GetIListSourceListInternal()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectSet`1">
            <summary>Shim type of System.Data.Objects.ObjectSet`1</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.#ctor(System.Data.Objects.ObjectSet{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IOrderedQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IOrderedQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.Data.Objects.IObjectSet{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AddObjectT0">
            <summary>Sets the shim of ObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.ApplyCurrentValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyCurrentValues(!0 currentEntity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.ApplyOriginalValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyOriginalValues(!0 originalEntity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AttachT0">
            <summary>Sets the shim of ObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.ConstructorEntitySetObjectContext">
            <summary>Sets the shim of ObjectSet`1.ObjectSet`1(EntitySet entitySet, ObjectContext context)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.CreateObject">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.DeleteObjectT0">
            <summary>Sets the shim of ObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.DetachT0">
            <summary>Sets the shim of ObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.EntitySetGet">
            <summary>Sets the shim of ObjectSet`1.get_EntitySet()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.CreateObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectSet{`0},``0})">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.AddObjectT0">
            <summary>Sets the shim of ObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.ApplyCurrentValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyCurrentValues(!0 currentEntity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.ApplyOriginalValuesT0">
            <summary>Sets the shim of ObjectSet`1.ApplyOriginalValues(!0 originalEntity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.AttachT0">
            <summary>Sets the shim of ObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.CreateObject">
            <summary>Sets the shim of ObjectSet`1.CreateObject()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.DeleteObjectT0">
            <summary>Sets the shim of ObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.DetachT0">
            <summary>Sets the shim of ObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectSet`1.AllInstances.EntitySetGet">
            <summary>Sets the shim of ObjectSet`1.get_EntitySet()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectStateEntry">
            <summary>Shim type of System.Data.Objects.ObjectStateEntry</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateEntry.#ctor(System.Data.Objects.ObjectStateEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateEntry.Bind(System.Data.Objects.DataClasses.IEntityChangeTracker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.ConstructorObjectStateManagerEntitySetEntityState">
            <summary>Sets the shim of ObjectStateEntry.ObjectStateEntry(ObjectStateManager cache, EntitySet entitySet, EntityState state)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.EntitySetGet">
            <summary>Sets the shim of ObjectStateEntry.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.EntityStateSystemDataObjectsDataClassesIEntityChangeTrackerget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.IsKeyEntrySystemDataIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.IEntityStateEntry.get_IsKeyEntry()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.ModifiedPropertiesSystemDataIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.IEntityStateEntry.get_ModifiedProperties()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectStateEntry.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.Reset">
            <summary>Sets the shim of ObjectStateEntry.Reset()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.StateGet">
            <summary>Sets the shim of ObjectStateEntry.get_State()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.StateSetEntityState">
            <summary>Sets the shim of ObjectStateEntry.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.SystemDataObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangedStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.SystemDataObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangingStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.SystemDataObjectsDataClassesIEntityChangeTrackerEntityMemberChangedString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.SystemDataObjectsDataClassesIEntityChangeTrackerEntityMemberChangingString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.ValidateState">
            <summary>Sets the shim of ObjectStateEntry.ValidateState()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.EntitySetGet">
            <summary>Sets the shim of ObjectStateEntry.get_EntitySet()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.EntityStateSystemDataObjectsDataClassesIEntityChangeTrackerget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.get_EntityState()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.IsKeyEntrySystemDataIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.IEntityStateEntry.get_IsKeyEntry()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.ModifiedPropertiesSystemDataIEntityStateEntryget">
            <summary>Sets the shim of ObjectStateEntry.System.Data.IEntityStateEntry.get_ModifiedProperties()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.ObjectStateManagerGet">
            <summary>Sets the shim of ObjectStateEntry.get_ObjectStateManager()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.Reset">
            <summary>Sets the shim of ObjectStateEntry.Reset()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.StateGet">
            <summary>Sets the shim of ObjectStateEntry.get_State()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.StateSetEntityState">
            <summary>Sets the shim of ObjectStateEntry.set_State(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangedStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataObjectsDataClassesIEntityChangeTrackerEntityComplexMemberChangingStringObjectString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(String entityMemberName, Object complexObject, String complexObjectMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataObjectsDataClassesIEntityChangeTrackerEntityMemberChangedString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.SystemDataObjectsDataClassesIEntityChangeTrackerEntityMemberChangingString">
            <summary>Sets the shim of ObjectStateEntry.System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(String entityMemberName)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateEntry.AllInstances.ValidateState">
            <summary>Sets the shim of ObjectStateEntry.ValidateState()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectStateManager">
            <summary>Shim type of System.Data.Objects.ObjectStateManager</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateManager.#ctor(System.Data.Objects.ObjectStateManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateManager.ChangeRelationshipStateOf1M0ObjectExpressionOfFuncOfM0ObjectEntityState``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState,System.Data.Objects.ObjectStateEntry})">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(!!0 sourceEntity, Object targetEntity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; navigationPropertySelector, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AssertAllForeignKeyIndexEntriesAreValid">
            <summary>Sets the shim of ObjectStateManager.AssertAllForeignKeyIndexEntriesAreValid()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangeObjectStateObjectEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeObjectState(Object entity, EntityState entityState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangeRelationshipStateObjectObjectStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String navigationProperty, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangeRelationshipStateObjectObjectStringStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String relationshipName, String targetRoleName, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingEntityMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingEntityMember()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingEntityMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingEntityMember(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingMember()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingMember(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingObjectGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingObject()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingObjectSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingObject(Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingOldValueGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingOldValue()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingOldValueSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingOldValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingStateGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingState()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ChangingStateSetEntityState">
            <summary>Sets the shim of ObjectStateManager.set_ChangingState(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ConstructorMetadataWorkspace">
            <summary>Sets the shim of ObjectStateManager.ObjectStateManager(MetadataWorkspace metadataWorkspace)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.CreateEntityKeyEntitySetObject">
            <summary>Sets the shim of ObjectStateManager.CreateEntityKey(EntitySet entitySet, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.DegradePromotedRelationships">
            <summary>Sets the shim of ObjectStateManager.DegradePromotedRelationships()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.DetectChanges">
            <summary>Sets the shim of ObjectStateManager.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.Dispose">
            <summary>Sets the shim of ObjectStateManager.Dispose()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.EntityDeletedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.EntityDeletedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.EntityInvokingFKSetterGet">
            <summary>Sets the shim of ObjectStateManager.get_EntityInvokingFKSetter()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.EntityInvokingFKSetterSetObject">
            <summary>Sets the shim of ObjectStateManager.set_EntityInvokingFKSetter(Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntriesCountEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntriesCount(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntriesEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntries(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntryEntityKey">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.GetObjectStateEntryObject">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.GetRelationshipManagerObject">
            <summary>Sets the shim of ObjectStateManager.GetRelationshipManager(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.InRelationshipFixupGet">
            <summary>Sets the shim of ObjectStateManager.get_InRelationshipFixup()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.IsDisposedGet">
            <summary>Sets the shim of ObjectStateManager.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectStateManager.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ObjectStateManagerChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.ObjectStateManagerChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.OnObjectStateManagerChangedCollectionChangeActionObject">
            <summary>Sets the shim of ObjectStateManager.OnObjectStateManagerChanged(CollectionChangeAction action, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.RemoveForeignKeyFromIndexEntityKey">
            <summary>Sets the shim of ObjectStateManager.RemoveForeignKeyFromIndex(EntityKey foreignKey)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.RemoveRelationshipsObjectContextMergeOptionAssociationSetEntityKeyAssociationEndMember">
            <summary>Sets the shim of ObjectStateManager.RemoveRelationships(ObjectContext context, MergeOption mergeOption, AssociationSet associationSet, EntityKey sourceKey, AssociationEndMember sourceMember)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.SaveOriginalValuesGet">
            <summary>Sets the shim of ObjectStateManager.get_SaveOriginalValues()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.SaveOriginalValuesSetBoolean">
            <summary>Sets the shim of ObjectStateManager.set_SaveOriginalValues(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.SomeEntryWithConceptualNullExists">
            <summary>Sets the shim of ObjectStateManager.SomeEntryWithConceptualNullExists()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.SystemDataIEntityStateManagerTryGetReferenceKeyEntityKeyAssociationEndMemberEntityKeyOut">
            <summary>Sets the shim of ObjectStateManager.System.Data.IEntityStateManager.TryGetReferenceKey(EntityKey dependentKey, AssociationEndMember principalRole, EntityKey&amp; principalKey)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.TryGetObjectStateEntryEntityKeyObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(EntityKey key, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.TryGetObjectStateEntryObjectObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(Object entity, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.TryGetRelationshipManagerObjectRelationshipManagerOut">
            <summary>Sets the shim of ObjectStateManager.TryGetRelationshipManager(Object entity, RelationshipManager&amp; relationshipManager)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeRelationshipStateOf1M0ObjectExpressionOfFuncOfM0ObjectEntityState``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Objects.ObjectStateManager,``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState,System.Data.Objects.ObjectStateEntry})">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(!!0 sourceEntity, Object targetEntity, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; navigationPropertySelector, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.AssertAllForeignKeyIndexEntriesAreValid">
            <summary>Sets the shim of ObjectStateManager.AssertAllForeignKeyIndexEntriesAreValid()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeObjectStateObjectEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeObjectState(Object entity, EntityState entityState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeRelationshipStateObjectObjectStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String navigationProperty, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangeRelationshipStateObjectObjectStringStringEntityState">
            <summary>Sets the shim of ObjectStateManager.ChangeRelationshipState(Object sourceEntity, Object targetEntity, String relationshipName, String targetRoleName, EntityState relationshipState)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingEntityMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingEntityMember()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingEntityMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingEntityMember(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingMemberGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingMember()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingMemberSetString">
            <summary>Sets the shim of ObjectStateManager.set_ChangingMember(String value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingObjectGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingObject()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingObjectSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingObject(Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingOldValueGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingOldValue()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingOldValueSetObject">
            <summary>Sets the shim of ObjectStateManager.set_ChangingOldValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingStateGet">
            <summary>Sets the shim of ObjectStateManager.get_ChangingState()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ChangingStateSetEntityState">
            <summary>Sets the shim of ObjectStateManager.set_ChangingState(EntityState value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.CreateEntityKeyEntitySetObject">
            <summary>Sets the shim of ObjectStateManager.CreateEntityKey(EntitySet entitySet, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.DegradePromotedRelationships">
            <summary>Sets the shim of ObjectStateManager.DegradePromotedRelationships()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.DetectChanges">
            <summary>Sets the shim of ObjectStateManager.DetectChanges()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.Dispose">
            <summary>Sets the shim of ObjectStateManager.Dispose()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityDeletedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityDeletedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_EntityDeleted(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityInvokingFKSetterGet">
            <summary>Sets the shim of ObjectStateManager.get_EntityInvokingFKSetter()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.EntityInvokingFKSetterSetObject">
            <summary>Sets the shim of ObjectStateManager.set_EntityInvokingFKSetter(Object value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntriesCountEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntriesCount(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntriesEntityState">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntries(EntityState state)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntryEntityKey">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(EntityKey key)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.GetObjectStateEntryObject">
            <summary>Sets the shim of ObjectStateManager.GetObjectStateEntry(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.GetRelationshipManagerObject">
            <summary>Sets the shim of ObjectStateManager.GetRelationshipManager(Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.InRelationshipFixupGet">
            <summary>Sets the shim of ObjectStateManager.get_InRelationshipFixup()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.IsDisposedGet">
            <summary>Sets the shim of ObjectStateManager.get_IsDisposed()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.MetadataWorkspaceGet">
            <summary>Sets the shim of ObjectStateManager.get_MetadataWorkspace()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ObjectStateManagerChangedAddCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.add_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.ObjectStateManagerChangedRemoveCollectionChangeEventHandler">
            <summary>Sets the shim of ObjectStateManager.remove_ObjectStateManagerChanged(CollectionChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.OnObjectStateManagerChangedCollectionChangeActionObject">
            <summary>Sets the shim of ObjectStateManager.OnObjectStateManagerChanged(CollectionChangeAction action, Object entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.RemoveForeignKeyFromIndexEntityKey">
            <summary>Sets the shim of ObjectStateManager.RemoveForeignKeyFromIndex(EntityKey foreignKey)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.SaveOriginalValuesGet">
            <summary>Sets the shim of ObjectStateManager.get_SaveOriginalValues()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.SaveOriginalValuesSetBoolean">
            <summary>Sets the shim of ObjectStateManager.set_SaveOriginalValues(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.SomeEntryWithConceptualNullExists">
            <summary>Sets the shim of ObjectStateManager.SomeEntryWithConceptualNullExists()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.SystemDataIEntityStateManagerTryGetReferenceKeyEntityKeyAssociationEndMemberEntityKeyOut">
            <summary>Sets the shim of ObjectStateManager.System.Data.IEntityStateManager.TryGetReferenceKey(EntityKey dependentKey, AssociationEndMember principalRole, EntityKey&amp; principalKey)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.TryGetObjectStateEntryEntityKeyObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(EntityKey key, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.TryGetObjectStateEntryObjectObjectStateEntryOut">
            <summary>Sets the shim of ObjectStateManager.TryGetObjectStateEntry(Object entity, ObjectStateEntry&amp; entry)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimObjectStateManager.AllInstances.TryGetRelationshipManagerObjectRelationshipManagerOut">
            <summary>Sets the shim of ObjectStateManager.TryGetRelationshipManager(Object entity, RelationshipManager&amp; relationshipManager)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimOriginalValueRecord">
            <summary>Shim type of System.Data.Objects.OriginalValueRecord</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimOriginalValueRecord.#ctor(System.Data.Objects.OriginalValueRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimOriginalValueRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimOriginalValueRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimOriginalValueRecord.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimOriginalValueRecord.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimOriginalValueRecord.Bind(System.Data.IExtendedDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimOriginalValueRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimOriginalValueRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimProxyDataContractResolver">
            <summary>Shim type of System.Data.Objects.ProxyDataContractResolver</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimProxyDataContractResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimProxyDataContractResolver.#ctor(System.Data.Objects.ProxyDataContractResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimProxyDataContractResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.ShimProxyDataContractResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimProxyDataContractResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimProxyDataContractResolver.Constructor">
            <summary>Sets the shim of ProxyDataContractResolver.ProxyDataContractResolver()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimProxyDataContractResolver.ResolveNameStringStringTypeDataContractResolver">
            <summary>Sets the shim of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimProxyDataContractResolver.TryResolveTypeTypeTypeDataContractResolverXmlDictionaryStringOutXmlDictionaryStringOut">
            <summary>Sets the shim of ProxyDataContractResolver.TryResolveType(Type dataContractType, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.ShimProxyDataContractResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimProxyDataContractResolver.AllInstances.ResolveNameStringStringTypeDataContractResolver">
            <summary>Sets the shim of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.ShimProxyDataContractResolver.AllInstances.TryResolveTypeTypeTypeDataContractResolverXmlDictionaryStringOutXmlDictionaryStringOut">
            <summary>Sets the shim of ProxyDataContractResolver.TryResolveType(Type dataContractType, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.StubIObjectSet`1">
            <summary>Stub type of System.Data.Objects.IObjectSet`1</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubIObjectSet`1.#ctor">
            <summary>Initializes a new instance of type StubIObjectSet</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.AddObjectT0">
            <summary>Sets the stub of IObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.AttachT0">
            <summary>Sets the stub of IObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.DeleteObjectT0">
            <summary>Sets the stub of IObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.DetachT0">
            <summary>Sets the stub of IObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubIObjectSet`1.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubIObjectSet`1.global::System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubIObjectSet`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubIObjectSet`1.sde::System#Data#Objects#IObjectSet{TEntity}#AddObject(`0)">
            <summary>Sets the stub of IObjectSet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubIObjectSet`1.sde::System#Data#Objects#IObjectSet{TEntity}#Attach(`0)">
            <summary>Sets the stub of IObjectSet`1.Attach(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubIObjectSet`1.sde::System#Data#Objects#IObjectSet{TEntity}#DeleteObject(`0)">
            <summary>Sets the stub of IObjectSet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubIObjectSet`1.sde::System#Data#Objects#IObjectSet{TEntity}#Detach(`0)">
            <summary>Sets the stub of IObjectSet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubIObjectSet`1.global::System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubIObjectSet`1.global::System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubIObjectSet`1.global::System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.StubObjectContext">
            <summary>Stub type of System.Data.Objects.ObjectContext</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectContext.#ctor(System.Data.EntityClient.EntityConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectContext.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectContext.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectContext.Dispose(System.Boolean)">
            <summary>Sets the stub of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubObjectContext.DisposeBoolean">
            <summary>Sets the stub of ObjectContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectContext.InitializeStub">
            <summary>Initializes a new instance of type StubObjectContext</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectContext.SaveChanges(System.Data.Objects.SaveOptions)">
            <summary>Sets the stub of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubObjectContext.SaveChangesSaveOptions">
            <summary>Sets the stub of ObjectContext.SaveChanges(SaveOptions options)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubObjectContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubObjectContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubObjectContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.StubObjectStateManager">
            <summary>Stub type of System.Data.Objects.ObjectStateManager</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubObjectStateManager.InitializeStub">
            <summary>Initializes a new instance of type StubObjectStateManager</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubObjectStateManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubObjectStateManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubObjectStateManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Objects.Fakes.StubProxyDataContractResolver">
            <summary>Stub type of System.Data.Objects.ProxyDataContractResolver</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubProxyDataContractResolver.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubProxyDataContractResolver.InitializeStub">
            <summary>Initializes a new instance of type StubProxyDataContractResolver</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
            <summary>Sets the stub of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubProxyDataContractResolver.ResolveNameStringStringTypeDataContractResolver">
            <summary>Sets the stub of ProxyDataContractResolver.ResolveName(String typeName, String typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)</summary>
        </member>
        <member name="M:System.Data.Objects.Fakes.StubProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
            <summary>Sets the stub of ProxyDataContractResolver.TryResolveType(Type dataContractType, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="F:System.Data.Objects.Fakes.StubProxyDataContractResolver.TryResolveTypeTypeTypeDataContractResolverXmlDictionaryStringOutXmlDictionaryStringOut">
            <summary>Sets the stub of ProxyDataContractResolver.TryResolveType(Type dataContractType, Type declaredType, DataContractResolver knownTypeResolver, XmlDictionaryString&amp; typeName, XmlDictionaryString&amp; typeNamespace)</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubProxyDataContractResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubProxyDataContractResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Objects.Fakes.StubProxyDataContractResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions">
            <summary>Shim type of System.Data.Objects.SqlClient.SqlFunctions</summary>
        </member>
        <member name="M:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.AcosNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Acos(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.AcosNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Acos(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.AsciiString">
            <summary>Sets the shim of SqlFunctions.Ascii(String arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.AsinNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Asin(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.AsinNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Asin(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.Atan2NullableOfDecimalNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Atan2(Nullable`1&lt;Decimal&gt; arg1, Nullable`1&lt;Decimal&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.Atan2NullableOfDoubleNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Atan2(Nullable`1&lt;Double&gt; arg1, Nullable`1&lt;Double&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.AtanNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Atan(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.AtanNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Atan(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CharIndexByteArrayByteArray">
            <summary>Sets the shim of SqlFunctions.CharIndex(Byte[] toSearch, Byte[] target)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CharIndexByteArrayByteArrayNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.CharIndex(Byte[] toSearch, Byte[] target, Nullable`1&lt;Int32&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CharIndexByteArrayByteArrayNullableOfInt64">
            <summary>Sets the shim of SqlFunctions.CharIndex(Byte[] toSearch, Byte[] target, Nullable`1&lt;Int64&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CharIndexStringString">
            <summary>Sets the shim of SqlFunctions.CharIndex(String toSearch, String target)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CharIndexStringStringNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.CharIndex(String toSearch, String target, Nullable`1&lt;Int32&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CharIndexStringStringNullableOfInt64">
            <summary>Sets the shim of SqlFunctions.CharIndex(String toSearch, String target, Nullable`1&lt;Int64&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CharNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.Char(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumAggregateIEnumerableOfInt32">
            <summary>Sets the shim of SqlFunctions.ChecksumAggregate(IEnumerable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumAggregateIEnumerableOfNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.ChecksumAggregate(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumByteArray">
            <summary>Sets the shim of SqlFunctions.Checksum(Byte[] arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumByteArrayByteArray">
            <summary>Sets the shim of SqlFunctions.Checksum(Byte[] arg1, Byte[] arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumByteArrayByteArrayByteArray">
            <summary>Sets the shim of SqlFunctions.Checksum(Byte[] arg1, Byte[] arg2, Byte[] arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfBoolean">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Boolean&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfBooleanNullableOfBoolean">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Boolean&gt; arg1, Nullable`1&lt;Boolean&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfBooleanNullableOfBooleanNullableOfBoolean">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Boolean&gt; arg1, Nullable`1&lt;Boolean&gt; arg2, Nullable`1&lt;Boolean&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;DateTime&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;DateTime&gt; arg1, Nullable`1&lt;DateTime&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;DateTime&gt; arg1, Nullable`1&lt;DateTime&gt; arg2, Nullable`1&lt;DateTime&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;DateTimeOffset&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;DateTimeOffset&gt; arg1, Nullable`1&lt;DateTimeOffset&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeOffsetNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;DateTimeOffset&gt; arg1, Nullable`1&lt;DateTimeOffset&gt; arg2, Nullable`1&lt;DateTimeOffset&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDecimalNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Decimal&gt; arg1, Nullable`1&lt;Decimal&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDecimalNullableOfDecimalNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Decimal&gt; arg1, Nullable`1&lt;Decimal&gt; arg2, Nullable`1&lt;Decimal&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDoubleNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Double&gt; arg1, Nullable`1&lt;Double&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfDoubleNullableOfDoubleNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Double&gt; arg1, Nullable`1&lt;Double&gt; arg2, Nullable`1&lt;Double&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfGuid">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Guid&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfGuidNullableOfGuid">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Guid&gt; arg1, Nullable`1&lt;Guid&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfGuidNullableOfGuidNullableOfGuid">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;Guid&gt; arg1, Nullable`1&lt;Guid&gt; arg2, Nullable`1&lt;Guid&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;TimeSpan&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;TimeSpan&gt; arg1, Nullable`1&lt;TimeSpan&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumNullableOfTimeSpanNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.Checksum(Nullable`1&lt;TimeSpan&gt; arg1, Nullable`1&lt;TimeSpan&gt; arg2, Nullable`1&lt;TimeSpan&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumString">
            <summary>Sets the shim of SqlFunctions.Checksum(String arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumStringString">
            <summary>Sets the shim of SqlFunctions.Checksum(String arg1, String arg2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ChecksumStringStringString">
            <summary>Sets the shim of SqlFunctions.Checksum(String arg1, String arg2, String arg3)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CosNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Cos(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CosNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Cos(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CotNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Cot(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CotNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Cot(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CurrentTimestamp">
            <summary>Sets the shim of SqlFunctions.CurrentTimestamp()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.CurrentUser">
            <summary>Sets the shim of SqlFunctions.CurrentUser()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthByteArray">
            <summary>Sets the shim of SqlFunctions.DataLength(Byte[] arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthNullableOfBoolean">
            <summary>Sets the shim of SqlFunctions.DataLength(Nullable`1&lt;Boolean&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DataLength(Nullable`1&lt;DateTime&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DataLength(Nullable`1&lt;DateTimeOffset&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.DataLength(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.DataLength(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthNullableOfGuid">
            <summary>Sets the shim of SqlFunctions.DataLength(Nullable`1&lt;Guid&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DataLength(Nullable`1&lt;TimeSpan&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DataLengthString">
            <summary>Sets the shim of SqlFunctions.DataLength(String arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, Nullable`1&lt;DateTimeOffset&gt; dateTimeOffsetArg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, Nullable`1&lt;TimeSpan&gt; time)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleString">
            <summary>Sets the shim of SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, String date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetString">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeString">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanString">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringStringNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, String startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringStringNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, String startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringStringNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, String startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateDiffStringStringString">
            <summary>Sets the shim of SqlFunctions.DateDiff(String datePartArg, String startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateNameStringNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DateName(String datePartArg, Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateNameStringNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DateName(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateNameStringNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DateName(String datePartArg, Nullable`1&lt;TimeSpan&gt; date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DateNameStringString">
            <summary>Sets the shim of SqlFunctions.DateName(String datePartArg, String date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DatePartStringNullableOfDateTime">
            <summary>Sets the shim of SqlFunctions.DatePart(String datePartArg, Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DatePartStringNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlFunctions.DatePart(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DatePartStringNullableOfTimeSpan">
            <summary>Sets the shim of SqlFunctions.DatePart(String datePartArg, Nullable`1&lt;TimeSpan&gt; date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DatePartStringString">
            <summary>Sets the shim of SqlFunctions.DatePart(String datePartArg, String date)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DegreesNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Degrees(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DegreesNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Degrees(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DegreesNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.Degrees(Nullable`1&lt;Int32&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DegreesNullableOfInt64">
            <summary>Sets the shim of SqlFunctions.Degrees(Nullable`1&lt;Int64&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.DifferenceStringString">
            <summary>Sets the shim of SqlFunctions.Difference(String string1, String string2)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ExpNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Exp(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ExpNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Exp(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.GetDate">
            <summary>Sets the shim of SqlFunctions.GetDate()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.GetUtcDate">
            <summary>Sets the shim of SqlFunctions.GetUtcDate()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.HostName">
            <summary>Sets the shim of SqlFunctions.HostName()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.IsDateString">
            <summary>Sets the shim of SqlFunctions.IsDate(String arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.IsNumericString">
            <summary>Sets the shim of SqlFunctions.IsNumeric(String arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.Log10NullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Log10(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.Log10NullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Log10(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.LogNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Log(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.LogNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Log(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.NCharNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.NChar(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.PatIndexStringString">
            <summary>Sets the shim of SqlFunctions.PatIndex(String stringPattern, String target)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.Pi">
            <summary>Sets the shim of SqlFunctions.Pi()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.QuoteNameString">
            <summary>Sets the shim of SqlFunctions.QuoteName(String stringArg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.QuoteNameStringString">
            <summary>Sets the shim of SqlFunctions.QuoteName(String stringArg, String quoteCharacter)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.RadiansNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Radians(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.RadiansNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Radians(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.RadiansNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.Radians(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.RadiansNullableOfInt64">
            <summary>Sets the shim of SqlFunctions.Radians(Nullable`1&lt;Int64&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.Rand">
            <summary>Sets the shim of SqlFunctions.Rand()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.RandNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.Rand(Nullable`1&lt;Int32&gt; seed)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.ReplicateStringNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.Replicate(String target, Nullable`1&lt;Int32&gt; count)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SignNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Sign(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SignNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Sign(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SignNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.Sign(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SignNullableOfInt64">
            <summary>Sets the shim of SqlFunctions.Sign(Nullable`1&lt;Int64&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SinNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Sin(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SinNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Sin(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SoundCodeString">
            <summary>Sets the shim of SqlFunctions.SoundCode(String arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SpaceNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.Space(Nullable`1&lt;Int32&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SquareNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Square(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SquareNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Square(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SquareRootNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.SquareRoot(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.SquareRootNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.SquareRoot(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.StringConvertNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.StringConvert(Nullable`1&lt;Decimal&gt; number)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.StringConvertNullableOfDecimalNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.StringConvert(Nullable`1&lt;Decimal&gt; number, Nullable`1&lt;Int32&gt; length)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.StringConvertNullableOfDecimalNullableOfInt32NullableOfInt32">
            <summary>Sets the shim of SqlFunctions.StringConvert(Nullable`1&lt;Decimal&gt; number, Nullable`1&lt;Int32&gt; length, Nullable`1&lt;Int32&gt; decimalArg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.StringConvertNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.StringConvert(Nullable`1&lt;Double&gt; number)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.StringConvertNullableOfDoubleNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.StringConvert(Nullable`1&lt;Double&gt; number, Nullable`1&lt;Int32&gt; length)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.StringConvertNullableOfDoubleNullableOfInt32NullableOfInt32">
            <summary>Sets the shim of SqlFunctions.StringConvert(Nullable`1&lt;Double&gt; number, Nullable`1&lt;Int32&gt; length, Nullable`1&lt;Int32&gt; decimalArg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.StuffStringNullableOfInt32NullableOfInt32String">
            <summary>Sets the shim of SqlFunctions.Stuff(String stringInput, Nullable`1&lt;Int32&gt; start, Nullable`1&lt;Int32&gt; length, String stringReplacement)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.TanNullableOfDecimal">
            <summary>Sets the shim of SqlFunctions.Tan(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.TanNullableOfDouble">
            <summary>Sets the shim of SqlFunctions.Tan(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.UnicodeString">
            <summary>Sets the shim of SqlFunctions.Unicode(String arg)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.UserName">
            <summary>Sets the shim of SqlFunctions.UserName()</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlFunctions.UserNameNullableOfInt32">
            <summary>Sets the shim of SqlFunctions.UserName(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="T:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions">
            <summary>Shim type of System.Data.Objects.SqlClient.SqlSpatialFunctions</summary>
        </member>
        <member name="M:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.AsTextZMDbGeography">
            <summary>Sets the shim of SqlSpatialFunctions.AsTextZM(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.AsTextZMDbGeometry">
            <summary>Sets the shim of SqlSpatialFunctions.AsTextZM(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.BufferWithToleranceDbGeographyNullableOfDoubleNullableOfDoubleNullableOfBoolean">
            <summary>Sets the shim of SqlSpatialFunctions.BufferWithTolerance(DbGeography geographyValue, Nullable`1&lt;Double&gt; distance, Nullable`1&lt;Double&gt; tolerance, Nullable`1&lt;Boolean&gt; relative)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.BufferWithToleranceDbGeometryNullableOfDoubleNullableOfDoubleNullableOfBoolean">
            <summary>Sets the shim of SqlSpatialFunctions.BufferWithTolerance(DbGeometry geometryValue, Nullable`1&lt;Double&gt; distance, Nullable`1&lt;Double&gt; tolerance, Nullable`1&lt;Boolean&gt; relative)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.EnvelopeAngleDbGeography">
            <summary>Sets the shim of SqlSpatialFunctions.EnvelopeAngle(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.EnvelopeCenterDbGeography">
            <summary>Sets the shim of SqlSpatialFunctions.EnvelopeCenter(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.FilterDbGeographyDbGeography">
            <summary>Sets the shim of SqlSpatialFunctions.Filter(DbGeography geographyValue, DbGeography geographyOther)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.FilterDbGeometryDbGeometry">
            <summary>Sets the shim of SqlSpatialFunctions.Filter(DbGeometry geometryValue, DbGeometry geometryOther)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.InstanceOfDbGeographyString">
            <summary>Sets the shim of SqlSpatialFunctions.InstanceOf(DbGeography geographyValue, String geometryTypeName)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.InstanceOfDbGeometryString">
            <summary>Sets the shim of SqlSpatialFunctions.InstanceOf(DbGeometry geometryValue, String geometryTypeName)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.MakeValidDbGeometry">
            <summary>Sets the shim of SqlSpatialFunctions.MakeValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.NumRingsDbGeography">
            <summary>Sets the shim of SqlSpatialFunctions.NumRings(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.PointGeographyNullableOfDoubleNullableOfDoubleNullableOfInt32">
            <summary>Sets the shim of SqlSpatialFunctions.PointGeography(Nullable`1&lt;Double&gt; latitude, Nullable`1&lt;Double&gt; longitude, Nullable`1&lt;Int32&gt; spatialReferenceId)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.PointGeometryNullableOfDoubleNullableOfDoubleNullableOfInt32">
            <summary>Sets the shim of SqlSpatialFunctions.PointGeometry(Nullable`1&lt;Double&gt; xCoordinate, Nullable`1&lt;Double&gt; yCoordinate, Nullable`1&lt;Int32&gt; spatialReferenceId)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.ReduceDbGeographyNullableOfDouble">
            <summary>Sets the shim of SqlSpatialFunctions.Reduce(DbGeography geographyValue, Nullable`1&lt;Double&gt; tolerance)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.ReduceDbGeometryNullableOfDouble">
            <summary>Sets the shim of SqlSpatialFunctions.Reduce(DbGeometry geometryValue, Nullable`1&lt;Double&gt; tolerance)</summary>
        </member>
        <member name="P:System.Data.Objects.SqlClient.Fakes.ShimSqlSpatialFunctions.RingNDbGeographyNullableOfInt32">
            <summary>Sets the shim of SqlSpatialFunctions.RingN(DbGeography geographyValue, Nullable`1&lt;Int32&gt; index)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeography">
            <summary>Shim type of System.Data.Spatial.DbGeography</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeography.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeography.#ctor(System.Data.Spatial.DbGeography)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeography.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeography.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AreaGet">
            <summary>Sets the shim of DbGeography.get_Area()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AsBinary">
            <summary>Sets the shim of DbGeography.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AsGml">
            <summary>Sets the shim of DbGeography.AsGml()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AsText">
            <summary>Sets the shim of DbGeography.AsText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeography.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeography.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.ConstructorDbSpatialServicesObject">
            <summary>Sets the shim of DbGeography.DbGeography(DbSpatialServices spatialServices, Object spatialProviderValue)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeography.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.DefaultCoordinateSystemIdGet">
            <summary>Sets the shim of DbGeography.get_DefaultCoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.DifferenceDbGeography">
            <summary>Sets the shim of DbGeography.Difference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.DimensionGet">
            <summary>Sets the shim of DbGeography.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.DisjointDbGeography">
            <summary>Sets the shim of DbGeography.Disjoint(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.DistanceDbGeography">
            <summary>Sets the shim of DbGeography.Distance(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.ElementAtInt32">
            <summary>Sets the shim of DbGeography.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.ElementCountGet">
            <summary>Sets the shim of DbGeography.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.ElevationGet">
            <summary>Sets the shim of DbGeography.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.EndPointGet">
            <summary>Sets the shim of DbGeography.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.FromBinaryByteArray">
            <summary>Sets the shim of DbGeography.FromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.FromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.FromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.FromGmlString">
            <summary>Sets the shim of DbGeography.FromGml(String geographyMarkup)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.FromGmlStringInt32">
            <summary>Sets the shim of DbGeography.FromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.FromTextString">
            <summary>Sets the shim of DbGeography.FromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.FromTextStringInt32">
            <summary>Sets the shim of DbGeography.FromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.GeographyCollectionFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.GeographyCollectionFromTextStringInt32">
            <summary>Sets the shim of DbGeography.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.IntersectionDbGeography">
            <summary>Sets the shim of DbGeography.Intersection(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.IntersectsDbGeography">
            <summary>Sets the shim of DbGeography.Intersects(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.IsClosedGet">
            <summary>Sets the shim of DbGeography.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.IsEmptyGet">
            <summary>Sets the shim of DbGeography.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.LatitudeGet">
            <summary>Sets the shim of DbGeography.get_Latitude()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.LengthGet">
            <summary>Sets the shim of DbGeography.get_Length()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.LineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.LineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.LineFromTextStringInt32">
            <summary>Sets the shim of DbGeography.LineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.LongitudeGet">
            <summary>Sets the shim of DbGeography.get_Longitude()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.MeasureGet">
            <summary>Sets the shim of DbGeography.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.MultiLineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.MultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.MultiLineFromTextStringInt32">
            <summary>Sets the shim of DbGeography.MultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.MultiPointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.MultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.MultiPointFromTextStringInt32">
            <summary>Sets the shim of DbGeography.MultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.MultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.MultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.MultiPolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeography.MultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.PointAtInt32">
            <summary>Sets the shim of DbGeography.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.PointCountGet">
            <summary>Sets the shim of DbGeography.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.PointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.PointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.PointFromTextStringInt32">
            <summary>Sets the shim of DbGeography.PointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.PolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeography.PolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.PolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeography.PolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.ProviderValueGet">
            <summary>Sets the shim of DbGeography.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.SpatialEqualsDbGeography">
            <summary>Sets the shim of DbGeography.SpatialEquals(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeography.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.StartPointGet">
            <summary>Sets the shim of DbGeography.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.SymmetricDifferenceDbGeography">
            <summary>Sets the shim of DbGeography.SymmetricDifference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.ToString">
            <summary>Sets the shim of DbGeography.ToString()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.UnionDbGeography">
            <summary>Sets the shim of DbGeography.Union(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.WellKnownValueGet">
            <summary>Sets the shim of DbGeography.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.WellKnownValueSetDbGeographyWellKnownValue">
            <summary>Sets the shim of DbGeography.set_WellKnownValue(DbGeographyWellKnownValue value)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.AreaGet">
            <summary>Sets the shim of DbGeography.get_Area()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.AsBinary">
            <summary>Sets the shim of DbGeography.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.AsGml">
            <summary>Sets the shim of DbGeography.AsGml()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.AsText">
            <summary>Sets the shim of DbGeography.AsText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeography.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeography.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeography.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.DifferenceDbGeography">
            <summary>Sets the shim of DbGeography.Difference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.DimensionGet">
            <summary>Sets the shim of DbGeography.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.DisjointDbGeography">
            <summary>Sets the shim of DbGeography.Disjoint(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.DistanceDbGeography">
            <summary>Sets the shim of DbGeography.Distance(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.ElementAtInt32">
            <summary>Sets the shim of DbGeography.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.ElementCountGet">
            <summary>Sets the shim of DbGeography.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.ElevationGet">
            <summary>Sets the shim of DbGeography.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.EndPointGet">
            <summary>Sets the shim of DbGeography.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.IntersectionDbGeography">
            <summary>Sets the shim of DbGeography.Intersection(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.IntersectsDbGeography">
            <summary>Sets the shim of DbGeography.Intersects(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.IsClosedGet">
            <summary>Sets the shim of DbGeography.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.IsEmptyGet">
            <summary>Sets the shim of DbGeography.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.LatitudeGet">
            <summary>Sets the shim of DbGeography.get_Latitude()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.LengthGet">
            <summary>Sets the shim of DbGeography.get_Length()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.LongitudeGet">
            <summary>Sets the shim of DbGeography.get_Longitude()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.MeasureGet">
            <summary>Sets the shim of DbGeography.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.PointAtInt32">
            <summary>Sets the shim of DbGeography.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.PointCountGet">
            <summary>Sets the shim of DbGeography.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.ProviderValueGet">
            <summary>Sets the shim of DbGeography.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.SpatialEqualsDbGeography">
            <summary>Sets the shim of DbGeography.SpatialEquals(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeography.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.StartPointGet">
            <summary>Sets the shim of DbGeography.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.SymmetricDifferenceDbGeography">
            <summary>Sets the shim of DbGeography.SymmetricDifference(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.ToString01">
            <summary>Sets the shim of DbGeography.ToString()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.UnionDbGeography">
            <summary>Sets the shim of DbGeography.Union(DbGeography other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.WellKnownValueGet">
            <summary>Sets the shim of DbGeography.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeography.AllInstances.WellKnownValueSetDbGeographyWellKnownValue">
            <summary>Sets the shim of DbGeography.set_WellKnownValue(DbGeographyWellKnownValue value)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue">
            <summary>Shim type of System.Data.Spatial.DbGeographyWellKnownValue</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.#ctor(System.Data.Spatial.DbGeographyWellKnownValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.Constructor">
            <summary>Sets the shim of DbGeographyWellKnownValue.DbGeographyWellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownTextGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.WellKnownTextSetString">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownTextGet">
            <summary>Sets the shim of DbGeographyWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeographyWellKnownValue.AllInstances.WellKnownTextSetString">
            <summary>Sets the shim of DbGeographyWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeometry">
            <summary>Shim type of System.Data.Spatial.DbGeometry</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometry.#ctor(System.Data.Spatial.DbGeometry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AreaGet">
            <summary>Sets the shim of DbGeometry.get_Area()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AsBinary">
            <summary>Sets the shim of DbGeometry.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AsGml">
            <summary>Sets the shim of DbGeometry.AsGml()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AsText">
            <summary>Sets the shim of DbGeometry.AsText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeometry.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.BoundaryGet">
            <summary>Sets the shim of DbGeometry.get_Boundary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeometry.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.CentroidGet">
            <summary>Sets the shim of DbGeometry.get_Centroid()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ConstructorDbSpatialServicesObject">
            <summary>Sets the shim of DbGeometry.DbGeometry(DbSpatialServices spatialServices, Object spatialProviderValue)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ContainsDbGeometry">
            <summary>Sets the shim of DbGeometry.Contains(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ConvexHullGet">
            <summary>Sets the shim of DbGeometry.get_ConvexHull()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometry.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.CrossesDbGeometry">
            <summary>Sets the shim of DbGeometry.Crosses(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.DefaultCoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometry.get_DefaultCoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.DifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.Difference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.DimensionGet">
            <summary>Sets the shim of DbGeometry.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.DisjointDbGeometry">
            <summary>Sets the shim of DbGeometry.Disjoint(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.DistanceDbGeometry">
            <summary>Sets the shim of DbGeometry.Distance(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ElementAtInt32">
            <summary>Sets the shim of DbGeometry.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ElementCountGet">
            <summary>Sets the shim of DbGeometry.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ElevationGet">
            <summary>Sets the shim of DbGeometry.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.EndPointGet">
            <summary>Sets the shim of DbGeometry.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.EnvelopeGet">
            <summary>Sets the shim of DbGeometry.get_Envelope()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ExteriorRingGet">
            <summary>Sets the shim of DbGeometry.get_ExteriorRing()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.FromBinaryByteArray">
            <summary>Sets the shim of DbGeometry.FromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.FromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.FromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.FromGmlString">
            <summary>Sets the shim of DbGeometry.FromGml(String geometryMarkup)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.FromGmlStringInt32">
            <summary>Sets the shim of DbGeometry.FromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.FromTextString">
            <summary>Sets the shim of DbGeometry.FromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.FromTextStringInt32">
            <summary>Sets the shim of DbGeometry.FromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.GeometryCollectionFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.GeometryCollectionFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.InteriorRingAtInt32">
            <summary>Sets the shim of DbGeometry.InteriorRingAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.InteriorRingCountGet">
            <summary>Sets the shim of DbGeometry.get_InteriorRingCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.IntersectionDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersection(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.IntersectsDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersects(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.IsClosedGet">
            <summary>Sets the shim of DbGeometry.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.IsEmptyGet">
            <summary>Sets the shim of DbGeometry.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.IsRingGet">
            <summary>Sets the shim of DbGeometry.get_IsRing()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.IsSimpleGet">
            <summary>Sets the shim of DbGeometry.get_IsSimple()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.IsValidGet">
            <summary>Sets the shim of DbGeometry.get_IsValid()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.LengthGet">
            <summary>Sets the shim of DbGeometry.get_Length()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.LineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.LineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.LineFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.LineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.MeasureGet">
            <summary>Sets the shim of DbGeometry.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.MultiLineFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.MultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.MultiLineFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.MultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.MultiPointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.MultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.MultiPointFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.MultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.MultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.MultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.MultiPolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.MultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.OverlapsDbGeometry">
            <summary>Sets the shim of DbGeometry.Overlaps(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.PointAtInt32">
            <summary>Sets the shim of DbGeometry.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.PointCountGet">
            <summary>Sets the shim of DbGeometry.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.PointFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.PointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.PointFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.PointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.PointOnSurfaceGet">
            <summary>Sets the shim of DbGeometry.get_PointOnSurface()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.PolygonFromBinaryByteArrayInt32">
            <summary>Sets the shim of DbGeometry.PolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.PolygonFromTextStringInt32">
            <summary>Sets the shim of DbGeometry.PolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ProviderValueGet">
            <summary>Sets the shim of DbGeometry.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.RelateDbGeometryString">
            <summary>Sets the shim of DbGeometry.Relate(DbGeometry other, String matrix)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.SpatialEqualsDbGeometry">
            <summary>Sets the shim of DbGeometry.SpatialEquals(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeometry.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.StartPointGet">
            <summary>Sets the shim of DbGeometry.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.SymmetricDifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.SymmetricDifference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.ToString">
            <summary>Sets the shim of DbGeometry.ToString()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.TouchesDbGeometry">
            <summary>Sets the shim of DbGeometry.Touches(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.UnionDbGeometry">
            <summary>Sets the shim of DbGeometry.Union(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.WellKnownValueGet">
            <summary>Sets the shim of DbGeometry.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.WellKnownValueSetDbGeometryWellKnownValue">
            <summary>Sets the shim of DbGeometry.set_WellKnownValue(DbGeometryWellKnownValue value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.WithinDbGeometry">
            <summary>Sets the shim of DbGeometry.Within(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.XCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_XCoordinate()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.YCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_YCoordinate()</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.AreaGet">
            <summary>Sets the shim of DbGeometry.get_Area()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.AsBinary">
            <summary>Sets the shim of DbGeometry.AsBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.AsGml">
            <summary>Sets the shim of DbGeometry.AsGml()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.AsText">
            <summary>Sets the shim of DbGeometry.AsText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.AsTextIncludingElevationAndMeasure">
            <summary>Sets the shim of DbGeometry.AsTextIncludingElevationAndMeasure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.BoundaryGet">
            <summary>Sets the shim of DbGeometry.get_Boundary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.BufferNullableOfDouble">
            <summary>Sets the shim of DbGeometry.Buffer(Nullable`1&lt;Double&gt; distance)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.CentroidGet">
            <summary>Sets the shim of DbGeometry.get_Centroid()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ContainsDbGeometry">
            <summary>Sets the shim of DbGeometry.Contains(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ConvexHullGet">
            <summary>Sets the shim of DbGeometry.get_ConvexHull()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometry.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.CrossesDbGeometry">
            <summary>Sets the shim of DbGeometry.Crosses(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.DifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.Difference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.DimensionGet">
            <summary>Sets the shim of DbGeometry.get_Dimension()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.DisjointDbGeometry">
            <summary>Sets the shim of DbGeometry.Disjoint(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.DistanceDbGeometry">
            <summary>Sets the shim of DbGeometry.Distance(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ElementAtInt32">
            <summary>Sets the shim of DbGeometry.ElementAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ElementCountGet">
            <summary>Sets the shim of DbGeometry.get_ElementCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ElevationGet">
            <summary>Sets the shim of DbGeometry.get_Elevation()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.EndPointGet">
            <summary>Sets the shim of DbGeometry.get_EndPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.EnvelopeGet">
            <summary>Sets the shim of DbGeometry.get_Envelope()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ExteriorRingGet">
            <summary>Sets the shim of DbGeometry.get_ExteriorRing()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.InteriorRingAtInt32">
            <summary>Sets the shim of DbGeometry.InteriorRingAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.InteriorRingCountGet">
            <summary>Sets the shim of DbGeometry.get_InteriorRingCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.IntersectionDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersection(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.IntersectsDbGeometry">
            <summary>Sets the shim of DbGeometry.Intersects(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.IsClosedGet">
            <summary>Sets the shim of DbGeometry.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.IsEmptyGet">
            <summary>Sets the shim of DbGeometry.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.IsRingGet">
            <summary>Sets the shim of DbGeometry.get_IsRing()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.IsSimpleGet">
            <summary>Sets the shim of DbGeometry.get_IsSimple()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.IsValidGet">
            <summary>Sets the shim of DbGeometry.get_IsValid()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.LengthGet">
            <summary>Sets the shim of DbGeometry.get_Length()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.MeasureGet">
            <summary>Sets the shim of DbGeometry.get_Measure()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.OverlapsDbGeometry">
            <summary>Sets the shim of DbGeometry.Overlaps(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.PointAtInt32">
            <summary>Sets the shim of DbGeometry.PointAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.PointCountGet">
            <summary>Sets the shim of DbGeometry.get_PointCount()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.PointOnSurfaceGet">
            <summary>Sets the shim of DbGeometry.get_PointOnSurface()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ProviderValueGet">
            <summary>Sets the shim of DbGeometry.get_ProviderValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.RelateDbGeometryString">
            <summary>Sets the shim of DbGeometry.Relate(DbGeometry other, String matrix)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.SpatialEqualsDbGeometry">
            <summary>Sets the shim of DbGeometry.SpatialEquals(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.SpatialTypeNameGet">
            <summary>Sets the shim of DbGeometry.get_SpatialTypeName()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.StartPointGet">
            <summary>Sets the shim of DbGeometry.get_StartPoint()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.SymmetricDifferenceDbGeometry">
            <summary>Sets the shim of DbGeometry.SymmetricDifference(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.ToString01">
            <summary>Sets the shim of DbGeometry.ToString()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.TouchesDbGeometry">
            <summary>Sets the shim of DbGeometry.Touches(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.UnionDbGeometry">
            <summary>Sets the shim of DbGeometry.Union(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.WellKnownValueGet">
            <summary>Sets the shim of DbGeometry.get_WellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.WellKnownValueSetDbGeometryWellKnownValue">
            <summary>Sets the shim of DbGeometry.set_WellKnownValue(DbGeometryWellKnownValue value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.WithinDbGeometry">
            <summary>Sets the shim of DbGeometry.Within(DbGeometry other)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.XCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_XCoordinate()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometry.AllInstances.YCoordinateGet">
            <summary>Sets the shim of DbGeometry.get_YCoordinate()</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue">
            <summary>Shim type of System.Data.Spatial.DbGeometryWellKnownValue</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.#ctor(System.Data.Spatial.DbGeometryWellKnownValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.Constructor">
            <summary>Sets the shim of DbGeometryWellKnownValue.DbGeometryWellKnownValue()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownTextGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.WellKnownTextSetString">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.CoordinateSystemIdGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_CoordinateSystemId()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.CoordinateSystemIdSetInt32">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_CoordinateSystemId(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownBinaryGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownBinary()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownBinarySetByteArray">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownBinary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownTextGet">
            <summary>Sets the shim of DbGeometryWellKnownValue.get_WellKnownText()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbGeometryWellKnownValue.AllInstances.WellKnownTextSetString">
            <summary>Sets the shim of DbGeometryWellKnownValue.set_WellKnownText(String value)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbSpatialDataReader">
            <summary>Shim type of System.Data.Spatial.DbSpatialDataReader</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbSpatialDataReader.#ctor(System.Data.Spatial.DbSpatialDataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbSpatialDataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbSpatialDataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialDataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialDataReader.Constructor">
            <summary>Sets the shim of DbSpatialDataReader.DbSpatialDataReader()</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbSpatialDataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbSpatialServices">
            <summary>Shim type of System.Data.Spatial.DbSpatialServices</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbSpatialServices.#ctor(System.Data.Spatial.DbSpatialServices)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbSpatialServices.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.ShimDbSpatialServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.Constructor">
            <summary>Sets the shim of DbSpatialServices.DbSpatialServices()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.CreateGeographyDbSpatialServicesObject">
            <summary>Sets the shim of DbSpatialServices.CreateGeography(DbSpatialServices spatialServices, Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.CreateGeometryDbSpatialServicesObject">
            <summary>Sets the shim of DbSpatialServices.CreateGeometry(DbSpatialServices spatialServices, Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.DefaultGet">
            <summary>Sets the shim of DbSpatialServices.get_Default()</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.StaticConstructor">
            <summary>Sets the shim of DbSpatialServices.DbSpatialServices()</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.ShimDbSpatialServices.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.AllInstances.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.ShimDbSpatialServices.AllInstances.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Sets the shim of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.StubDbSpatialDataReader">
            <summary>Stub type of System.Data.Spatial.DbSpatialDataReader</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialDataReader.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialDataReader.GetGeography(System.Int32)">
            <summary>Sets the stub of DbSpatialDataReader.GetGeography(Int32 ordinal)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialDataReader.GetGeographyInt32">
            <summary>Sets the stub of DbSpatialDataReader.GetGeography(Int32 ordinal)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialDataReader.GetGeometry(System.Int32)">
            <summary>Sets the stub of DbSpatialDataReader.GetGeometry(Int32 ordinal)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialDataReader.GetGeometryInt32">
            <summary>Sets the stub of DbSpatialDataReader.GetGeometry(Int32 ordinal)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialDataReader.InitializeStub">
            <summary>Initializes a new instance of type StubDbSpatialDataReader</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.StubDbSpatialDataReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.StubDbSpatialDataReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.StubDbSpatialDataReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Spatial.Fakes.StubDbSpatialServices">
            <summary>Stub type of System.Data.Spatial.DbSpatialServices</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsBinary(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsBinary(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsBinaryDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsBinaryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsBinary(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsGml(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsGml(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsGmlDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsGmlDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsGml(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsText(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsText(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsTextDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsTextDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsText(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Sets the stub of DbSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Buffer(System.Data.Spatial.DbGeography,System.Double)">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeography geographyValue, Double distance)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Buffer(System.Data.Spatial.DbGeometry,System.Double)">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeometry geometryValue, Double distance)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.BufferDbGeographyDouble">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeography geographyValue, Double distance)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.BufferDbGeometryDouble">
            <summary>Sets the stub of DbSpatialServices.Buffer(DbGeometry geometryValue, Double distance)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Contains(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Contains(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.ContainsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Contains(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateProviderValue(System.Data.Spatial.DbGeographyWellKnownValue)">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeographyWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateProviderValue(System.Data.Spatial.DbGeometryWellKnownValue)">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeometryWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateProviderValueDbGeographyWellKnownValue">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeographyWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateProviderValueDbGeometryWellKnownValue">
            <summary>Sets the stub of DbSpatialServices.CreateProviderValue(DbGeometryWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValue(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValue(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValueDbGeography">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.CreateWellKnownValueDbGeometry">
            <summary>Sets the stub of DbSpatialServices.CreateWellKnownValue(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Crosses(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Crosses(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.CrossesDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Crosses(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Difference(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Difference(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.DifferenceDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.DifferenceDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Difference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Disjoint(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Disjoint(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.DisjointDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.DisjointDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Disjoint(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Distance(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Distance(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.DistanceDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.DistanceDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Distance(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.ElementAt(System.Data.Spatial.DbGeography,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.ElementAt(System.Data.Spatial.DbGeometry,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.ElementAtDbGeographyInt32">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.ElementAtDbGeometryInt32">
            <summary>Sets the stub of DbSpatialServices.ElementAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyCollectionFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinary(System.Byte[])">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinaryByteArray">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromGml(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromGml(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromGmlString">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromGmlStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyFromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromProviderValue(System.Object)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromProviderValueObject">
            <summary>Sets the stub of DbSpatialServices.GeographyFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromText(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromTextString">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyMultiPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyMultiPolygonFromText(String multiPolygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeographyPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeographyPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryCollectionFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinary(System.Byte[])">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinaryByteArray">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromGml(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromGml(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromGmlString">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromGmlStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryFromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromProviderValue(System.Object)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromProviderValueObject">
            <summary>Sets the stub of DbSpatialServices.GeometryFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromText(System.String)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromTextString">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiLineFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryMultiPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPointFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromBinary(System.Byte[],System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromBinaryByteArrayInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromText(System.String,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GeometryPolygonFromTextStringInt32">
            <summary>Sets the stub of DbSpatialServices.GeometryPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetArea(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetArea(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetAreaDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetAreaDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetArea(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetBoundary(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetBoundary(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetBoundaryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetBoundary(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetCentroid(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetCentroid(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetCentroidDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetCentroid(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetConvexHull(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetConvexHull(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetConvexHullDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetConvexHull(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemId(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemId(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemIdDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetCoordinateSystemIdDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetCoordinateSystemId(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetDimension(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetDimension(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetDimensionDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetDimensionDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetDimension(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElementCount(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElementCount(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElementCountDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElementCountDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetElementCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElevation(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElevation(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElevationDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetElevationDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetElevation(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetEndPoint(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetEndPoint(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetEndPointDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetEndPointDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetEndPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetEnvelope(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetEnvelope(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetEnvelopeDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetEnvelope(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetExteriorRing(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetExteriorRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetExteriorRingDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetExteriorRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetInteriorRingCount(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetInteriorRingCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetInteriorRingCountDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetInteriorRingCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsClosed(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsClosed(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsClosedDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsClosedDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsClosed(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsEmpty(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsEmpty(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsEmptyDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsEmptyDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsEmpty(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsRing(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsRingDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsSimple(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsSimple(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsSimpleDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsSimple(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsValid(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetIsValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetIsValidDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetIsValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLatitude(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetLatitude(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLatitudeDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetLatitude(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLength(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLength(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLengthDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLengthDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetLength(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLongitude(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetLongitude(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetLongitudeDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetLongitude(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetMeasure(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetMeasure(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetMeasureDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetMeasureDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetPointCount(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetPointCount(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetPointCountDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetPointCountDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetPointCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetPointOnSurface(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetPointOnSurface(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetPointOnSurfaceDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetPointOnSurface(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeName(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeName(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeNameDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetSpatialTypeNameDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetSpatialTypeName(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetStartPoint(System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetStartPoint(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetStartPointDbGeography">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetStartPointDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetStartPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetXCoordinate(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetXCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetXCoordinateDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetXCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.GetYCoordinate(System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.GetYCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.GetYCoordinateDbGeometry">
            <summary>Sets the stub of DbSpatialServices.GetYCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.InitializeStub">
            <summary>Initializes a new instance of type StubDbSpatialServices</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.InteriorRingAt(System.Data.Spatial.DbGeometry,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.InteriorRingAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.InteriorRingAtDbGeometryInt32">
            <summary>Sets the stub of DbSpatialServices.InteriorRingAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Intersection(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Intersection(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.IntersectionDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.IntersectionDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Intersection(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Intersects(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Intersects(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.IntersectsDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.IntersectsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Intersects(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Overlaps(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Overlaps(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.OverlapsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Overlaps(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.PointAt(System.Data.Spatial.DbGeography,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.PointAt(System.Data.Spatial.DbGeometry,System.Int32)">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.PointAtDbGeographyInt32">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.PointAtDbGeometryInt32">
            <summary>Sets the stub of DbSpatialServices.PointAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Relate(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry,System.String)">
            <summary>Sets the stub of DbSpatialServices.Relate(DbGeometry geometryValue, DbGeometry otherGeometry, String matrix)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.RelateDbGeometryDbGeometryString">
            <summary>Sets the stub of DbSpatialServices.Relate(DbGeometry geometryValue, DbGeometry otherGeometry, String matrix)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.SpatialEquals(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.SpatialEquals(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.SpatialEqualsDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.SpatialEqualsDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.SpatialEquals(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.SymmetricDifference(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.SymmetricDifference(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.SymmetricDifferenceDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.SymmetricDifferenceDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.SymmetricDifference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Touches(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Touches(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.TouchesDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Touches(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Union(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Union(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.UnionDbGeographyDbGeography">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.UnionDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Union(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="M:System.Data.Spatial.Fakes.StubDbSpatialServices.Within(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
            <summary>Sets the stub of DbSpatialServices.Within(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="F:System.Data.Spatial.Fakes.StubDbSpatialServices.WithinDbGeometryDbGeometry">
            <summary>Sets the stub of DbSpatialServices.Within(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.StubDbSpatialServices.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.StubDbSpatialServices.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Spatial.Fakes.StubDbSpatialServices.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.SqlClient.Fakes.ShimSqlProviderServices">
            <summary>Shim type of System.Data.SqlClient.SqlProviderServices</summary>
        </member>
        <member name="M:System.Data.SqlClient.Fakes.ShimSqlProviderServices.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SqlClient.Fakes.ShimSqlProviderServices.#ctor(System.Data.SqlClient.SqlProviderServices)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SqlClient.Fakes.ShimSqlProviderServices.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SqlClient.Fakes.ShimSqlProviderServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.Constructor">
            <summary>Sets the shim of SqlProviderServices.SqlProviderServices()</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.CreateCommandDbCommandTree">
            <summary>Sets the shim of SqlProviderServices.CreateCommand(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the shim of SqlProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.DbGetSpatialServicesString">
            <summary>Sets the shim of SqlProviderServices.DbGetSpatialServices(String versionHint)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.EnsureSqlParameterValueObject">
            <summary>Sets the shim of SqlProviderServices.EnsureSqlParameterValue(Object value)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.GetDbProviderManifestString">
            <summary>Sets the shim of SqlProviderServices.GetDbProviderManifest(String versionHint)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.GetDbProviderManifestTokenDbConnection">
            <summary>Sets the shim of SqlProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of SqlProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String versionHint)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of SqlProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.SingletonInstanceGet">
            <summary>Sets the shim of SqlProviderServices.get_SingletonInstance()</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.SqlTypesAssemblyIsAvailableGet">
            <summary>Sets the shim of SqlProviderServices.get_SqlTypesAssemblyIsAvailable()</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.StaticConstructor">
            <summary>Sets the shim of SqlProviderServices.SqlProviderServices()</summary>
        </member>
        <member name="T:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.CreateCommandDbCommandTree">
            <summary>Sets the shim of SqlProviderServices.CreateCommand(DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Sets the shim of SqlProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Sets the shim of SqlProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.DbGetSpatialServicesString">
            <summary>Sets the shim of SqlProviderServices.DbGetSpatialServices(String versionHint)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.GetDbProviderManifestString">
            <summary>Sets the shim of SqlProviderServices.GetDbProviderManifest(String versionHint)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.GetDbProviderManifestTokenDbConnection">
            <summary>Sets the shim of SqlProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Sets the shim of SqlProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String versionHint)</summary>
        </member>
        <member name="P:System.Data.SqlClient.Fakes.ShimSqlProviderServices.AllInstances.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Sets the shim of SqlProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
    </members>
</doc>
