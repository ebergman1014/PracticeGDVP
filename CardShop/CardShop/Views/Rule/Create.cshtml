@using System.Workflow.Activities.Rules
@model CardShop.ViewModels.RulesetDetails

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Rule", FormMethod.Post, new { id = "form" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>RuleSet</legend>

        @Html.HiddenFor(model => model.rulesetWrapper.RuleSetId)
        @Html.HiddenFor(model => model.rulesetWrapper.RuleSet1)

        <div class="editor-label">
            @Html.LabelFor(model => model.rulesetWrapper.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.rulesetWrapper.Name)
            @Html.ValidationMessageFor(model => model.rulesetWrapper.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.rulesetWrapper.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.rulesetWrapper.Status)
            @Html.ValidationMessageFor(model => model.rulesetWrapper.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.rulesetWrapper.AssemblyPath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.rulesetWrapper.AssemblyPath)
            @Html.ValidationMessageFor(model => model.rulesetWrapper.AssemblyPath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.rulesetWrapper.ActivityName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.rulesetWrapper.ActivityName)
            @Html.ValidationMessageFor(model => model.rulesetWrapper.ActivityName)
        </div>

        <div>
            <h4>Rules</h4>
            <div class="rule">
                Name:
                <input type="text" class="name" />

                <p>If Condition</p>
                <div class="ifCondition">
                    Field: 
                        <input type="text" class="field" /><br />
                    Value: 
                        <input type="text" class="value" />
                </div>

                <p>Then Actions</p>
                <div class="thenActions">
                    <div class="thenAction">
                        Field:
                                <input type="text" class="field" /><br />
                        Value:
                                <input type="text" class="value" /><br />
                        <input type="button" value="Remove" class="remove" />
                    </div>
                    <input type='button' value='Add Action' class='addThen'>
                </div>

                <p>Else Actions</p>
                <div class="elseActions">
                    <div class="elseAction">
                        Field:
                                <input type="text" class="field" /><br />
                        Value:
                                <input type="text" class="value" /><br />
                        <input type="button" value="Remove" class="remove" />
                    </div>
                    <input type='button' value='Add Action' class='addElse'>
                </div>
            </div>
        </div>

        <input type="button" id="newRule" value="Add Rule" />

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.edit-rules.js")
}