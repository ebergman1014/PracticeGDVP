@{CardShop.Auth.IUserAuth auth = CardShop.Auth.UserAuth.Current;}
@if (auth.IsLoggedIn()) {
    <text>
        Logged in as @Html.ActionLink(auth.User.UserName, "Manage", "Account", routeValues: null, htmlAttributes: new { @class = "username", title = "Manage" })
        @if(auth.ActingAs != null){
            <span>Acting as: @auth.ActingAs.UserName @Html.ActionLink("[stop]","StopActingAsUser", "Admin/ManageUser", routeValues: null,  htmlAttributes: new { @class = "username", title = "Stop acting as User" })</span>
        }
        @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" })) {
            @Html.AntiForgeryToken()
            <a href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
        }
    </text>
} else {
    <ul>
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
